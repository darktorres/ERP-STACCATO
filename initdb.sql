-- MySQL Script generated by MySQL Workbench
-- Thu Apr 20 14:14:53 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema staccato
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema staccato
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `staccato` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `staccato` ;

-- -----------------------------------------------------
-- Table `staccato`.`loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`loja` (
  `idLoja` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `nomeFantasia` VARCHAR(45) NOT NULL,
  `razaoSocial` VARCHAR(60) NOT NULL,
  `tel` VARCHAR(18) NOT NULL,
  `tel2` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(20) NULL DEFAULT NULL,
  `sigla` VARCHAR(4) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `codUF` INT(11) NOT NULL DEFAULT '0',
  `porcentagemFrete` DECIMAL(15,4) NOT NULL DEFAULT '4.0000',
  `valorMinimoFrete` DECIMAL(15,4) NOT NULL DEFAULT '80.0000',
  `precoCombustivel` DECIMAL(15,4) NULL DEFAULT NULL,
  `custoTransporteTon` DECIMAL(15,4) NULL DEFAULT NULL,
  `cidadesSemQualp` VARCHAR(450) NULL DEFAULT NULL,
  `capacidadeCaminhaoGrande` INT(11) NULL DEFAULT NULL,
  `custoMotoristaCaminhaoGrande` DECIMAL(15,4) NULL DEFAULT NULL,
  `custoAjudantesCaminhaoGrande` DECIMAL(15,4) NULL DEFAULT NULL,
  `eixosCaminhaoGrande` INT(11) NULL DEFAULT NULL,
  `consumoCaminhaoGrande` DECIMAL(15,4) NULL DEFAULT NULL,
  `capacidadeCaminhaoPequeno` INT(11) NULL DEFAULT NULL,
  `custoMotoristaCaminhaoPequeno` DECIMAL(15,4) NULL DEFAULT NULL,
  `custoAjudantesCaminhaoPequeno` DECIMAL(15,4) NULL DEFAULT NULL,
  `eixosCaminhaoPequeno` INT(11) NULL DEFAULT NULL,
  `consumoCaminhaoPequeno` DECIMAL(15,4) NULL DEFAULT NULL,
  `apiQualp` VARCHAR(4500) NULL DEFAULT NULL,
  `cabecalhosQualp` VARCHAR(4500) NULL DEFAULT NULL,
  `tetoProfissionalRT` DECIMAL(15,4) NULL DEFAULT '5.0000',
  `certificadoSerie` VARCHAR(32) NULL DEFAULT NULL,
  `certificadoSenha` VARCHAR(45) NULL DEFAULT NULL,
  `porcentagemPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `porcentagemCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `lastDistribuicao` TIMESTAMP NULL DEFAULT NULL,
  `ultimoNSU` INT(11) NULL DEFAULT NULL,
  `maximoNSU` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLoja`),
  UNIQUE INDEX `idLoja_UNIQUE` (`idLoja` ASC) VISIBLE,
  UNIQUE INDEX `inscEstadual_UNIQUE` (`inscEstadual` ASC) VISIBLE,
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC) VISIBLE,
  FULLTEXT INDEX `idxFT` (`descricao`, `nomeFantasia`, `razaoSocial`) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`alcadas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`alcadas` (
  `idAlcada` INT(11) NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `tipoFuncionario` VARCHAR(45) NOT NULL DEFAULT '',
  `debito` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `credito` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `cheque` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `dinheiro` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `boleto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idAlcada`),
  UNIQUE INDEX `idAlcada_UNIQUE` (`idAlcada` ASC) VISIBLE,
  INDEX `fk_Alçadas_Loja1_idx` (`idLoja` ASC) VISIBLE,
  CONSTRAINT `fk_Alçadas_Loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`cfop_entr`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`cfop_entr` (
  `idCFOP` INT(11) NOT NULL AUTO_INCREMENT,
  `CFOP_DE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_FE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_IN` VARCHAR(18) NULL DEFAULT NULL,
  `NAT` VARCHAR(750) NULL DEFAULT NULL,
  `OBS` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`idCFOP`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`cfop_sai`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`cfop_sai` (
  `idCFOP` INT(11) NOT NULL AUTO_INCREMENT,
  `CFOP_DE` VARCHAR(15) NULL DEFAULT NULL,
  `CFOP_FE` VARCHAR(18) NULL DEFAULT NULL,
  `CFOP_IN` VARCHAR(18) NULL DEFAULT NULL,
  `NAT` VARCHAR(600) NULL DEFAULT NULL,
  `OBS` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`idCFOP`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`cidade` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `codigo` INT(11) NOT NULL,
  `nome` VARCHAR(255) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`usuario` (
  `idUsuario` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `user` VARCHAR(20) NOT NULL,
  `passwd` VARCHAR(42) NOT NULL,
  `password` VARCHAR(45) NULL DEFAULT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `email` VARCHAR(150) NULL DEFAULT NULL,
  `telefone` VARCHAR(45) NULL DEFAULT NULL,
  `especialidade` INT(11) NULL DEFAULT NULL,
  `regime` VARCHAR(45) NOT NULL DEFAULT '',
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `cc` VARCHAR(45) NULL DEFAULT NULL,
  `poupanca` TINYINT(1) NULL DEFAULT NULL,
  `nomeBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cpfBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cnpjBanco` VARCHAR(45) NULL DEFAULT NULL,
  `senhaUsoUnico` VARCHAR(4) NULL DEFAULT NULL,
  `valorMinimoFrete` DECIMAL(15,4) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUsuario`),
  UNIQUE INDEX `user_UNIQUE` (`user` ASC) VISIBLE,
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC) VISIBLE,
  INDEX `fk_Usuario_Loja1_idx` (`idLoja` ASC) VISIBLE,
  FULLTEXT INDEX `idxFT` (`nome`, `tipo`) VISIBLE,
  CONSTRAINT `fk_Usuario_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`profissional`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`profissional` (
  `idProfissional` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idUsuarioRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `pfpj` VARCHAR(45) NULL DEFAULT NULL,
  `nome_razao` VARCHAR(100) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cpf` VARCHAR(14) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(45) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(45) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(45) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(100) NULL DEFAULT NULL,
  `tipoProf` VARCHAR(45) NULL DEFAULT NULL,
  `aniversario` DATE NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `cc` VARCHAR(45) NULL DEFAULT NULL,
  `poupanca` TINYINT(1) NULL DEFAULT NULL,
  `nomeBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cpfBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cnpjBanco` VARCHAR(45) NULL DEFAULT NULL,
  `comissao` DECIMAL(15,4) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idProfissional`),
  INDEX `fk_profissional_loja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_profissional_usiuario_idx` (`idUsuarioRel` ASC) VISIBLE,
  FULLTEXT INDEX `idxFT` (`nome_razao`, `tipoProf`) VISIBLE,
  CONSTRAINT `fk_profissional_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_profissional_usiuario`
    FOREIGN KEY (`idUsuarioRel`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`cliente` (
  `idCliente` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `pfpj` VARCHAR(45) NOT NULL,
  `nome_razao` VARCHAR(100) NOT NULL,
  `nomeFantasia` VARCHAR(100) NULL DEFAULT NULL,
  `cpf` VARCHAR(14) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `dataNasc` DATE NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(100) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(100) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(150) NULL DEFAULT NULL,
  `idUsuarioRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idCadastroRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProfissionalRel` INT(10) UNSIGNED NULL DEFAULT NULL,
  `credito` DECIMAL(15,4) NULL DEFAULT NULL,
  `incompleto` TINYINT(1) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idCliente`),
  INDEX `fk_Cliente_Usuario1_idx` (`idUsuarioRel` ASC) VISIBLE,
  INDEX `fk_Cliente_Cliente1_idx` (`idCadastroRel` ASC) VISIBLE,
  INDEX `fk_Cliente_Profissional1_idx` (`idProfissionalRel` ASC) VISIBLE,
  INDEX `fk_Cadastro_Produto_idx` (`idCliente` ASC) VISIBLE,
  INDEX `index_cliente_cnpj` (`cnpj` ASC) VISIBLE,
  INDEX `index_cliente_cpf` (`cpf` ASC) VISIBLE,
  FULLTEXT INDEX `idxFT` (`nome_razao`, `nomeFantasia`, `cpf`, `cnpj`) VISIBLE,
  CONSTRAINT `fk_Cliente_Cliente1`
    FOREIGN KEY (`idCadastroRel`)
    REFERENCES `staccato`.`cliente` (`idCliente`),
  CONSTRAINT `fk_Cliente_Profissional1`
    FOREIGN KEY (`idProfissionalRel`)
    REFERENCES `staccato`.`profissional` (`idProfissional`),
  CONSTRAINT `fk_Cliente_Usuario1`
    FOREIGN KEY (`idUsuarioRel`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`cliente_has_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`cliente_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idCliente` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(100) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(100) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `qualpJson` JSON NULL DEFAULT NULL,
  `qualpData` TIMESTAMP NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Cliente_has_Endereco_Cliente1_idx` (`idCliente` ASC) VISIBLE,
  CONSTRAINT `fk_Cliente_has_Endereco_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `staccato`.`cliente` (`idCliente`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`cnab`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`cnab` (
  `idCnab` INT(11) NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NULL DEFAULT NULL,
  `banco` VARCHAR(45) NOT NULL,
  `sequencial` INT(11) NOT NULL DEFAULT '1',
  `conteudo` MEDIUMBLOB NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idCnab`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`comissao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`comissao` (
  `idComissao` INT(11) NOT NULL AUTO_INCREMENT,
  `idVendaProduto1` INT(11) NULL DEFAULT NULL,
  `Loja` VARCHAR(45) NULL DEFAULT NULL,
  `Vendedor` VARCHAR(45) NULL DEFAULT NULL,
  `idUsuario` INT NULL DEFAULT NULL,
  `idUsuarioConsultor` INT NULL DEFAULT NULL,
  `idVenda` VARCHAR(45) NULL DEFAULT NULL,
  `Mês` VARCHAR(45) NULL DEFAULT NULL,
  `Faturamento` DECIMAL(15,4) NULL DEFAULT NULL,
  `Comissão` DECIMAL(15,4) NULL DEFAULT NULL,
  `porcentagem` DOUBLE NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NULL DEFAULT NULL,
  `especialidade` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idComissao`),
  INDEX `comissao_index` (`idVendaProduto1` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`config`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`config` (
  `idConfig` INT(11) NOT NULL,
  `servidorACBr` VARCHAR(100) NULL DEFAULT NULL,
  `portaACBr` VARCHAR(100) NULL DEFAULT NULL,
  `lojaACBr` INT(11) NULL DEFAULT NULL,
  `emailContabilidade` VARCHAR(100) NULL DEFAULT NULL,
  `emailLogistica` VARCHAR(100) NULL DEFAULT NULL,
  `monitorarCNPJ1` VARCHAR(100) NULL DEFAULT NULL,
  `monitorarServidor1` VARCHAR(100) NULL DEFAULT NULL,
  `monitorarPorta1` VARCHAR(100) NULL DEFAULT NULL,
  `monitorarCNPJ2` VARCHAR(100) NULL DEFAULT NULL,
  `monitorarServidor2` VARCHAR(100) NULL DEFAULT NULL,
  `monitorarPorta2` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`idConfig`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`conta_a_pagar_has_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`conta_a_pagar_has_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmissao` DATE NULL DEFAULT NULL,
  `idCompra` INT(11) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `contraParte` VARCHAR(90) NULL DEFAULT NULL,
  `idCnab` INT(11) NULL DEFAULT NULL,
  `idNFe` INT(11) NULL DEFAULT NULL,
  `nfe` INT(11) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `dataPagamento` DATE NULL DEFAULT NULL,
  `observacao` VARCHAR(400) NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `dataRealizado` DATE NULL DEFAULT NULL,
  `valorReal` DECIMAL(15,4) NULL DEFAULT NULL,
  `tipoReal` VARCHAR(45) NULL DEFAULT NULL,
  `parcelaReal` INT(11) NULL DEFAULT NULL,
  `idConta` INT(11) NULL DEFAULT NULL,
  `tipoDet` VARCHAR(45) NULL DEFAULT NULL,
  `centroCusto` VARCHAR(45) NULL DEFAULT NULL,
  `grupo` VARCHAR(45) NULL DEFAULT NULL,
  `subGrupo` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC) VISIBLE,
  INDEX `contapagar_idLoja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `idCompra` (`idCompra` ASC) VISIBLE,
  INDEX `index3_pagar` (`status` ASC) VISIBLE,
  INDEX `index4_pagar` (`dataPagamento` ASC, `status` ASC) VISIBLE,
  INDEX `index5_pagar` (`status` ASC, `desativado` ASC) VISIBLE,
  INDEX `index6_pagar` (`idPagamento` ASC, `nfe` ASC, `valorReal` ASC) VISIBLE,
  INDEX `index7_pagar` (`nfe` ASC) VISIBLE,
  INDEX `index8_pagar` (`idNFe` ASC) VISIBLE,
  CONSTRAINT `contapagar_idLoja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`orcamento` (
  `idAutoInc` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idOrcamentoBase` VARCHAR(11) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `idUsuarioConsultor` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idCliente` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idEnderecoEntrega` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idEnderecoFaturamento` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProfissional` INT(10) UNSIGNED NOT NULL,
  `data` DATETIME NOT NULL,
  `subTotalBru` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `subTotalLiq` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `frete` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `freteManual` TINYINT(1) NULL DEFAULT NULL,
  `descontoPorc` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `descontoReais` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `total` DECIMAL(15,4) NOT NULL,
  `validade` INT(11) NOT NULL DEFAULT '7',
  `status` VARCHAR(45) NOT NULL DEFAULT 'ATIVO',
  `motivoCancelamento` VARCHAR(45) NULL DEFAULT NULL,
  `observacaoCancelamento` VARCHAR(3000) NULL DEFAULT NULL,
  `observacao` VARCHAR(3000) NULL DEFAULT NULL,
  `prazoEntrega` INT(11) NULL DEFAULT NULL,
  `representacao` TINYINT(1) NULL DEFAULT NULL,
  `replicadoDe` VARCHAR(30) NULL DEFAULT NULL,
  `replicadoEm` VARCHAR(30) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idAutoInc`, `idOrcamento`),
  UNIQUE INDEX `idOrcamento_UNIQUE` (`idOrcamento` ASC) VISIBLE,
  INDEX `fk_Orcamento_Cliente1_idx` (`idCliente` ASC) VISIBLE,
  INDEX `fk_Orcamento_Loja1_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_Orcamento_Usuario1_idx` (`idUsuario` ASC) VISIBLE,
  INDEX `fk_Orcamento_Profissional1_idx` (`idProfissional` ASC) VISIBLE,
  INDEX `index7` (`idOrcamento` ASC, `data` ASC, `total` ASC, `status` ASC, `validade` ASC, `idCliente` ASC, `idUsuario` ASC) VISIBLE,
  INDEX `fk_Orcamento_UsuarioIndicou_idx` (`idUsuarioConsultor` ASC) VISIBLE,
  INDEX `fk_Orcamento_EnderecoEntrega_idx` (`idEnderecoEntrega` ASC) VISIBLE,
  INDEX `fk_Orcamento_EnderecoFat_idx` (`idEnderecoFaturamento` ASC) VISIBLE,
  INDEX `index8` (`idOrcamentoBase` ASC) VISIBLE,
  CONSTRAINT `fk_Orcamento_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `staccato`.`cliente` (`idCliente`),
  CONSTRAINT `fk_Orcamento_EnderecoEntrega`
    FOREIGN KEY (`idEnderecoEntrega`)
    REFERENCES `staccato`.`cliente_has_endereco` (`idEndereco`),
  CONSTRAINT `fk_Orcamento_EnderecoFat`
    FOREIGN KEY (`idEnderecoFaturamento`)
    REFERENCES `staccato`.`cliente_has_endereco` (`idEndereco`),
  CONSTRAINT `fk_Orcamento_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_Orcamento_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `staccato`.`profissional` (`idProfissional`),
  CONSTRAINT `fk_Orcamento_Usuario1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`),
  CONSTRAINT `fk_Orcamento_UsuarioIndicou`
    FOREIGN KEY (`idUsuarioConsultor`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`venda` (
  `idVenda` VARCHAR(30) NOT NULL,
  `idVendaBase` VARCHAR(11) NULL DEFAULT NULL,
  `idOrcamento` VARCHAR(30) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `idUsuarioConsultor` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idCliente` INT(10) UNSIGNED NOT NULL,
  `idEnderecoEntrega` INT(10) UNSIGNED NOT NULL,
  `idEnderecoFaturamento` INT(10) UNSIGNED NOT NULL,
  `idProfissional` INT(10) UNSIGNED NOT NULL,
  `data` DATETIME NOT NULL,
  `dataOrc` DATETIME NOT NULL,
  `subTotalBru` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `subTotalLiq` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `frete` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `freteManual` TINYINT(1) NULL DEFAULT NULL,
  `descontoPorc` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `descontoReais` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `total` DECIMAL(15,4) NOT NULL,
  `statusFinanceiro` VARCHAR(45) NULL DEFAULT 'PENDENTE',
  `dataFinanceiro` DATETIME NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'ATIVO',
  `observacao` VARCHAR(3000) NULL DEFAULT NULL,
  `prazoEntrega` INT(11) NOT NULL,
  `novoPrazoEntrega` INT(11) NULL DEFAULT NULL,
  `representacao` TINYINT(1) NULL DEFAULT '0',
  `rt` DECIMAL(15,4) NULL DEFAULT NULL,
  `devolucao` TINYINT(1) NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVenda`),
  UNIQUE INDEX `idVenda_UNIQUE` (`idVenda` ASC) VISIBLE,
  INDEX `fk_Venda_Cliente1_idx` (`idCliente` ASC) VISIBLE,
  INDEX `fk_Venda_Loja1_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_Venda_Usuario1_idx` (`idUsuario` ASC) VISIBLE,
  INDEX `fk_Venda_Profissional1_idx` (`idProfissional` ASC) VISIBLE,
  INDEX `fk_Venda_Endereco1_idx` (`idEnderecoEntrega` ASC) VISIBLE,
  INDEX `fk_Venda_Endereco2_idx` (`idEnderecoFaturamento` ASC) VISIBLE,
  INDEX `fk_venda_orcamento` (`idOrcamento` ASC) VISIBLE,
  INDEX `venda_view` (`idVenda` ASC, `data` ASC, `representacao` ASC) VISIBLE,
  INDEX `fk_Venda_UsuarioIndicou_idx` (`idUsuarioConsultor` ASC) VISIBLE,
  INDEX `index11` (`idVendaBase` ASC) VISIBLE,
  CONSTRAINT `fk_Venda_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `staccato`.`cliente` (`idCliente`),
  CONSTRAINT `fk_Venda_Endereco1`
    FOREIGN KEY (`idEnderecoEntrega`)
    REFERENCES `staccato`.`cliente_has_endereco` (`idEndereco`),
  CONSTRAINT `fk_Venda_Endereco2`
    FOREIGN KEY (`idEnderecoFaturamento`)
    REFERENCES `staccato`.`cliente_has_endereco` (`idEndereco`),
  CONSTRAINT `fk_Venda_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_Venda_Orcamento`
    FOREIGN KEY (`idOrcamento`)
    REFERENCES `staccato`.`orcamento` (`idOrcamento`)
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Venda_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `staccato`.`profissional` (`idProfissional`),
  CONSTRAINT `fk_Venda_Usuario1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`),
  CONSTRAINT `fk_Venda_UsuarioIndicou`
    FOREIGN KEY (`idUsuarioConsultor`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`conta_a_receber_has_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`conta_a_receber_has_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `dataEmissao` DATE NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `contraParte` VARCHAR(90) NULL DEFAULT NULL,
  `idNFe` INT(11) NULL DEFAULT NULL,
  `nfe` INT(11) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `dataPagamento` DATE NULL DEFAULT NULL,
  `observacao` VARCHAR(400) NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `dataRealizado` DATE NULL DEFAULT NULL,
  `valorReal` DECIMAL(15,4) NULL DEFAULT NULL,
  `tipoReal` VARCHAR(45) NULL DEFAULT NULL,
  `parcelaReal` INT(11) NULL DEFAULT NULL,
  `idConta` INT(11) NULL DEFAULT NULL,
  `tipoDet` VARCHAR(45) NULL DEFAULT NULL,
  `centroCusto` INT(11) NULL DEFAULT NULL,
  `grupo` VARCHAR(45) NULL DEFAULT NULL,
  `subGrupo` VARCHAR(45) NULL DEFAULT NULL,
  `comissao` TINYINT(1) NOT NULL DEFAULT '0',
  `taxa` TINYINT(1) NOT NULL DEFAULT '0',
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC) VISIBLE,
  INDEX `fk_Conta_Venda_idx` (`idVenda` ASC) VISIBLE,
  INDEX `contareceber_idLoja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `index3` (`status` ASC) VISIBLE,
  INDEX `index4` (`dataPagamento` ASC, `representacao` ASC, `status` ASC) VISIBLE,
  CONSTRAINT `contareceber_idLoja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_Conta_Venda2`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`despesa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`despesa` (
  `idDepesa` INT(11) NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(90) NULL DEFAULT NULL,
  `receita` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idDepesa`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`galpao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`galpao` (
  `idBloco` INT(11) NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(45) NOT NULL,
  `posicao` VARCHAR(45) NOT NULL,
  `tamanho` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idBloco`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`estoque` (
  `idEstoque` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idNFe` INT(10) UNSIGNED NULL DEFAULT NULL,
  `recebidoPor` VARCHAR(45) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'TEMP',
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `observacao` VARCHAR(200) NULL DEFAULT NULL,
  `lote` VARCHAR(45) NULL DEFAULT NULL,
  `local` VARCHAR(100) NULL DEFAULT 'TEMP',
  `idBloco` INT(11) NULL DEFAULT NULL,
  `bloco` VARCHAR(45) NULL DEFAULT NULL,
  `altura` INT(11) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `restante` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `ajuste` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `contabil` DECIMAL(15,4) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `codComercial` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `nve` VARCHAR(45) NULL DEFAULT NULL,
  `extipi` VARCHAR(45) NULL DEFAULT NULL,
  `cest` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `valorUnid` DECIMAL(15,4) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `codBarrasTrib` VARCHAR(45) NULL DEFAULT NULL,
  `unTrib` VARCHAR(45) NULL DEFAULT NULL,
  `quantTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorUnidTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `frete` DECIMAL(15,4) NULL DEFAULT NULL,
  `seguro` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `outros` DECIMAL(15,4) NULL DEFAULT NULL,
  `compoeTotal` INT(11) NULL DEFAULT NULL,
  `numeroPedido` VARCHAR(45) NULL DEFAULT NULL,
  `itemPedido` INT(11) NULL DEFAULT NULL,
  `tipoICMS` VARCHAR(45) NULL DEFAULT NULL,
  `orig` VARCHAR(45) NULL DEFAULT NULL,
  `cstICMS` VARCHAR(45) NULL DEFAULT NULL,
  `modBC` VARCHAR(45) NULL DEFAULT NULL,
  `vBC` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `modBCST` VARCHAR(45) NULL DEFAULT NULL,
  `pMVAST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vBCST` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `cEnq` VARCHAR(45) NULL DEFAULT NULL,
  `cstIPI` VARCHAR(45) NULL DEFAULT NULL,
  `vBCIPI` DECIMAL(15,4) NULL DEFAULT NULL,
  `pIPI` DECIMAL(15,4) NULL DEFAULT NULL,
  `vIPI` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstPIS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstCOFINS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorGare` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEstoque`),
  UNIQUE INDEX `idEstoque_UNIQUE` (`idEstoque` ASC) VISIBLE,
  INDEX `estoque_idProduto_idx` (`idProduto` ASC) VISIBLE,
  INDEX `estoque_recebido_idx` (`recebidoPor` ASC) VISIBLE,
  INDEX `estoque_nfe_idx` (`idNFe` ASC) VISIBLE,
  INDEX `index5_estoque` (`idEstoque` ASC, `idNFe` ASC, `valor` ASC, `tipoICMS` ASC) VISIBLE,
  INDEX `estoque_pallet_idx` (`idBloco` ASC) VISIBLE,
  FULLTEXT INDEX `index4` (`descricao`, `codComercial`) VISIBLE,
  CONSTRAINT `estoque_pallet`
    FOREIGN KEY (`idBloco`)
    REFERENCES `staccato`.`galpao` (`idBloco`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`estoque_has_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`estoque_has_compra` (
  `idEstoque` INT(10) UNSIGNED NOT NULL,
  `idCompra` INT(10) UNSIGNED NOT NULL,
  `idPedido1` INT(11) NULL DEFAULT NULL,
  `idPedido2` INT(11) NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEstoque`, `idCompra`, `idPedido2`),
  INDEX `fk_estoquecompra_idPedido` (`idPedido2` ASC) VISIBLE,
  CONSTRAINT `fk_estoquecompra_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `staccato`.`estoque` (`idEstoque`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`fornecedor` (
  `idFornecedor` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `razaoSocial` VARCHAR(100) NOT NULL,
  `nomeFantasia` VARCHAR(100) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(45) NULL DEFAULT NULL,
  `contatoNome` VARCHAR(45) NULL DEFAULT NULL,
  `contatoCPF` VARCHAR(45) NULL DEFAULT NULL,
  `contatoApelido` VARCHAR(45) NULL DEFAULT NULL,
  `contatoRG` VARCHAR(45) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `telCel` VARCHAR(18) NULL DEFAULT NULL,
  `telCom` VARCHAR(18) NULL DEFAULT NULL,
  `idNextel` VARCHAR(16) NULL DEFAULT NULL,
  `nextel` VARCHAR(18) NULL DEFAULT NULL,
  `email` VARCHAR(300) NULL DEFAULT NULL,
  `comissao1` DOUBLE NULL DEFAULT NULL,
  `comissao2` DOUBLE NULL DEFAULT NULL,
  `comissaoLoja` DOUBLE NULL DEFAULT NULL,
  `aliquotaSt` DOUBLE NULL DEFAULT '0',
  `st` VARCHAR(45) NULL DEFAULT 'Sem ST',
  `especialidade` INT(11) NULL DEFAULT '0',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `fretePagoLoja` TINYINT(1) NOT NULL DEFAULT '0',
  `vemDoSul` TINYINT(1) NULL DEFAULT NULL,
  `validadeProdutos` DATE NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `cc` VARCHAR(45) NULL DEFAULT NULL,
  `poupanca` TINYINT(1) NULL DEFAULT NULL,
  `nomeBanco` VARCHAR(45) NULL DEFAULT NULL,
  `cnpjBanco` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idFornecedor`),
  INDEX `fornecedor_view` (`idFornecedor` ASC, `razaoSocial` ASC, `comissaoLoja` ASC) VISIBLE,
  INDEX `fornecedor_view2` (`razaoSocial` ASC) VISIBLE,
  FULLTEXT INDEX `idxFT` (`razaoSocial`, `nomeFantasia`, `cnpj`, `contatoCPF`) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`produto` (
  `idProduto` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProdutoUpd` INT(11) NOT NULL DEFAULT '0',
  `idEstoque` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idFornecedor` INT(10) UNSIGNED NOT NULL,
  `idFornecedorUpd` INT(11) NOT NULL DEFAULT '0',
  `fornecedor` VARCHAR(100) NOT NULL,
  `fornecedorUpd` INT(11) NOT NULL DEFAULT '0',
  `descricao` VARCHAR(250) NOT NULL,
  `descricaoUpd` INT(11) NOT NULL DEFAULT '0',
  `estoqueRestante` DECIMAL(15,4) NULL DEFAULT NULL,
  `estoqueRestanteUpd` INT(11) NOT NULL DEFAULT '0',
  `quantCaixa` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantCaixaUpd` INT(11) NULL DEFAULT NULL,
  `un` VARCHAR(45) NOT NULL,
  `unUpd` INT(11) NOT NULL DEFAULT '0',
  `un2` VARCHAR(45) NULL DEFAULT NULL,
  `un2Upd` INT(11) NULL DEFAULT '0',
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `colecaoUpd` INT(11) NOT NULL DEFAULT '0',
  `tipo` VARCHAR(100) NULL DEFAULT NULL,
  `tipoUpd` INT(11) NOT NULL DEFAULT '0',
  `minimo` DOUBLE NULL DEFAULT NULL,
  `minimoUpd` INT(11) NOT NULL DEFAULT '0',
  `multiplo` DOUBLE NULL DEFAULT NULL,
  `multiploUpd` INT(11) NULL DEFAULT '0',
  `m2cx` DECIMAL(15,4) NULL DEFAULT NULL,
  `m2cxUpd` INT(11) NOT NULL DEFAULT '0',
  `pccx` DECIMAL(15,4) NULL DEFAULT NULL,
  `pccxUpd` INT(11) NOT NULL DEFAULT '0',
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcxUpd` INT(11) NOT NULL DEFAULT '0',
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `formComercialUpd` INT(11) NOT NULL DEFAULT '0',
  `codComercial` VARCHAR(100) NOT NULL,
  `codComercialUpd` INT(11) NOT NULL DEFAULT '0',
  `codBarras` VARCHAR(100) NULL DEFAULT '0',
  `codBarrasUpd` INT(11) NOT NULL DEFAULT '0',
  `ncm` VARCHAR(10) NULL DEFAULT NULL,
  `ncmUpd` INT(11) NOT NULL DEFAULT '0',
  `cfop` VARCHAR(4) NULL DEFAULT NULL,
  `cfopUpd` INT(11) NOT NULL DEFAULT '0',
  `icms` DECIMAL(15,4) NULL DEFAULT NULL,
  `icmsUpd` INT(11) NOT NULL DEFAULT '0',
  `cst` VARCHAR(3) NULL DEFAULT '000',
  `cstUpd` INT(11) NOT NULL DEFAULT '0',
  `qtdPallet` DECIMAL(15,4) NULL DEFAULT NULL,
  `qtdPalletUpd` INT(11) NOT NULL DEFAULT '0',
  `custo` DECIMAL(15,4) NOT NULL,
  `custoUpd` INT(11) NOT NULL DEFAULT '0',
  `ipi` DECIMAL(15,4) NULL DEFAULT NULL,
  `ipiUpd` INT(11) NOT NULL DEFAULT '0',
  `st` DECIMAL(15,4) NULL DEFAULT NULL,
  `stUpd` INT(11) NOT NULL DEFAULT '0',
  `sticms` DECIMAL(15,4) NULL DEFAULT NULL,
  `sticmsUpd` INT(11) NULL DEFAULT NULL,
  `mva` DECIMAL(15,4) NULL DEFAULT NULL,
  `mvaUpd` INT(11) NULL DEFAULT NULL,
  `oldPrecoVenda` DECIMAL(15,4) NULL DEFAULT NULL,
  `precoVenda` DECIMAL(15,4) NULL DEFAULT NULL,
  `precoVendaUpd` INT(11) NOT NULL DEFAULT '0',
  `markup` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `markupUpd` INT(11) NOT NULL DEFAULT '0',
  `comissao` DECIMAL(15,4) NULL DEFAULT NULL,
  `comissaoUpd` INT(11) NOT NULL DEFAULT '0',
  `observacoes` VARCHAR(800) NULL DEFAULT NULL,
  `observacoesUpd` INT(11) NOT NULL DEFAULT '0',
  `origem` INT(11) NULL DEFAULT NULL,
  `origemUpd` INT(11) NOT NULL DEFAULT '0',
  `temLote` VARCHAR(5) NULL DEFAULT 'NÃO',
  `temLoteUpd` INT(11) NOT NULL DEFAULT '0',
  `ui` VARCHAR(10) NOT NULL DEFAULT '0',
  `uiUpd` INT(11) NOT NULL DEFAULT '0',
  `validade` DATE NULL DEFAULT NULL,
  `validadeUpd` INT(11) NOT NULL DEFAULT '0',
  `descontinuado` TINYINT(1) NOT NULL DEFAULT '0',
  `descontinuadoUpd` INT(11) NOT NULL DEFAULT '0',
  `atualizarTabelaPreco` TINYINT(1) NOT NULL DEFAULT '0',
  `representacao` TINYINT(1) NOT NULL DEFAULT '0',
  `compra` TINYINT(1) NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT '0',
  `promocao` TINYINT(1) NULL DEFAULT '0',
  `idProdutoRelacionado` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idProduto`),
  UNIQUE INDEX `idProduto_UNIQUE` (`idProduto` ASC) VISIBLE,
  INDEX `index` (`fornecedor` ASC, `descricao` ASC, `colecao` ASC, `codComercial` ASC, `formComercial` ASC, `ui` ASC) VISIBLE,
  INDEX `descontinuado` (`descontinuado` ASC) VISIBLE,
  INDEX `fk_Produto_Estoque_idx` (`idEstoque` ASC) VISIBLE,
  INDEX `fk_Produto_Fornecedor_idx` (`idFornecedor` ASC) VISIBLE,
  INDEX `idRelacionado` (`idProdutoRelacionado` ASC) VISIBLE,
  INDEX `produto_idx` (`idFornecedor` ASC, `codComercial` ASC) VISIBLE,
  FULLTEXT INDEX `idxFT` (`fornecedor`, `descricao`, `colecao`, `codComercial`) VISIBLE,
  CONSTRAINT `fk_Produto_Estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `staccato`.`estoque` (`idEstoque`),
  CONSTRAINT `fk_Produto_Fornecedor`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `staccato`.`fornecedor` (`idFornecedor`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = '													'
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`estoque_has_consumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`estoque_has_consumo` (
  `idConsumo` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idEstoque` INT(10) UNSIGNED NOT NULL,
  `idVendaProduto2` INT(11) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT 'TEMP',
  `idBloco` INT(11) NULL DEFAULT NULL,
  `bloco` VARCHAR(45) NULL DEFAULT NULL,
  `altura` INT(11) NULL DEFAULT NULL,
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `codComercial` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `valorUnid` DECIMAL(15,4) NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `codBarrasTrib` VARCHAR(45) NULL DEFAULT NULL,
  `unTrib` VARCHAR(45) NULL DEFAULT NULL,
  `quantTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `valorUnidTrib` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `compoeTotal` INT(11) NULL DEFAULT NULL,
  `numeroPedido` VARCHAR(45) NULL DEFAULT NULL,
  `itemPedido` INT(11) NULL DEFAULT NULL,
  `tipoICMS` VARCHAR(45) NULL DEFAULT NULL,
  `orig` VARCHAR(45) NULL DEFAULT NULL,
  `cstICMS` VARCHAR(45) NULL DEFAULT NULL,
  `modBC` VARCHAR(45) NULL DEFAULT NULL,
  `vBC` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMS` DECIMAL(15,4) NULL DEFAULT NULL,
  `modBCST` VARCHAR(45) NULL DEFAULT NULL,
  `pMVAST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vBCST` DECIMAL(15,4) NULL DEFAULT NULL,
  `pICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `vICMSST` DECIMAL(15,4) NULL DEFAULT NULL,
  `cEnq` VARCHAR(45) NULL DEFAULT NULL,
  `cstIPI` VARCHAR(45) NULL DEFAULT NULL,
  `cstPIS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vPIS` DECIMAL(15,4) NULL DEFAULT NULL,
  `cstCOFINS` VARCHAR(45) NULL DEFAULT NULL,
  `vBCCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `pCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `vCOFINS` DECIMAL(15,4) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idConsumo`),
  UNIQUE INDEX `idConsumo_UNIQUE` (`idConsumo` ASC) VISIBLE,
  INDEX `estoqueconsumo_estoque_idx` (`idEstoque` ASC) VISIBLE,
  INDEX `fk_EstoqueConsumo_Produto_idx` (`idProduto` ASC) VISIBLE,
  INDEX `consumo_pallet_idx` (`idBloco` ASC) VISIBLE,
  CONSTRAINT `consumo_pallet`
    FOREIGN KEY (`idBloco`)
    REFERENCES `staccato`.`galpao` (`idBloco`),
  CONSTRAINT `estoqueconsumo_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `staccato`.`estoque` (`idEstoque`),
  CONSTRAINT `fk_EstoqueConsumo_Produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`estoque_has_followup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`estoque_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idEstoque` INT(11) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `tipoOperacao` VARCHAR(200) NULL DEFAULT NULL,
  `observacao` MEDIUMTEXT NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idFollowup`),
  INDEX `fk_estoque_followup_loja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_estoque_followup_usuario_idx` (`idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_estoque_followup_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_estoque_followup_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
AUTO_INCREMENT = 7575
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`estoque_peso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`estoque_peso` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `data` DATE NULL DEFAULT NULL,
  `kg` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 367
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`forma_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`forma_pagamento` (
  `idPagamento` INT(11) NOT NULL AUTO_INCREMENT,
  `pagamento` VARCHAR(45) NULL DEFAULT NULL,
  `parcelas` INT(11) NULL DEFAULT NULL,
  `idConta` INT(11) NULL DEFAULT NULL,
  `pula1Mes` TINYINT(1) NULL DEFAULT NULL,
  `ajustaDiaUtil` TINYINT(1) NULL DEFAULT NULL,
  `dMaisUm` TINYINT(1) NULL DEFAULT NULL,
  `centavoSobressalente` TINYINT(1) NULL DEFAULT NULL,
  `apenasRepresentacao` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`forma_pagamento_has_taxa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`forma_pagamento_has_taxa` (
  `idTaxa` INT(11) NOT NULL AUTO_INCREMENT,
  `idPagamento` INT(11) NULL DEFAULT NULL,
  `parcela` INT(11) NULL DEFAULT NULL,
  `taxa` DOUBLE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idTaxa`),
  INDEX `fk_pagamento_idx` (`idPagamento` ASC) VISIBLE,
  CONSTRAINT `fk_pagamento`
    FOREIGN KEY (`idPagamento`)
    REFERENCES `staccato`.`forma_pagamento` (`idPagamento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`fornecedor_has_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`fornecedor_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idFornecedor` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Fornecedor_has_Endereco_Fornecedor1_idx` (`idFornecedor` ASC) VISIBLE,
  CONSTRAINT `fk_Fornecedor_has_Endereco_Fornecedor1`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `staccato`.`fornecedor` (`idFornecedor`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`fornecedor_has_prazo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`fornecedor_has_prazo` (
  `especialidadeIndex` INT(11) NOT NULL,
  `especialidade` VARCHAR(45) NULL DEFAULT NULL,
  `prazo` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`especialidadeIndex`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`ibpt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`ibpt` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `codigo` VARCHAR(45) NOT NULL,
  `excecao` TINYINT(1) NOT NULL DEFAULT '0',
  `tipo` INT(11) NULL DEFAULT NULL,
  `descricao` VARCHAR(500) NULL DEFAULT NULL,
  `nacionalfederal` DECIMAL(15,2) NULL DEFAULT NULL,
  `importadosfederal` DECIMAL(15,2) NULL DEFAULT NULL,
  `estadual` DECIMAL(15,2) NULL DEFAULT NULL,
  `municipal` DECIMAL(15,2) NULL DEFAULT NULL,
  `vigenciainicio` DATE NULL DEFAULT NULL,
  `vigenciafim` DATE NULL DEFAULT NULL,
  `chave` VARCHAR(45) NULL DEFAULT NULL,
  `versao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codigo`, `excecao`, `versao`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `ibpt_indx` (`codigo` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`icms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`icms` (
  `idicms` INT(11) NOT NULL AUTO_INCREMENT,
  `origem` VARCHAR(2) NOT NULL,
  `destino` VARCHAR(2) NOT NULL,
  `valor` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`idicms`, `origem`, `destino`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`jobs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`jobs` (
  `id` INT(11) NOT NULL,
  `dataEnviado` DATE NULL DEFAULT NULL,
  `dataReferente` DATE NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`log` (
  `idLog` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idUsuario` INT(11) NULL DEFAULT NULL,
  `versao` VARCHAR(45) NULL DEFAULT NULL,
  `tipo` VARCHAR(45) NULL DEFAULT NULL,
  `message` TEXT NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLog`),
  INDEX `log_usuario_idx` (`idUsuario` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`loja_has_conta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`loja_has_conta` (
  `idConta` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `banco` VARCHAR(45) NULL DEFAULT NULL,
  `agencia` VARCHAR(45) NULL DEFAULT NULL,
  `conta` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idConta`),
  INDEX `loja_idx` (`idLoja` ASC) VISIBLE,
  CONSTRAINT `loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`loja_has_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`loja_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Loja_has_Endereco_Loja1_idx` (`idLoja` ASC) VISIBLE,
  CONSTRAINT `fk_Loja_has_Endereco_Loja1`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`loja_has_forma_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`loja_has_forma_pagamento` (
  `idPagamento` INT(11) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPagamento`, `idLoja`),
  INDEX `fk_pagamento_loja_idx` (`idLoja` ASC) VISIBLE,
  CONSTRAINT `fk_pag`
    FOREIGN KEY (`idPagamento`)
    REFERENCES `staccato`.`forma_pagamento` (`idPagamento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_pag_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`maintenance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`maintenance` (
  `id` INT(11) NOT NULL,
  `lastInvalidated` DATE NULL DEFAULT NULL,
  `lastDistribuicao` TIMESTAMP NULL DEFAULT NULL,
  `emManutencao` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`maxId`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`maxId` (
  `id` INT(11) NOT NULL,
  `ordemCompra_pf` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `staccato`.`mva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`mva` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `item` VARCHAR(45) NULL DEFAULT NULL,
  `descricao` VARCHAR(450) NULL DEFAULT NULL,
  `cest` VARCHAR(45) NULL DEFAULT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `iva_st` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`ncm`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`ncm` (
  `idncm` INT(11) NOT NULL AUTO_INCREMENT,
  `ncm` VARCHAR(8) NULL DEFAULT NULL,
  `cest` VARCHAR(7) NULL DEFAULT NULL,
  `mva4` DECIMAL(15,2) NOT NULL,
  `mva12` DECIMAL(15,2) NOT NULL,
  `aliq` DECIMAL(15,2) NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idncm`),
  UNIQUE INDEX `ncm_UNIQUE` (`ncm` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`nfe` (
  `idNFe` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `numeroNFe` VARCHAR(9) NULL DEFAULT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `xml` MEDIUMTEXT NULL DEFAULT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'AUTORIZADA',
  `dataHoraEmissao` TIMESTAMP NULL DEFAULT NULL,
  `emitente` VARCHAR(450) NULL DEFAULT NULL,
  `cnpjOrig` VARCHAR(14) NULL DEFAULT NULL,
  `cnpjDest` VARCHAR(14) NULL DEFAULT NULL,
  `chaveAcesso` VARCHAR(44) NOT NULL,
  `obs` VARCHAR(500) NULL DEFAULT NULL,
  `transportadora` VARCHAR(100) NULL DEFAULT NULL,
  `gare` DECIMAL(15,4) NULL DEFAULT NULL,
  `gareData` TIMESTAMP NULL DEFAULT NULL,
  `valor` DECIMAL(15,4) NULL DEFAULT NULL,
  `infCpl` VARCHAR(5000) NULL DEFAULT NULL,
  `nsu` INT(11) NULL DEFAULT NULL,
  `statusDistribuicao` VARCHAR(45) NULL DEFAULT NULL,
  `dataDistribuicao` TIMESTAMP NULL DEFAULT NULL,
  `utilizada` TINYINT(1) NULL DEFAULT '0',
  `ciencia` TINYINT(1) NULL DEFAULT '0',
  `confirmar` TINYINT(1) NULL DEFAULT '0',
  `desconhecer` TINYINT(1) NULL DEFAULT '0',
  `naoRealizar` TINYINT(1) NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idNFe`),
  UNIQUE INDEX `chaveAcesso_UNIQUE` (`chaveAcesso` ASC) VISIBLE,
  INDEX `nfe_tipo_index` (`idNFe` ASC, `tipo` ASC, `numeroNFe` ASC) VISIBLE,
  INDEX `fk_nfe_venda` (`idVenda` ASC) VISIBLE,
  INDEX `index4_nfe` (`numeroNFe` ASC) VISIBLE,
  INDEX `index5_nfe` (`status` ASC) VISIBLE,
  INDEX `index6_nfe` (`chaveAcesso` ASC) VISIBLE,
  INDEX `index7_nfe` (`nsu` ASC) VISIBLE,
  FULLTEXT INDEX `nfe_ft` (`numeroNFe`) VISIBLE,
  CONSTRAINT `fk_nfe_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`nfe_has_followup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`nfe_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idNFe` INT(11) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `tipoOperacao` VARCHAR(200) NULL DEFAULT NULL,
  `observacao` MEDIUMTEXT NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idFollowup`),
  INDEX `nfe_f_idx` (`idNFe` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`orcamento_has_followup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`orcamento_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idOrcamentoBase` VARCHAR(11) NULL DEFAULT NULL,
  `idLoja` INT(11) NOT NULL,
  `idUsuario` INT(11) NOT NULL,
  `semaforo` INT(11) NOT NULL,
  `observacao` MEDIUMTEXT NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NOT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idFollowup`),
  INDEX `orcamentofollowup_orcamento_idx` (`idOrcamento` ASC) VISIBLE,
  INDEX `index9` (`idOrcamentoBase` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`orcamento_has_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`orcamento_has_fornecedor` (
  `idOrcamento` VARCHAR(30) NOT NULL,
  `fornecedores` LONGTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`idOrcamento`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`orcamento_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`orcamento_has_produto` (
  `idOrcamentoProduto` INT(11) NOT NULL AUTO_INCREMENT,
  `idOrcamento` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `fornecedor` VARCHAR(100) NOT NULL,
  `produto` VARCHAR(250) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `kg` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `quantCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NULL DEFAULT NULL,
  `promocao` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idOrcamentoProduto`),
  INDEX `fk_Orcamento_has_Produto_Produto2_idx` (`idProduto` ASC) VISIBLE,
  INDEX `fk_Orcamento_has_Produto_Orcamento2_idx` (`idOrcamento` ASC) VISIBLE,
  INDEX `fk_Orcamento_has_Produto_Loja2_idx` (`idLoja` ASC) VISIBLE,
  CONSTRAINT `fk_orcamentoproduto_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_orcamentoproduto_orcamento`
    FOREIGN KEY (`idOrcamento`)
    REFERENCES `staccato`.`orcamento` (`idOrcamento`)
    ON UPDATE CASCADE,
  CONSTRAINT `fk_orcamentoproduto_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`pedido_fornecedor_has_followup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`pedido_fornecedor_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `ordemCompra` INT(11) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `tipoOperacao` VARCHAR(200) NULL DEFAULT NULL,
  `observacao` MEDIUMTEXT NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`idFollowup`),
  INDEX `fk_compra_followup_loja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_compra_followup_usuario_idx` (`idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_compra_followup_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_compra_followup_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
AUTO_INCREMENT = 7575
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`pedido_fornecedor_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`pedido_fornecedor_has_produto` (
  `idPedido1` INT(11) NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `idRelacionado` INT(11) NULL DEFAULT NULL,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `aliquotaSt` DOUBLE NULL DEFAULT NULL,
  `st` VARCHAR(45) NULL DEFAULT NULL,
  `statusFinanceiro` VARCHAR(45) NULL DEFAULT 'PENDENTE',
  `ordemCompra` INT(11) NULL DEFAULT NULL,
  `ordemRepresentacao` VARCHAR(45) NULL DEFAULT NULL,
  `codFornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idVendaProduto1` INT(11) NULL DEFAULT NULL,
  `idVendaProduto2` INT(11) NULL DEFAULT NULL,
  `idCompra` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NOT NULL,
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `obs` VARCHAR(400) NULL DEFAULT NULL,
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `un2` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPedido1`),
  INDEX `idCompra` (`idCompra` ASC) VISIBLE,
  INDEX `idVenda` (`idVenda` ASC) VISIBLE,
  INDEX `pedidofornecedor_idvendaproduto` (`idVendaProduto1` ASC) VISIBLE,
  INDEX `fk_PedidoForn_Produto_idx` (`idProduto` ASC) VISIBLE,
  CONSTRAINT `fk_PedidoForn_Produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`),
  CONSTRAINT `fk_PedidoForn_Venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`venda_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`venda_has_produto` (
  `idVendaProduto1` INT(11) NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `idRelacionado` INT(11) NULL DEFAULT NULL,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `entregou` VARCHAR(100) NULL DEFAULT NULL,
  `recebeu` VARCHAR(100) NULL DEFAULT NULL,
  `statusOriginal` VARCHAR(45) NULL DEFAULT NULL,
  `idCompra` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeSaida` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeEntrada` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeFutura` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NOT NULL,
  `idVenda` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `produto` VARCHAR(250) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `lote` VARCHAR(45) NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `kg` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `quantCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NOT NULL DEFAULT '0',
  `promocao` TINYINT(1) NOT NULL DEFAULT '0',
  `reposicaoEntrega` TINYINT(1) NOT NULL DEFAULT '0',
  `reposicaoReceb` TINYINT(1) NOT NULL DEFAULT '0',
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVendaProduto1`),
  UNIQUE INDEX `idVendaProduto_UNIQUE` (`idVendaProduto1` ASC) VISIBLE,
  INDEX `fk_vendaproduto_produto_idx` (`idProduto` ASC) VISIBLE,
  INDEX `fk_vendaproduto_venda_idx` (`idVenda` ASC) VISIBLE,
  INDEX `fk_vendaproduto_loja_idx` (`idLoja` ASC) VISIBLE,
  CONSTRAINT `fk_vendaproduto_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_vendaproduto_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`),
  CONSTRAINT `fk_vendaproduto_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`venda_has_produto2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`venda_has_produto2` (
  `idVendaProduto2` INT(11) NOT NULL AUTO_INCREMENT,
  `idVendaProdutoFK` INT(11) NOT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `idRelacionado` INT(11) NULL DEFAULT NULL,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `entregou` VARCHAR(100) NULL DEFAULT NULL,
  `recebeu` VARCHAR(100) NULL DEFAULT NULL,
  `statusOriginal` VARCHAR(45) NULL DEFAULT NULL,
  `idCompra` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeSaida` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeEntrada` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeFutura` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NOT NULL,
  `idVenda` VARCHAR(30) NOT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `produto` VARCHAR(250) NULL DEFAULT NULL,
  `obs` VARCHAR(1000) NOT NULL,
  `lote` VARCHAR(45) NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NOT NULL,
  `descUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `kg` DECIMAL(15,4) NULL DEFAULT NULL,
  `caixas` DOUBLE NOT NULL,
  `quant` DECIMAL(15,4) NOT NULL,
  `un` VARCHAR(45) NOT NULL,
  `quantCaixa` DECIMAL(15,4) NOT NULL,
  `codComercial` VARCHAR(100) NOT NULL,
  `formComercial` VARCHAR(100) NOT NULL,
  `parcial` DECIMAL(15,4) NOT NULL,
  `desconto` DECIMAL(15,4) NOT NULL DEFAULT '0.0000',
  `parcialDesc` DECIMAL(15,4) NOT NULL,
  `descGlobal` DECIMAL(15,4) NOT NULL,
  `total` DECIMAL(15,4) NOT NULL,
  `mostrarDesconto` TINYINT(1) NOT NULL DEFAULT '0',
  `estoque` TINYINT(1) NOT NULL DEFAULT '0',
  `promocao` TINYINT(1) NOT NULL DEFAULT '0',
  `reposicaoEntrega` TINYINT(1) NOT NULL DEFAULT '0',
  `reposicaoReceb` TINYINT(1) NOT NULL DEFAULT '0',
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVendaProduto2`),
  INDEX `fk_vendaproduto2_produto_idx` (`idProduto` ASC) VISIBLE,
  INDEX `fk_vendaproduto2_venda_idx` (`idVenda` ASC) VISIBLE,
  INDEX `fk_vendaproduto2_loja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_vendaproduto_idx` (`idVendaProdutoFK` ASC) VISIBLE,
  INDEX `fk_vendaproduto2_nfe_idx` (`idNFeSaida` ASC) VISIBLE,
  INDEX `fk_vendaproduto2_nfe_futura_idx` (`idNFeFutura` ASC) VISIBLE,
  INDEX `vp2_index_status` (`status` ASC) VISIBLE,
  CONSTRAINT `fk_vendaproduto`
    FOREIGN KEY (`idVendaProdutoFK`)
    REFERENCES `staccato`.`venda_has_produto` (`idVendaProduto1`),
  CONSTRAINT `fk_vendaproduto2_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_vendaproduto2_nfe`
    FOREIGN KEY (`idNFeSaida`)
    REFERENCES `staccato`.`nfe` (`idNFe`),
  CONSTRAINT `fk_vendaproduto2_nfe_futura`
    FOREIGN KEY (`idNFeFutura`)
    REFERENCES `staccato`.`nfe` (`idNFe`),
  CONSTRAINT `fk_vendaproduto2_produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`),
  CONSTRAINT `fk_vendaproduto2_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`pedido_fornecedor_has_produto2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`pedido_fornecedor_has_produto2` (
  `idPedido2` INT(11) NOT NULL AUTO_INCREMENT,
  `idPedidoFK` INT(11) NOT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'PENDENTE',
  `idRelacionado` INT(11) NULL DEFAULT NULL,
  `selecionado` TINYINT(1) NULL DEFAULT '0',
  `aliquotaSt` DOUBLE NULL DEFAULT NULL,
  `st` VARCHAR(45) NULL DEFAULT NULL,
  `statusFinanceiro` VARCHAR(45) NULL DEFAULT 'PENDENTE',
  `ordemCompra` INT(11) NULL DEFAULT NULL,
  `ordemRepresentacao` VARCHAR(45) NULL DEFAULT NULL,
  `codFornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `idVendaProduto1` INT(11) NULL DEFAULT NULL,
  `idVendaProduto2` INT(11) NULL DEFAULT NULL,
  `idCompra` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NOT NULL,
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(250) NULL DEFAULT NULL,
  `obs` VARCHAR(400) NULL DEFAULT NULL,
  `colecao` VARCHAR(200) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `quantUpd` INT(11) NOT NULL DEFAULT '0',
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `un2` VARCHAR(45) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `prcUnitario` DECIMAL(15,4) NULL DEFAULT NULL,
  `desconto` DECIMAL(15,4) NULL DEFAULT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `kgcx` DECIMAL(15,4) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `codBarras` VARCHAR(45) NULL DEFAULT NULL,
  `dataPrevCompra` DATE NULL DEFAULT NULL,
  `dataRealCompra` DATE NULL DEFAULT NULL,
  `dataPrevConf` DATE NULL DEFAULT NULL,
  `dataRealConf` DATE NULL DEFAULT NULL,
  `dataPrevFat` DATE NULL DEFAULT NULL,
  `dataRealFat` DATE NULL DEFAULT NULL,
  `dataPrevColeta` DATE NULL DEFAULT NULL,
  `dataRealColeta` DATE NULL DEFAULT NULL,
  `dataPrevReceb` DATE NULL DEFAULT NULL,
  `dataRealReceb` DATE NULL DEFAULT NULL,
  `dataPrevEnt` DATE NULL DEFAULT NULL,
  `dataRealEnt` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPedido2`),
  INDEX `idCompra` (`idCompra` ASC) VISIBLE,
  INDEX `idVenda` (`idVenda` ASC) VISIBLE,
  INDEX `fk_PedidoForn2_Produto_idx` (`idProduto` ASC) VISIBLE,
  INDEX `fk_PedidoForn2_VendaProduto_idx` (`idVendaProduto2` ASC) VISIBLE,
  INDEX `fk_pedidoforn_idx` (`idPedidoFK` ASC) VISIBLE,
  CONSTRAINT `fk_pedidoforn`
    FOREIGN KEY (`idPedidoFK`)
    REFERENCES `staccato`.`pedido_fornecedor_has_produto` (`idPedido1`),
  CONSTRAINT `fk_PedidoForn2_Produto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`),
  CONSTRAINT `fk_PedidoForn2_Venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`),
  CONSTRAINT `fk_PedidoForn2_VendaProduto`
    FOREIGN KEY (`idVendaProduto2`)
    REFERENCES `staccato`.`venda_has_produto2` (`idVendaProduto2`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`transportadora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`transportadora` (
  `idTransportadora` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `razaoSocial` VARCHAR(60) NOT NULL,
  `nomeFantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cnpj` VARCHAR(18) NULL DEFAULT NULL,
  `inscEstadual` VARCHAR(20) NULL DEFAULT NULL,
  `antt` VARCHAR(10) NULL DEFAULT NULL,
  `tel` VARCHAR(18) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idTransportadora`),
  FULLTEXT INDEX `idxFT` (`razaoSocial`, `nomeFantasia`) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`pedido_transportadora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`pedido_transportadora` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NOT NULL,
  `idPedido` VARCHAR(30) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `dataEmissao` DATE NOT NULL,
  `dataEntrega` DATE NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `idTransportadora`, `idPedido`, `tipo`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_PedidoTransportadora_Transportadora1_idx` (`idTransportadora` ASC) VISIBLE,
  CONSTRAINT `fk_PedidoTransportadora_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `staccato`.`transportadora` (`idTransportadora`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`produto_has_preco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`produto_has_preco` (
  `idPreco` INT(11) NOT NULL AUTO_INCREMENT,
  `idProduto` INT(10) UNSIGNED NOT NULL,
  `preco` DECIMAL(15,4) NULL DEFAULT NULL,
  `validadeInicio` DATE NULL DEFAULT NULL,
  `validadeFim` DATE NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPreco`),
  INDEX `fk_Produto_has_Preco_Produto1_idx` (`idProduto` ASC) VISIBLE,
  CONSTRAINT `fk_Produto_has_Preco_Produto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`profissional_has_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`profissional_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idProfissional` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Profissional_has_Endereco_Profissional1_idx` (`idProfissional` ASC) VISIBLE,
  CONSTRAINT `fk_Profissional_has_Endereco_Profissional1`
    FOREIGN KEY (`idProfissional`)
    REFERENCES `staccato`.`profissional` (`idProfissional`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`temp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`temp` (
  `codComercial` VARCHAR(45) NOT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `lote` VARCHAR(45) NOT NULL,
  `estoque atual` DECIMAL(15,4) NOT NULL,
  `ncm` VARCHAR(45) NULL DEFAULT NULL,
  `cfop` VARCHAR(45) NULL DEFAULT NULL,
  `cst` VARCHAR(45) NULL DEFAULT NULL,
  `pis` VARCHAR(45) NULL DEFAULT NULL,
  `cofins` VARCHAR(45) NULL DEFAULT NULL,
  `icmsst` VARCHAR(45) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `fornecedor` VARCHAR(45) NULL DEFAULT NULL,
  `localizacao` VARCHAR(45) NOT NULL,
  `custo` DECIMAL(15,4) NULL DEFAULT NULL,
  `total` DECIMAL(15,4) NULL DEFAULT NULL,
  PRIMARY KEY (`codComercial`, `lote`, `estoque atual`, `localizacao`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`temp_distancia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`temp_distancia` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `idVeiculo` INT(11) NULL DEFAULT NULL,
  `modelo` VARCHAR(45) NULL DEFAULT NULL,
  `dataEvento` DATETIME NULL DEFAULT NULL,
  `evento` INT(11) NULL DEFAULT NULL,
  `origem` VARCHAR(450) NULL DEFAULT NULL,
  `destino` VARCHAR(450) NULL DEFAULT NULL,
  `distancia` INT(11) NULL DEFAULT NULL,
  `duracao` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`transportadora_has_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`transportadora_has_endereco` (
  `idEndereco` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NULL DEFAULT NULL,
  `descricao` VARCHAR(45) NULL DEFAULT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `logradouro` VARCHAR(90) NULL DEFAULT NULL,
  `numero` VARCHAR(45) NULL DEFAULT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(72) NULL DEFAULT NULL,
  `cidade` VARCHAR(50) NULL DEFAULT NULL,
  `uf` VARCHAR(45) NULL DEFAULT NULL,
  `codUF` INT(11) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idEndereco`),
  INDEX `fk_Transportadora_has_Endereco_Transportadora1_idx` (`idTransportadora` ASC) VISIBLE,
  CONSTRAINT `fk_Transportadora_has_Endereco_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `staccato`.`transportadora` (`idTransportadora`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`transportadora_has_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`transportadora_has_veiculo` (
  `idVeiculo` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `idTransportadora` INT(10) UNSIGNED NULL DEFAULT NULL,
  `modelo` VARCHAR(45) NOT NULL,
  `capacidade` INT(11) NOT NULL,
  `placa` VARCHAR(45) NULL DEFAULT NULL,
  `ufPlaca` VARCHAR(45) NULL DEFAULT NULL,
  `desativado` TINYINT(1) NOT NULL DEFAULT '0',
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idVeiculo`),
  INDEX `fk_Transportadora_has_Veiculo_Transportadora1_idx` (`idTransportadora` ASC) VISIBLE,
  FULLTEXT INDEX `fk_veiculo_fulltext` (`modelo`, `placa`) VISIBLE,
  CONSTRAINT `fk_Transportadora_has_Veiculo_Transportadora1`
    FOREIGN KEY (`idTransportadora`)
    REFERENCES `staccato`.`transportadora` (`idTransportadora`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`usuario_has_config`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`usuario_has_config` (
  `idConfig` INT(11) NOT NULL AUTO_INCREMENT,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `servidorEmail` VARCHAR(100) NULL DEFAULT NULL,
  `portaEmail` VARCHAR(100) NULL DEFAULT NULL,
  `email` VARCHAR(100) NULL DEFAULT NULL,
  `senhaEmail` VARCHAR(100) NULL DEFAULT NULL,
  `copiaParaEmail` VARCHAR(300) NULL DEFAULT NULL,
  PRIMARY KEY (`idConfig`),
  UNIQUE INDEX `idConfig_UNIQUE` (`idConfig` ASC) VISIBLE,
  UNIQUE INDEX `idUsuario_UNIQUE` (`idUsuario` ASC) VISIBLE,
  INDEX `usuario_has_config_idx` (`idUsuario` ASC) VISIBLE,
  CONSTRAINT `usuario_has_config`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`usuario_has_permissao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`usuario_has_permissao` (
  `idUsuario` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `view_tab_orcamento` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_venda` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_compra` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_logistica` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_nfe` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_estoque` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_galpao` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_financeiro` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_relatorio` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_grafico` TINYINT(1) NOT NULL DEFAULT '0',
  `view_tab_rh` TINYINT(1) NOT NULL DEFAULT '0',
  `webdav_documentos` TINYINT(1) NULL DEFAULT NULL,
  `webdav_compras` TINYINT(1) NULL DEFAULT NULL,
  `webdav_financeiro` TINYINT(1) NULL DEFAULT NULL,
  `webdav_rh` TINYINT(1) NULL DEFAULT NULL,
  `webdav_obras` TINYINT(1) NULL DEFAULT NULL,
  `webdav_logistica` TINYINT(1) NULL DEFAULT NULL,
  `ajusteFrete` TINYINT(1) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUsuario`),
  CONSTRAINT `fk_permissao_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`veiculo_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`veiculo_has_produto` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `data` DATETIME NOT NULL,
  `idEvento` INT(11) NOT NULL,
  `idVeiculo` INT(10) UNSIGNED NOT NULL,
  `idEstoque` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idVendaProduto1` INT(11) NULL DEFAULT NULL,
  `idVendaProduto2` INT(11) NULL DEFAULT NULL,
  `idVenda` VARCHAR(30) NULL DEFAULT NULL,
  `fotoEntrega` VARCHAR(450) NULL DEFAULT NULL,
  `status` VARCHAR(45) NULL DEFAULT NULL,
  `observacao` VARCHAR(450) NULL DEFAULT NULL,
  `idCompra` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idNFeSaida` INT(10) UNSIGNED NULL DEFAULT NULL,
  `fornecedor` VARCHAR(100) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NULL DEFAULT NULL,
  `idProduto` INT(10) UNSIGNED NULL DEFAULT NULL,
  `produto` VARCHAR(250) NULL DEFAULT NULL,
  `obs` VARCHAR(145) NULL DEFAULT NULL,
  `caixas` DOUBLE NULL DEFAULT NULL,
  `kg` DECIMAL(15,4) NULL DEFAULT NULL,
  `quant` DECIMAL(15,4) NULL DEFAULT NULL,
  `un` VARCHAR(45) NULL DEFAULT NULL,
  `quantCaixa` DECIMAL(15,4) NULL DEFAULT NULL,
  `codComercial` VARCHAR(100) NULL DEFAULT NULL,
  `formComercial` VARCHAR(100) NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `idEvento`, `idVeiculo`),
  INDEX `veiculo_transportadora_idx` (`idVeiculo` ASC) VISIBLE,
  INDEX `veiculo_estoque_idx` (`idEstoque` ASC) VISIBLE,
  INDEX `veiculo_idVenda_idx` (`idVenda` ASC) VISIBLE,
  INDEX `veiculo_nfe_idx` (`idNFeSaida` ASC) VISIBLE,
  INDEX `veiculo_loja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `veiculo_idProduto_idx` (`idProduto` ASC) VISIBLE,
  INDEX `veiculo_compra_idx` (`idCompra` ASC) VISIBLE,
  INDEX `veiculo_idVendaProduto_idx` (`idVendaProduto2` ASC) VISIBLE,
  CONSTRAINT `veiculo_compra`
    FOREIGN KEY (`idCompra`)
    REFERENCES `staccato`.`pedido_fornecedor_has_produto` (`idCompra`),
  CONSTRAINT `veiculo_estoque`
    FOREIGN KEY (`idEstoque`)
    REFERENCES `staccato`.`estoque` (`idEstoque`),
  CONSTRAINT `veiculo_idProduto`
    FOREIGN KEY (`idProduto`)
    REFERENCES `staccato`.`produto` (`idProduto`),
  CONSTRAINT `veiculo_idVenda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`),
  CONSTRAINT `veiculo_idVendaProduto`
    FOREIGN KEY (`idVendaProduto2`)
    REFERENCES `staccato`.`venda_has_produto2` (`idVendaProduto2`)
    ON UPDATE CASCADE,
  CONSTRAINT `veiculo_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `veiculo_nfe`
    FOREIGN KEY (`idNFeSaida`)
    REFERENCES `staccato`.`nfe` (`idNFe`),
  CONSTRAINT `veiculo_transportadora`
    FOREIGN KEY (`idVeiculo`)
    REFERENCES `staccato`.`transportadora_has_veiculo` (`idVeiculo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`venda_has_followup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`venda_has_followup` (
  `idFollowup` INT(11) NOT NULL AUTO_INCREMENT,
  `idVenda` VARCHAR(30) NOT NULL,
  `idVendaBase` VARCHAR(11) NULL DEFAULT NULL,
  `idLoja` INT(10) UNSIGNED NOT NULL,
  `idUsuario` INT(10) UNSIGNED NOT NULL,
  `tipoOperacao` VARCHAR(200) NULL DEFAULT NULL,
  `observacao` MEDIUMTEXT NOT NULL,
  `dataFollowup` DATETIME NOT NULL,
  `dataProxFollowup` DATETIME NULL DEFAULT NULL,
  `created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `lastUpdated` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idFollowup`),
  INDEX `orcamentofollowup_orcamento_idx` (`idVenda` ASC) VISIBLE,
  INDEX `fk_followup_loja_idx` (`idLoja` ASC) VISIBLE,
  INDEX `fk_followup_usuario_idx` (`idUsuario` ASC) VISIBLE,
  INDEX `index10` (`idVendaBase` ASC) VISIBLE,
  CONSTRAINT `fk_followup_loja`
    FOREIGN KEY (`idLoja`)
    REFERENCES `staccato`.`loja` (`idLoja`),
  CONSTRAINT `fk_followup_usuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `staccato`.`usuario` (`idUsuario`),
  CONSTRAINT `fk_followup_venda`
    FOREIGN KEY (`idVenda`)
    REFERENCES `staccato`.`venda` (`idVenda`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`venda_has_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`venda_has_fornecedor` (
  `idVenda` VARCHAR(30) NOT NULL,
  `fornecedores` LONGTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`idVenda`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;


-- -----------------------------------------------------
-- Table `staccato`.`versao_erp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`versao_erp` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `versaoAtual` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
ROW_FORMAT = DYNAMIC;

USE `staccato` ;

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`VendasCMV`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`VendasCMV` (`id` INT, `mes` INT, `loja` INT, `venda` INT, `qtddvenda` INT, `qtddcompra` INT, `qtddestq` INT, `custocompra` INT, `custoestq` INT, `comissrepr` INT, `repr` INT, `status` INT, `tipoICMS` INT, `vICMS` INT, `percST` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`ViewDespesas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`ViewDespesas` (`mes` INT, `nomeFantasia` INT, `representacao` INT, `semCusto` INT, `DespTotal` INT, `DespRH` INT, `DespRT` INT, `DespST` INT, `DespPis` INT, `DespIR` INT, `DespLog` INT, `DespCMV` INT, `DespALU` INT, `DespOutros` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`ViewDespesasExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`ViewDespesasExcel` (`mes` INT, `status` INT, `valor` INT, `centroCusto` INT, `grupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`ViewDespesasServicos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`ViewDespesasServicos` (`MES` INT, `grupo` INT, `descricao` INT, `status` INT, `valor` INT, `contraParte` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`ViewReceitaServiços`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`ViewReceitaServiços` (`mes venda` INT, `mes entrega` INT, `idVenda` INT, `total` INT, `status` INT, `fornecedor` INT, `loja` INT, `produto` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`XL_ProdutosMes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`XL_ProdutosMes` (`mes` INT, `idProduto` INT, `produto` INT, `formato` INT, `fornecedor` INT, `loes` INT, `Loja` INT, `qtdd` INT, `total` INT, `nrvendas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`XL_VendasMes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`XL_VendasMes` (`mes` INT, `qtdd` INT, `Loja` INT, `tot` INT, `user` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`aaa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`aaa` (`idNFe` INT, `numeroNFe` INT, `valorSujeitoSt` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`bbb`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`bbb` (`idNFe` INT, `percst` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`despesas por grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`despesas por grupo` (`grupo` INT, `contraparte` INT, `observacao` INT, `dataemissao` INT, `mes` INT, `datapagamento` INT, `valor` INT, `status` INT, `descricao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view--rt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view--rt` (`data` INT, `idvenda` INT, `Prof.cpg` INT, `com.cpg` INT, `status.cpg` INT, `valorvenda` INT, `prof.pedido` INT, `perc.com` INT, `com.pedido` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewDespesasporCentrodeCusto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewDespesasporCentrodeCusto` (`dataEmissao` INT, `dataPagamento` INT, `dataRealizado` INT, `contraParte` INT, `observacao` INT, `valor` INT, `valorReal` INT, `descricao` INT, `grupo` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewEstoqueConsumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewEstoqueConsumo` (`idVendaProduto2` INT, `tipoICMS` INT, `vICMS` INT, `vICMSST` INT, `quant` INT, `valor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewEstoqueConsumo2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewEstoqueConsumo2` (`idVendaProduto2` INT, `tipoICMS` INT, `vICMS` INT, `vICMSST` INT, `quant` INT, `valor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewFreteExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewFreteExcel` (`mes` INT, `status` INT, `frete` INT, `Loja` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewPedidoFornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewPedidoFornecedor` (`aliquotaSt` INT, `st` INT, `status` INT, `idVendaProduto2` INT, `quant` INT, `preco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewRelatoriosGestao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewRelatoriosGestao` (`Mes` INT, `Vendedor` INT, `Profissional` INT, `Loja` INT, `fornecedor` INT, `Total` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewResultadoCD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewResultadoCD` (`mes` INT, `frete` INT, `valor` INT, `DespLogistica` INT, `DespRH` INT, `DespOutras` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewSimuladorExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewSimuladorExcel` (`idOrcamentoProduto` INT, `idOrcamento` INT, `fornecedor` INT, `produto` INT, `codComercial` INT, `prcUnitario` INT, `quant` INT, `desconto` INT, `descGlobal` INT, `total` INT, `frete` INT, `totalgeral` INT, `custo` INT, `st` INT, `profissional` INT, `comissao` INT, `cliente` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewTaxaCartaoExcel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewTaxaCartaoExcel` (`mes` INT, `valor` INT, `Loja` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewVendaxCMV`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewVendaxCMV` (`status` INT, `idVendaProduto2` INT, `mes` INT, `loja` INT, `SumOfvenda` INT, `CMV` INT, `margem` INT, `FonteCMV` INT, `ICMS` INT, `FonteICMS` INT, `vendadev` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_a_pagar_vencer_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_a_pagar_vencer_base` (`Data Pagamento` INT, `CONFERIDO` INT, `PENDENTE` INT, `GARE` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_a_pagar_vencidos_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_a_pagar_vencidos_base` (`Data Pagamento` INT, `CONFERIDO` INT, `PENDENTE` INT, `GARE` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_a_receber_vencer_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_a_receber_vencer_base` (`Data Pagamento` INT, `Status` INT, `Cartão` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_a_receber_vencidos_base`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_a_receber_vencidos_base` (`Data Pagamento` INT, `Status` INT, `Cartão` INT, `Cheque` INT, `Boleto` INT, `Outros` INT, `Total` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_agendar_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_agendar_coleta` (`prazoEntrega` INT, `dataRealFat` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `quantCaixa` INT, `formComercial` INT, `idProduto` INT, `idNFe` INT, `numeroNFe` INT, `idVenda` INT, `idCompra` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT, `Transportadora` INT, `Peso` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_agendar_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_agendar_entrega` (`idVendaProduto2` INT, `idProduto` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `status` INT, `fornecedor` INT, `idVenda` INT, `idNFeSaida` INT, `idNFeFutura` INT, `produto` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `caixas` INT, `quant` INT, `un` INT, `quantCaixa` INT, `codComercial` INT, `formComercial` INT, `idConsumo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_busca_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_busca_veiculo` (`razaoSocial` INT, `idVeiculo` INT, `modelo` INT, `capacidade` INT, `placa` INT, `desativado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_calendario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_calendario` (`origem` INT, `destino` INT, `idVenda` INT, `carga` INT, `caixas` INT, `kg` INT, `data` INT, `razaoSocial` INT, `modelo` INT, `status` INT, `logradouro` INT, `numero` INT, `bairro` INT, `cidade` INT, `uf` INT, `produtos` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_calendario2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_calendario2` (`razaoSocial` INT, `status` INT, `caixas` INT, `kg` INT, `idVeiculo` INT, `modelo` INT, `data` INT, `idVenda` INT, `endereco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_calendario_carga`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_calendario_carga` (`idVeiculo` INT, `idEvento` INT, `dataPrevEnt` INT, `modelo` INT, `idNFeSaida` INT, `idNFeFutura` INT, `NFe Status` INT, `numeroNFe` INT, `NFe Futura` INT, `idVenda` INT, `status` INT, `produtos` INT, `kg` INT, `endereco` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_calendario_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_calendario_entrega` (`idVeiculo` INT, `data` INT, `modelo` INT, `kg` INT, `razaoSocial` INT, `idVenda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_calendario_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_calendario_produto` (`idEvento` INT, `idVenda` INT, `idVendaProduto2` INT, `fornecedor` INT, `produto` INT, `formComercial` INT, `codComercial` INT, `caixas` INT, `quant` INT, `un` INT, `kg` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `isEstoque` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_caminhao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_caminhao` (`idVeiculo` INT, `Transportadora` INT, `Veículo` INT, `Placa` INT, `desativado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_caminhao_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_caminhao_resumo` (`idVeiculo` INT, `data` INT, `Kg` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_coleta` (`prazoEntrega` INT, `dataPrevColeta` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `idNFe` INT, `numeroNFe` INT, `idVenda` INT, `idCompra` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT, `Transportadora` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_compras` (`OC` INT, `Compra` INT, `Fornecedor` INT, `Data Venda` INT, `Produtos` INT, `Total` INT, `dataPrevConf` INT, `Vendedor` INT, `Venda` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT, `Data Followup` INT, `Observação` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_compras_financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_compras_financeiro` (`Status` INT, `Status Financeiro` INT, `OC` INT, `Compra` INT, `Fornecedor` INT, `Produtos` INT, `Total` INT, `Código` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_compras_gerar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_compras_gerar` (`idPedido1` INT, `status` INT, `idRelacionado` INT, `selecionado` INT, `aliquotaSt` INT, `st` INT, `statusFinanceiro` INT, `ordemCompra` INT, `ordemRepresentacao` INT, `codFornecedor` INT, `idVenda` INT, `idVendaProduto1` INT, `idVendaProduto2` INT, `idCompra` INT, `fornecedor` INT, `idProduto` INT, `descricao` INT, `obs` INT, `colecao` INT, `codComercial` INT, `quant` INT, `quantUpd` INT, `un` INT, `un2` INT, `caixas` INT, `prcUnitario` INT, `preco` INT, `kgcx` INT, `formComercial` INT, `codBarras` INT, `dataPrevCompra` INT, `dataRealCompra` INT, `dataPrevConf` INT, `dataRealConf` INT, `dataPrevFat` INT, `dataRealFat` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `created` INT, `lastUpdated` INT, `dataFollowup` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_compra` (`idCompra` INT, `codComercial` INT, `descricao` INT, `prcUnitario` INT, `preco` INT, `prcUnitario * quant` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vinculos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vinculos` (`idVenda` INT, `idVendaProduto2` INT, `status` INT, `quantVenda` INT, `quantCompra` INT, `quantConsumo` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vp1_v_total`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vp1_v_total` (`idVenda` INT, `brutoVenda` INT, `brutoProd` INT, `liqVenda` INT, `liqProd` INT, `totalVenda` INT, `totalProdutos` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vp1_vp2_quant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vp1_vp2_quant` (`idVenda` INT, `codComercial` INT, `vp1_quant` INT, `vp2_quant` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vp1_vp2_total`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vp1_vp2_total` (`idVenda` INT, `codComercial` INT, `vp1_total` INT, `vp2_total` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vp2_ehc_quant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vp2_ehc_quant` (`idVenda` INT, `codComercial` INT, `status` INT, `quantVenda` INT, `quantConsumo` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vp2_pf2_quant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vp2_pf2_quant` (`idVenda` INT, `idCompra` INT, `codComercial` INT, `status` INT, `quantVenda` INT, `quantCompra` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_consistencia_vp_op_quant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_consistencia_vp_op_quant` (`idVenda` INT, `idOrcamento` INT, `codComercial` INT, `quantVenda` INT, `quantOrc` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_conta_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_conta_pagar` (`idPagamento` INT, `idLoja` INT, `contraparte` INT, `dataPagamento` INT, `dataEmissao` INT, `valor` INT, `status` INT, `ordemCompra` INT, `idVenda` INT, `numeroNFe` INT, `tipo` INT, `parcela` INT, `observacao` INT, `statusFinanceiro` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_conta_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_conta_receber` (`idPagamento` INT, `idLoja` INT, `representacao` INT, `contraparte` INT, `dataPagamento` INT, `dataEmissao` INT, `idVenda` INT, `valor` INT, `tipo` INT, `parcela` INT, `observacao` INT, `status` INT, `statusFinanceiro` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_custo_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_custo_estoque` (`idVendaProduto2` INT, `ordemCompra` INT, `idVenda` INT, `descricao` INT, `R$ Consumo` INT, `R$ Compra` INT, `quant est` INT, `quant compra` INT, `diferenca` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_devolucao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_devolucao` (`data` INT, `idVendaProduto2` INT, `status` INT, `statusOriginal` INT, `idNFeSaida` INT, `idNFeEntrada` INT, `idNFeFutura` INT, `idVenda` INT, `idProduto` INT, `produto` INT, `obs` INT, `caixas` INT, `quant` INT, `un` INT, `codComercial` INT, `formComercial` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_entrega` (`prazoEntrega` INT, `idVenda` INT, `Recebeu` INT, `Entregou` INT, `Estoque` INT, `Entregue` INT, `Outros` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_entrega_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_entrega_pendente` (`data` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT, `dataRealReceb` INT, `statusFinanceiro` INT, `idVenda` INT, `Estoque` INT, `Agend/Entregue` INT, `Outros` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_entrega_produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_entrega_produtos` (`idVendaProduto2` INT, `idProduto` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `status` INT, `fornecedor` INT, `idVenda` INT, `produto` INT, `caixas` INT, `quant` INT, `un` INT, `quantCaixa` INT, `codComercial` INT, `formComercial` INT, `idConsumo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_estoque_consumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_estoque_consumo` (`Venda` INT, `idEstoque` INT, `statusProduto` INT, `status` INT, `bloco` INT, `fornecedor` INT, `descricao` INT, `quant` INT, `quantUpd` INT, `un` INT, `caixas` INT, `codComercial` INT, `dataRealEnt` INT, `created` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_estoque_contabil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_estoque_contabil` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `caixasContabil` INT, `contabil` INT, `caixas` INT, `restante` INT, `unEst` INT, `lote` INT, `local` INT, `idBloco` INT, `codComercial` INT, `nfe` INT, `idNFe` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_estoque_disponivel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_estoque_disponivel` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `restante` INT, `unEst` INT, `Caixas` INT, `lote` INT, `local` INT, `bloco` INT, `codComercial` INT, `nfe` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_estoque_zerado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_estoque_zerado` (`cnpjDest` INT, `status` INT, `idEstoque` INT, `fornecedor` INT, `descricao` INT, `restante` INT, `unEst` INT, `Caixas` INT, `lote` INT, `local` INT, `bloco` INT, `codComercial` INT, `nfe` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_faturamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_faturamento` (`ordemCompra` INT, `fornecedor` INT, `data` INT, `produtos` INT, `total` INT, `idCompra` INT, `dataPrevFat` INT, `vendedor` INT, `idVenda` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT, `representacao` INT, `dataFollowup` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_financeiro` (`mes` INT, `nomeFantasia` INT, `SomaDetotal` INT, `custo` INT, `sem custo` INT, `ICMS` INT, `IR+CSLL` INT, `PIS+Cofins+ISS` INT, `Representacao` INT, `Comissao Representacao` INT, `RT` INT, `ValorComissao` INT, `Cartao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fluxo_caixa_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fluxo_caixa_pendente` (`idPagamento` INT, `Compra/Venda` INT, `dataPagamento` INT, `dataRealizado` INT, `R$` INT, `Tipo` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fluxo_caixa_realizado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fluxo_caixa_realizado` (`ContraParte` INT, `Compra/Venda` INT, `dataRealizado` INT, `R$` INT, `Tipo` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fluxo_caixa_realizado_grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fluxo_caixa_realizado_grupo` (`Compra/Venda` INT, `dataRealizado` INT, `R$` INT, `Tipo` INT, `grupo` INT, `obs` INT, `ccusto` INT, `contaDestino` INT, `idConta` INT, `Status` INT, `ENT/SAI` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fluxo_resumo_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fluxo_resumo_pendente` (`dataPagamento` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fluxo_resumo_realizado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fluxo_resumo_realizado` (`dataRealizado` INT, `contaDestino` INT, `idConta` INT, `SAIDA` INT, `ENTRADA` INT, `R$` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_followup_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_followup_estoque` (`idEstoque` INT, `nome` INT, `observacao` INT, `dataFollowup` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_followup_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_followup_nfe` (`idNFe` INT, `nome` INT, `observacao` INT, `dataFollowup` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_followup_orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_followup_orcamento` (`idOrcamento` INT, `nome` INT, `observacao` INT, `dataFollowup` INT, `dataProxFollowup` INT, `semaforo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_followup_pedido_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_followup_pedido_fornecedor` (`ordemCompra` INT, `nome` INT, `observacao` INT, `dataFollowup` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_followup_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_followup_venda` (`idVenda` INT, `nome` INT, `Tipo` INT, `observacao` INT, `dataFollowup` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_compra` (`fornecedor` INT, `PEND` INT, `CONF` INT, `FAT` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_compra_confirmar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_compra_confirmar` (`CONF` INT, `Fornecedor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_compra_faturar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_compra_faturar` (`FAT` INT, `Fornecedor` INT, `representacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_compra_gerar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_compra_gerar` (`PEND` INT, `Fornecedor` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_logistica_agendar_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_logistica_agendar_coleta` (`Fornecedor` INT, `Estoque` INT, `Venda` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_logistica_coleta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_logistica_coleta` (`Fornecedor` INT, `COLET` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_logistica_recebimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_logistica_recebimento` (`Fornecedor` INT, `RECEB` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_fornecedor_logistica_representacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_fornecedor_logistica_representacao` (`Fornecedor` INT, `Produtos` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_galpao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_galpao` (`idEstoque_idConsumo` INT, `idEstoque` INT, `descricao` INT, `formComercial` INT, `status` INT, `idVenda` INT, `codComercial` INT, `numeroNFe` INT, `idNFe` INT, `caixas` INT, `quant` INT, `idBloco` INT, `idVendaProduto2` INT, `lote` INT, `tipo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_gares`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_gares` (`idPagamento` INT, `idNFe` INT, `Fornecedor` INT, `referencia` INT, `status` INT, `valor` INT, `numeroNFe` INT, `cnpjOrig` INT, `dataPagamento` INT, `dataRealizado` INT, `banco` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_grafico_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_grafico_loja` (`idLoja` INT, `dia` INT, `mes12` INT, `mes11` INT, `mes10` INT, `mes9` INT, `mes8` INT, `mes7` INT, `mes6` INT, `mes5` INT, `mes4` INT, `mes3` INT, `mes2` INT, `mes1` INT, `mes0` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_grafico_lojas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_grafico_lojas` (`dia` INT, `mes12` INT, `mes11` INT, `mes10` INT, `mes9` INT, `mes8` INT, `mes7` INT, `mes6` INT, `mes5` INT, `mes4` INT, `mes3` INT, `mes2` INT, `mes1` INT, `mes0` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_logistica_representacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_logistica_representacao` (`prazoEntrega` INT, `idPedido2` INT, `fornecedor` INT, `idVenda` INT, `idVendaProduto2` INT, `cliente` INT, `idCompra` INT, `ordemCompra` INT, `descricao` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `kgcx` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_distribuicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_distribuicao` (`idNFe` INT, `idVenda` INT, `numeroNFe` INT, `tipo` INT, `status` INT, `dataHoraEmissao` INT, `emitente` INT, `cnpjOrig` INT, `cnpjDest` INT, `chaveAcesso` INT, `obs` INT, `transportadora` INT, `gare` INT, `gareData` INT, `valor` INT, `infCpl` INT, `nsu` INT, `statusDistribuicao` INT, `dataDistribuicao` INT, `utilizada` INT, `ciencia` INT, `confirmar` INT, `desconhecer` INT, `naoRealizar` INT, `created` INT, `lastUpdated` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_entrada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_entrada` (`idNFe` INT, `chaveAcesso` INT, `CNPJ Dest` INT, `Emitente` INT, `Fornecedor` INT, `NFe` INT, `Status` INT, `Recebido Por` INT, `Data Receb` INT, `GARE` INT, `GARE Pago Em` INT, `OC` INT, `Venda` INT, `nsu` INT, `utilizada` INT, `dataHoraEmissao` INT, `dataFollowup` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_inutilizada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_inutilizada` (`idNFe` INT, `numeroNFe` INT, `status` INT, `emitente` INT, `created` INT, `chaveAcesso` INT, `infCpl` INT, `xml` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_inutilizada2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_inutilizada2` (`idNFe` INT, `numeroNFe` INT, `status` INT, `emitente` INT, `created` INT, `chaveAcesso` INT, `infCpl` INT, `xml` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_ordemCompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_ordemCompra` (`emitente` INT, `numeroNFe` INT, `OC` INT, `idPedido2` INT, `idPedidoFK` INT, `status` INT, `idRelacionado` INT, `selecionado` INT, `aliquotaSt` INT, `st` INT, `statusFinanceiro` INT, `ordemCompra` INT, `ordemRepresentacao` INT, `codFornecedor` INT, `idVenda` INT, `idVendaProduto1` INT, `idVendaProduto2` INT, `idCompra` INT, `fornecedor` INT, `idProduto` INT, `descricao` INT, `obs` INT, `colecao` INT, `codComercial` INT, `quant` INT, `quantUpd` INT, `un` INT, `un2` INT, `caixas` INT, `prcUnitario` INT, `preco` INT, `kgcx` INT, `formComercial` INT, `codBarras` INT, `dataPrevCompra` INT, `dataRealCompra` INT, `dataPrevConf` INT, `dataRealConf` INT, `dataPrevFat` INT, `dataRealFat` INT, `dataPrevColeta` INT, `dataRealColeta` INT, `dataPrevReceb` INT, `dataRealReceb` INT, `dataPrevEnt` INT, `dataRealEnt` INT, `created` INT, `lastUpdated` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_saida`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_saida` (`idNFe` INT, `chaveAcesso` INT, `Emitente` INT, `NFe` INT, `Status` INT, `Venda` INT, `CPF/CNPJ` INT, `Cliente` INT, `valor` INT, `dataHoraEmissao` INT, `dataFollowup` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_nfe_todas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_nfe_todas` (`idNFe` INT, `numeroNFe` INT, `status` INT, `emitente` INT, `created` INT, `chaveAcesso` INT, `infCpl` INT, `xml` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_orcamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_orcamento` (`idLoja` INT, `idUsuario` INT, `idUsuarioConsultor` INT, `status` INT, `diasRestantes` INT, `idOrcamento` INT, `vendedor` INT, `consultor` INT, `cliente` INT, `profissional` INT, `tel` INT, `telCel` INT, `telProf` INT, `data` INT, `total` INT, `dataFollowup` INT, `dataProxFollowup` INT, `observacao` INT, `semaforo` INT, `fornecedores` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_orcamento2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_orcamento2` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_orcamento_peso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_orcamento_peso` (`peso` INT, `idOrcamentoProduto` INT, `idOrcamento` INT, `idLoja` INT, `idProduto` INT, `fornecedor` INT, `produto` INT, `obs` INT, `prcUnitario` INT, `descUnitario` INT, `kg` INT, `caixas` INT, `quant` INT, `un` INT, `quantCaixa` INT, `codComercial` INT, `formComercial` INT, `parcial` INT, `desconto` INT, `parcialDesc` INT, `descGlobal` INT, `total` INT, `mostrarDesconto` INT, `estoque` INT, `promocao` INT, `created` INT, `lastUpdated` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_ordemcompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_ordemcompra` (`idVenda` INT, `idVendaProduto2` INT, `status` INT, `fornecedor` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT, `formComercial` INT, `obs` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_ordemcompra_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_ordemcompra_nfe` (`ordemCompra` INT, `numeroNFe` INT, `idNFe` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_ordemcompra_resumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_ordemcompra_resumo` (`Venda` INT, `Status` INT, `OC` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_pagamento_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_pagamento_loja` (`idLoja` INT, `idPagamento` INT, `pagamento` INT, `apenasRepresentacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_pedido_fornecedor_livre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_pedido_fornecedor_livre` (`idPedido2` INT, `idVenda` INT, `idVendaProduto2` INT, `ordemCompra` INT, `idCompra` INT, `descricao` INT, `quant` INT, `un` INT, `caixas` INT, `prcUnitario` INT, `codComercial` INT, `dataPrevCompra` INT, `dataRealCompra` INT, `dataPrevConf` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_preparar_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_preparar_entrega` (`idEvento` INT, `idVenda` INT, `produtos` INT, `idNFeSaida` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_produto` (`idProduto` INT, `estoque` INT, `promocao` INT, `descontinuado` INT, `desativado` INT, `representacao` INT, `fornecedor` INT, `statusEstoque` INT, `descricao` INT, `lote` INT, `estoqueRestante` INT, `estoqueCaixa` INT, `un` INT, `un2` INT, `colecao` INT, `tipo` INT, `minimo` INT, `multiplo` INT, `m2cx` INT, `pccx` INT, `kgcx` INT, `formComercial` INT, `codComercial` INT, `precoVenda` INT, `validade` INT, `ui` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_produto_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_produto_endereco` (`idVendaProduto2` INT, `idProduto` INT, `prazoEntregaPedido` INT, `novoPrazoEntregaPedido` INT, `dataPrevEntProduto` INT, `dataRealEnt` INT, `statusEstoque` INT, `status` INT, `fornecedor` INT, `idVenda` INT, `idNFeSaida` INT, `idNFeFutura` INT, `produto` INT, `idEstoque` INT, `lote` INT, `local` INT, `bloco` INT, `caixas` INT, `quant` INT, `un` INT, `quantCaixa` INT, `kg` INT, `codComercial` INT, `formComercial` INT, `idConsumo` INT, `Bairro` INT, `Logradouro` INT, `Número` INT, `Cidade` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_produto_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_produto_estoque` (`idVendaProduto2` INT, `idRelacionado` INT, `idProduto` INT, `fornecedor` INT, `produto` INT, `descUnitario` INT, `caixas` INT, `quant` INT, `un` INT, `total` INT, `reposicaoEntrega` INT, `quantCaixa` INT, `codComercial` INT, `formComercial` INT, `codBarras` INT, `peso` INT, `ncm` INT, `cest` INT, `cfop` INT, `unTrib` INT, `numeroPedido` INT, `itemPedido` INT, `tipoICMS` INT, `orig` INT, `cstICMS` INT, `modBC` INT, `vBC` INT, `pICMS` INT, `vICMS` INT, `modBCST` INT, `pMVAST` INT, `vBCST` INT, `pICMSST` INT, `vICMSST` INT, `cEnq` INT, `cstIPI` INT, `cstPIS` INT, `vBCPIS` INT, `pPIS` INT, `vPIS` INT, `cstCOFINS` INT, `vBCCOFINS` INT, `pCOFINS` INT, `vCOFINS` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_produto_pendente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_produto_pendente` (`status` INT, `idVendaProduto2` INT, `idVendaProdutoFK` INT, `fornecedor` INT, `idVenda` INT, `idProduto` INT, `produto` INT, `obs` INT, `colecao` INT, `formComercial` INT, `quant` INT, `un` INT, `Un2` INT, `Caixas` INT, `kgcx` INT, `codComercial` INT, `codBarras` INT, `custo` INT, `custoVenda` INT, `idCompra` INT, `st` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_produtos_pendentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_produtos_pendentes` (`Fornecedor` INT, `Descrição` INT, `Form` INT, `Quant` INT, `Un` INT, `Un2` INT, `Caixas` INT, `Cód Com` INT, `idCompra` INT, `Status` INT, `Financeiro` INT, `Mês` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_recebimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_recebimento` (`prazoEntrega` INT, `dataPrevReceb` INT, `idEstoque` INT, `idNFe` INT, `lote` INT, `local` INT, `bloco` INT, `fornecedor` INT, `numeroNFe` INT, `idVenda` INT, `idCompra` INT, `ordemCompra` INT, `produto` INT, `codComercial` INT, `quant` INT, `un` INT, `caixas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio` (`Loja` INT, `Vendedor` INT, `idUsuario` INT, `idUsuarioConsultor` INT, `idVenda` INT, `Mês` INT, `Data` INT, `Faturamento` INT, `Comissão` INT, `porcentagem` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio_loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio_loja` (`Loja` INT, `Faturamento` INT, `Comissão` INT, `Porcentagem` INT, `Mês` INT, `Reposição` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio_nfe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio_nfe` (`NFe` INT, `Serie` INT, `DataEmi` INT, `produtos` INT, `icmsst` INT, `frete` INT, `seguro` INT, `ipi` INT, `outrasdesp` INT, `desconto` INT, `totalnfe` INT, `bcicms` INT, `icms` INT, `cofins` INT, `impimp` INT, `pis` INT, `tipo` INT, `e/s` INT, `nprotocolo` INT, `dataautor` INT, `Criado em` INT, `status` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio_pagar` (`dataEmissao` INT, `dataRealizado` INT, `valorReal` INT, `Conta` INT, `observacao` INT, `contraParte` INT, `grupo` INT, `subGrupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio_receber` (`dataEmissao` INT, `dataRealizado` INT, `valorReal` INT, `Conta` INT, `observacao` INT, `contraParte` INT, `grupo` INT, `subGrupo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio_reposicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio_reposicao` (`loja` INT, `data` INT, `custoReposicao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_relatorio_vendedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_relatorio_vendedor` (`Loja` INT, `Vendedor` INT, `idUsuario` INT, `idUsuarioConsultor` INT, `Faturamento` INT, `Comissão` INT, `Porcentagem` INT, `Mês` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_resumo_relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_resumo_relatorio` (`Loja` INT, `Vendedor` INT, `Validos Anteriores` INT, `Gerados Mes` INT, `Revalidados Mes` INT, `Fechados Mes` INT, `Perdidos Mes` INT, `Validos Mes` INT, `% Fechados / Gerados` INT, `% Fechados / Carteira` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_usuario` (`descricao` INT, `idUsuario` INT, `idLoja` INT, `user` INT, `passwd` INT, `tipo` INT, `nome` INT, `email` INT, `especialidade` INT, `desativado` INT, `created` INT, `lastUpdated` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_validacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_validacao` (`idVenda` INT, `soma` INT, `total` INT, `Pag.` INT, `Dif` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_venda` (`idLoja` INT, `idUsuario` INT, `idUsuarioConsultor` INT, `statusFinanceiro` INT, `dataFinanceiro` INT, `status` INT, `diasRestantes` INT, `idVenda` INT, `ordemRepresentacao` INT, `vendedor` INT, `consultor` INT, `cliente` INT, `profissional` INT, `data` INT, `total` INT, `dataFollowup` INT, `observacao` INT, `fornecedores` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_venda2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_venda2` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_venda_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_venda_produto` (`status` INT, `statusFinanceiro` INT, `dataFinanceiro` INT, `idVenda` INT, `Vendedor` INT, `fornecedor` INT, `produto` INT, `obs` INT, `caixas` INT, `quant` INT, `un` INT, `codComercial` INT, `formComercial` INT, `prazoEntrega` INT, `novoPrazoEntrega` INT, `dataFollowup` INT, `observacao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`view_vinculo_estoque_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`view_vinculo_estoque_compra` (`idPedido2` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewentregasafazer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewentregasafazer` (`status` INT, `fornecedor` INT, `idVenda` INT, `produto` INT, `caixas` INT, `quant` INT, `un` INT, `quantCaixa` INT, `codComercial` INT, `formComercial` INT, `kgcx` INT, `peso` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`viewlucroreal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`viewlucroreal` (`mes` INT, `nomeFantasia` INT, `SomaDetotal` INT, `somadefrete` INT, `custo` INT, `sem custo` INT, `ICMS` INT, `IR+CSLL` INT, `PIS+Cofins+ISS` INT, `representacao` INT, `Comissao Representacao` INT, `RT` INT, `ValorComissao` INT, `Cartao` INT);

-- -----------------------------------------------------
-- Placeholder table for view `staccato`.`xxxx`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `staccato`.`xxxx` (`idVendaProduto2` INT, `percST` INT);

-- -----------------------------------------------------
-- function MYDATE
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` FUNCTION `MYDATE`() RETURNS varchar(10) CHARSET utf8mb4
    NO SQL
    DETERMINISTIC
return @mydate$$

DELIMITER ;

-- -----------------------------------------------------
-- function SHA1_PASSWORD
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` FUNCTION `SHA1_PASSWORD`(input VARCHAR(45)) RETURNS varchar(41) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
RETURN CONCAT('*', UPPER(SHA1(UNHEX(SHA1(input)))));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function SHA_PASSWORD
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` FUNCTION `SHA_PASSWORD`(input VARCHAR(45)) RETURNS varchar(41) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
RETURN concat('{SHA}', to_base64(unhex(sha1(input))));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure copy_into_pedido_fornecedor_has_produto2
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `copy_into_pedido_fornecedor_has_produto2`(currentIdPedido INT(11))
BEGIN
INSERT INTO pedido_fornecedor_has_produto2 (idPedidoFK, selecionado, aliquotaSt, st, status, statusFinanceiro, ordemCompra, ordemRepresentacao, idVenda, idVendaProduto2, 
                         idCompra, fornecedor, idProduto, descricao, obs, colecao, codComercial, quant, quantUpd, un, un2, caixas, prcUnitario, desconto, preco, kgcx, formComercial, 
                         codBarras, dataPrevCompra, dataRealCompra, dataPrevConf, dataRealConf, dataPrevFat, dataRealFat, dataPrevColeta, dataRealColeta, dataPrevReceb, dataRealReceb, dataPrevEnt, 
                         dataRealEnt) select idPedido1, selecionado, aliquotaSt, st, status, statusFinanceiro, ordemCompra, ordemRepresentacao, idVenda, idVendaProduto2, idCompra, fornecedor, 
                         idProduto, descricao, '', colecao, codComercial, quant, quantUpd, un, un2, caixas, prcUnitario, desconto, preco, kgcx, formComercial, codBarras, dataPrevCompra, 
                         dataRealCompra, dataPrevConf, dataRealConf, dataPrevFat, dataRealFat, dataPrevColeta, dataRealColeta, dataPrevReceb, dataRealReceb, dataPrevEnt, dataRealEnt FROM 
                         pedido_fornecedor_has_produto WHERE idPedido1 = currentIdPedido;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure copy_into_venda_has_produto2
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `copy_into_venda_has_produto2`(currentIdVendaProduto INT(11))
BEGIN
INSERT INTO venda_has_produto2 (idVendaProdutoFK, idRelacionado, selecionado, entregou, recebeu, status, statusOriginal, idCompra, idNFeSaida, idNFeFutura, fornecedor, idVenda, idLoja, 
            idProduto, produto, obs, lote, prcUnitario, descUnitario, kg, caixas, quant, un, quantCaixa, codComercial, formComercial, parcial, desconto, parcialDesc, descGlobal, total, mostrarDesconto, 
            estoque, promocao, reposicaoEntrega, reposicaoReceb, dataPrevCompra, dataRealCompra, dataPrevConf, dataRealConf, dataPrevFat, dataRealFat, dataPrevColeta, dataRealColeta, dataPrevReceb, 
            dataRealReceb, dataPrevEnt, dataRealEnt) SELECT idVendaProduto1, NULL, selecionado, entregou, recebeu, status, statusOriginal, idCompra, idNFeSaida, idNFeFutura, fornecedor, 
            idVenda, idLoja, idProduto, produto, '', lote, prcUnitario, descUnitario, kg, caixas, quant, un, quantCaixa, codComercial, formComercial, parcial, desconto, parcialDesc, descGlobal, total, 
            mostrarDesconto, estoque, promocao, reposicaoEntrega, reposicaoReceb, dataPrevCompra, dataRealCompra, dataPrevConf, dataRealConf, dataPrevFat, dataRealFat, dataPrevColeta, 
            dataRealColeta, dataPrevReceb, dataRealReceb, dataPrevEnt, dataRealEnt FROM venda_has_produto WHERE idVendaProduto1 = currentIdVendaProduto;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure estoque_peso
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `estoque_peso`(dias INT)
BEGIN
WITH RECURSIVE cte AS
(
  SELECT CURDATE() AS n, kg_dia(curdate()) AS kg
  UNION ALL
  SELECT n + interval -1 day, kg_dia(n + interval -1 day) FROM cte WHERE n > curdate() + interval -dias day
)
SELECT * FROM cte order by n asc;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_comissao
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `inserir_comissao`(newIdVendaProduto INT(11))
BEGIN
	INSERT INTO comissao (idVendaProduto1, `Loja`, `Vendedor`, `idUsuario`, `idUsuarioConsultor`, `idVenda`, `Mês`, `Faturamento`, `Comissão`, `porcentagem`, `fornecedor`, `especialidade`) SELECT 
    vp.idVendaProduto1,
    `l`.`descricao` AS `Loja`,
    `u`.`nome` AS `Vendedor`,
    `v`.`idUsuario` AS `idUsuario`,
    v.idUsuarioConsultor,
    `v`.`idVenda` AS `idVenda`,
    DATE_FORMAT(`v`.`data`, '%Y-%m') AS `Mês`,
    `vp`.`total` AS `Faturamento`,
    IF((RIGHT(`p`.`ui`, 1) = 'L'),
        ((`vp`.`total` * `f`.`comissao2`) / 100),
        ((`vp`.`total` * `f`.`comissao1`) / 100)) AS `Comissão`,
    IF((RIGHT(`p`.`ui`, 1) = 'L'),
        `f`.`comissao2`,
        `f`.`comissao1`) AS `porcentagem`,
        vp.fornecedor,
        f.especialidade
FROM
    `venda` `v`
        LEFT JOIN
    `venda_has_produto` `vp` ON (`v`.`idVenda` = `vp`.`idVenda`)
        LEFT JOIN
    `loja` `l` ON (`l`.`idLoja` = `v`.`idLoja`)
        LEFT JOIN
    `usuario` `u` ON (`u`.`idUsuario` = `v`.`idUsuario`)
        LEFT JOIN
    `produto` `p` ON (`p`.`idProduto` = `vp`.`idProduto`)
        LEFT JOIN
    `fornecedor` `f` ON (`f`.`idFornecedor` = `p`.`idFornecedor`)
WHERE
 vp.idVendaProduto1 = newIdVendaProduto;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure invalidar_orcamentos_expirados
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `invalidar_orcamentos_expirados`()
BEGIN
UPDATE orcamento 
SET 
    status = 'EXPIRADO'
WHERE
    NOW() > DATE_ADD(data, INTERVAL validade DAY)
        AND status = 'ATIVO';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure invalidar_produtos_expirados
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `invalidar_produtos_expirados`()
BEGIN 
           
UPDATE produto 
SET 
    descontinuado = TRUE
WHERE
    descontinuado = FALSE AND estoque = FALSE AND validade IS NOT NULL AND validade < CURDATE();

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure invalidar_staccatoOff
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `invalidar_staccatoOff`()
BEGIN

UPDATE produto 
SET 
    precoVenda = oldPrecoVenda, oldPrecoVenda = NULL, promocao = 0, descricao = left(descricao, char_length(descricao) - 28), validade = NULL
WHERE
	estoque = TRUE AND promocao = 2 AND validade IS NOT NULL AND validade < CURDATE();

END$$

DELIMITER ;

-- -----------------------------------------------------
-- function kg_dia
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` FUNCTION `kg_dia`(dia DATE) RETURNS int
    DETERMINISTIC
BEGIN
DECLARE kg integer;
SET kg = 0;
 WITH e2 AS (SELECT 
				`consumo`.`idEstoque` AS `idEstoque`,
				SUM(`consumo`.`quant`) AS `consumo`
			 FROM
				`estoque_has_consumo` `consumo`
			 LEFT JOIN `venda_has_produto2` `vp` ON `consumo`.`idVendaProduto2` = `vp`.`idVendaProduto2`
			 WHERE
				`vp`.`dataRealEnt` <= dia 
			 GROUP BY `consumo`.`idEstoque`)
 SELECT 
        SUM(ROUND((`e`.`quant` + e.ajuste + COALESCE(`e2`.`consumo`, 0)) / `p`.`quantCaixa` * coalesce(p.kgcx, 0), 0)) INTO kg
    FROM
        `estoque` `e`
        LEFT JOIN `e2` ON `e`.`idEstoque` = `e2`.`idEstoque`
        LEFT JOIN `produto` `p` ON `e`.`idProduto` = `p`.`idProduto`
		LEFT JOIN estoque_has_compra ehc ON e.idEstoque = ehc.idEstoque
        LEFT JOIN pedido_fornecedor_has_produto2 pf2 ON ehc.idPedido2 = pf2.idPedido2
        WHERE
        e.status = 'ESTOQUE' AND pf2.dataRealReceb <= dia;
RETURN kg;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure relatorio
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `relatorio`(mes varchar(20))
BEGIN
select * from view_relatorio where Mês = mes;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_all_pedido_fornecedor_status
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_all_pedido_fornecedor_status`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
    DECLARE id INT;
    DECLARE cursor1 CURSOR FOR SELECT idPedido2 FROM pedido_fornecedor_has_produto2;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN cursor1;
    
    read_loop: LOOP
		FETCH cursor1 INTO id;
        IF done THEN LEAVE read_loop;
        END IF;
        CALL update_pedido_fornecedor_status(id);
	END LOOP;
    
    CLOSE cursor1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_all_pedido_fornecedor_statusFinanceiro
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_all_pedido_fornecedor_statusFinanceiro`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
    DECLARE id INT;
    DECLARE cursor1 CURSOR FOR SELECT idPedidoFK FROM pedido_fornecedor_has_produto2;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN cursor1;
    
    read_loop: LOOP
		FETCH cursor1 INTO id;
        IF done THEN LEAVE read_loop;
        END IF;
        CALL update_pedido_fornecedor_statusFinanceiro(id);
	END LOOP;
    
    CLOSE cursor1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_all_venda_status
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_all_venda_status`()
BEGIN
	DECLARE done INT DEFAULT FALSE;
    DECLARE id INT;
    DECLARE cursor1 CURSOR FOR SELECT idVendaProduto1 FROM venda_has_produto;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN cursor1;
    
    read_loop: LOOP
		FETCH cursor1 INTO id;
        IF done THEN LEAVE read_loop;
        END IF;
        CALL update_venda_produto_status(id);
	END LOOP;
    
    CLOSE cursor1;
    
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'DEVOLVIDO' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGUE' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. ENTREGA' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. RECEB.' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM ENTREGA' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGA AGEND.' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ESTOQUE' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM RECEBIMENTO' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COLETA' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM FATURAMENTO' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COMPRA' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'INICIADO' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'PENDENTE' AND v.status != 'CANCELADO' AND v.devolucao = FALSE;  
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_orcamento_fornecedores
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_orcamento_fornecedores`(currentId VARCHAR(30))
BEGIN
INSERT INTO orcamento_has_fornecedor SELECT * FROM (SELECT idOrcamento, GROUP_CONCAT(DISTINCT fornecedor SEPARATOR ', ') AS fornecedores FROM orcamento_has_produto WHERE idOrcamento = currentId) AS op ON DUPLICATE KEY UPDATE fornecedores = op.fornecedores;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_pedido_fornecedor_status
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_pedido_fornecedor_status`(currentId INT(11))
BEGIN
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'CANCELADO';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'DEVOLVIDO';
    
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'ENTREGUE';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'REPO. ENTREGA';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'REPO. RECEB.';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'EM ENTREGA';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'ENTREGA AGEND.';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'ESTOQUE';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'EM RECEBIMENTO';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'EM COLETA';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'EM FATURAMENTO';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'EM COMPRA';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'INICIADO';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.status = pf2.status WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.status = 'PENDENTE';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_pedido_fornecedor_statusFinanceiro
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_pedido_fornecedor_statusFinanceiro`(currentId INT(11))
BEGIN
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.statusFinanceiro = pf2.statusFinanceiro WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.statusFinanceiro = 'CANCELADO';
    
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.statusFinanceiro = pf2.statusFinanceiro WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.statusFinanceiro = 'LIBERADO';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.statusFinanceiro = pf2.statusFinanceiro WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.statusFinanceiro = 'CONFERIDO';
    UPDATE pedido_fornecedor_has_produto pf1, pedido_fornecedor_has_produto2 pf2 SET pf1.statusFinanceiro = pf2.statusFinanceiro WHERE pf1.idPedido1 = pf2.idPedidoFK AND currentId = pf2.idPedidoFK AND pf2.statusFinanceiro = 'PENDENTE';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_produto_estoque_quant
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_produto_estoque_quant`(currentId INT(11))
BEGIN
    UPDATE produto p,
    estoque e 
SET 
    p.estoqueRestante = e.restante,
    p.descontinuado = (e.restante <= 0)
WHERE
    p.idEstoque = e.idEstoque
        AND e.idEstoque = currentId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_quant_estoque
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_quant_estoque`(currentId INT(11))
BEGIN
	SET @restante := (SELECT e.quant + COALESCE(SUM(ehc.quant), 0) 
						FROM estoque e 
						LEFT JOIN estoque_has_consumo ehc ON e.idEstoque = ehc.idEstoque 
						WHERE e.idEstoque = currentId GROUP BY e.idEstoque);
	SET @ajuste := (SELECT SUM(IF(ehc.status = 'AJUSTE', ehc.quant, 0))
                        FROM estoque e 
						LEFT JOIN estoque_has_consumo ehc ON e.idEstoque = ehc.idEstoque 
						WHERE e.idEstoque = currentId GROUP BY e.idEstoque);
	SET @contabil := (SELECT e.quant + @ajuste + COALESCE(ehc.quant, 0)
                        FROM estoque e
                        LEFT JOIN (SELECT ehc.idEstoque, SUM(ehc.quant) AS quant FROM estoque_has_consumo ehc 
								   LEFT JOIN venda_has_produto2 vp2 ON ehc.idVendaProduto2 = vp2.idVendaProduto2
                                   WHERE ehc.idEstoque = currentId AND vp2.dataRealEnt <= CURDATE()) 
                                   ehc ON e.idEstoque = ehc.idEstoque
                        WHERE e.idEstoque = currentId);

	UPDATE estoque SET restante = COALESCE(@restante, 0), ajuste = COALESCE(@ajuste, 0), contabil = COALESCE(@contabil, 0) WHERE idEstoque = currentId;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_venda_fornecedores
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_venda_fornecedores`(currentId VARCHAR(30))
BEGIN
INSERT INTO venda_has_fornecedor SELECT * FROM (SELECT idVenda, GROUP_CONCAT(DISTINCT fornecedor SEPARATOR ', ') AS fornecedores FROM venda_has_produto WHERE idVenda = currentId) AS vp ON DUPLICATE KEY UPDATE fornecedores = vp.fornecedores;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_venda_produto_status
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_venda_produto_status`(currentId INT(11))
BEGIN
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'DEVOLVIDO ESTOQUE';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'DEVOLVIDO FORN.';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'DEVOLVIDO';
    
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'ENTREGUE';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'REPO. ENTREGA';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'REPO. RECEB.';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'EM ENTREGA';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'ENTREGA AGEND.';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'ESTOQUE';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'EM RECEBIMENTO';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'EM COLETA';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'EM FATURAMENTO';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'EM COMPRA';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'INICIADO';
    UPDATE venda_has_produto vp1, venda_has_produto2 vp2 SET vp1.status = vp2.status WHERE vp1.idVendaProduto1 = vp2.idVendaProdutoFK AND currentId = vp2.idVendaProdutoFK AND vp2.status = 'PENDENTE';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_venda_status
-- -----------------------------------------------------

DELIMITER $$
USE `staccato`$$
CREATE DEFINER=`root`@`%` PROCEDURE `update_venda_status`(currentId VARCHAR(30))
BEGIN
	DECLARE done INT DEFAULT FALSE;
    DECLARE id INT;
    DECLARE cursor1 CURSOR FOR SELECT idVendaProduto1 FROM venda_has_produto where idVenda = currentId;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    OPEN cursor1;
    
    read_loop: LOOP
		FETCH cursor1 INTO id;
        IF done THEN LEAVE read_loop;
        END IF;
        CALL update_venda_produto_status(id);
	END LOOP;
    
    CLOSE cursor1;
    
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'DEVOLVIDO' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGUE' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. ENTREGA' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'REPO. RECEB.' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM ENTREGA' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ENTREGA AGEND.' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'ESTOQUE' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM RECEBIMENTO' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COLETA' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM FATURAMENTO' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'EM COMPRA' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
	UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'INICIADO' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;
    UPDATE venda v, venda_has_produto vp SET v.status = vp.status WHERE v.idVenda = vp.idVenda AND vp.status = 'PENDENTE' AND vp.idVenda = currentId AND v.status != 'CANCELADO' AND v.devolucao = FALSE;    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `staccato`.`VendasCMV`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`VendasCMV`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`VendasCMV` AS select `vp2`.`idVendaProduto2` AS `id`,date_format(`v`.`data`,'%Y/%m') AS `mes`,`l`.`descricao` AS `loja`,`vp2`.`total` AS `venda`,`vp2`.`quant` AS `qtddvenda`,sum(`staccato`.`pf`.`quant`) AS `qtddcompra`,sum(`staccato`.`ehc`.`quant`) AS `qtddestq`,sum(`staccato`.`pf`.`preco`) AS `custocompra`,sum(`staccato`.`ehc`.`valor`) AS `custoestq`,`f`.`comissaoLoja` AS `comissrepr`,`v`.`representacao` AS `repr`,`vp2`.`status` AS `status`,`staccato`.`ehc`.`tipoICMS` AS `tipoICMS`,coalesce(group_concat(distinct `staccato`.`ehc`.`vICMSST` separator ','),0) AS `vICMS`,`staccato`.`xxxx`.`percST` AS `percST` from ((((((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`loja` `l` on((`vp2`.`idLoja` = `l`.`idLoja`))) left join `staccato`.`viewPedidoFornecedor` `pf` on((`vp2`.`idVendaProduto2` = `staccato`.`pf`.`idVendaProduto2`))) left join `staccato`.`viewEstoqueConsumo2` `ehc` on((`vp2`.`idVendaProduto2` = `staccato`.`ehc`.`idVendaProduto2`))) left join `staccato`.`fornecedor` `f` on((`vp2`.`fornecedor` = `f`.`razaoSocial`))) left join `staccato`.`xxxx` on((`vp2`.`idVendaProduto2` = `staccato`.`xxxx`.`idVendaProduto2`))) where (`v`.`data` >= '2017-01-01') group by `vp2`.`idVendaProduto2`,date_format(`v`.`data`,'%Y/%m'),`l`.`descricao`,`vp2`.`total`,`vp2`.`quant`,`f`.`comissaoLoja`,`v`.`representacao`,`vp2`.`status`,`staccato`.`ehc`.`tipoICMS`,`staccato`.`ehc`.`vICMS`,`staccato`.`xxxx`.`percST` having (`vp2`.`status` not in ('CANCELADO','SUBSTITUIDO'));

-- -----------------------------------------------------
-- View `staccato`.`ViewDespesas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`ViewDespesas`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`ViewDespesas` AS select date_format(`staccato`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m') AS `mes`,`staccato`.`loja`.`nomeFantasia` AS `nomeFantasia`,'Venda' AS `representacao`,'' AS `semCusto`,(sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`)) + 0E0) AS `DespTotal`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` like 'RH%'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespRH`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` = 'RT\'s'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespRT`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - ICMS;ST;ISS'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespST`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - Pis;Cofins'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespPis`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` = 'Impostos - IR;CSLL'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespIR`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` like 'Logística%'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespLog`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` = 'Produtos - Venda'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespCMV`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` = 'Aluguel'),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespALU`,sum(if(((not((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` like 'Impostos - %'))) and (not((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` like 'Logística%'))) and (not((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` like 'RH%'))) and (`staccato`.`conta_a_pagar_has_pagamento`.`grupo` <> 'RT\'s') and (`staccato`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Produtos - Venda') and (`staccato`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Aluguel')),if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`),0E0)) AS `DespOutros` from (`staccato`.`conta_a_pagar_has_pagamento` left join `staccato`.`loja` on((`staccato`.`loja`.`idLoja` = `staccato`.`conta_a_pagar_has_pagamento`.`centroCusto`))) where ((`staccato`.`conta_a_pagar_has_pagamento`.`grupo` <> 'Transferência') and (`staccato`.`conta_a_pagar_has_pagamento`.`status` <> 'CANCELADO') and (`staccato`.`conta_a_pagar_has_pagamento`.`desativado` = false) and (`staccato`.`conta_a_pagar_has_pagamento`.`status` <> 'SUBSTITUIDO')) group by `mes`,`staccato`.`loja`.`nomeFantasia`,`representacao`,`semCusto`;

-- -----------------------------------------------------
-- View `staccato`.`ViewDespesasExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`ViewDespesasExcel`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`ViewDespesasExcel` AS select date_format(`cp`.`dataEmissao`,'%Y/%m') AS `mes`,`cp`.`status` AS `status`,sum(if((`cp`.`status` = 'pago'),`cp`.`valorReal`,(`cp`.`valor` + 0E0))) AS `valor`,`staccato`.`loja`.`descricao` AS `centroCusto`,`cp`.`grupo` AS `grupo` from (`staccato`.`conta_a_pagar_has_pagamento` `cp` left join `staccato`.`loja` on((`staccato`.`loja`.`idLoja` = `cp`.`centroCusto`))) where ((`cp`.`desativado` = 0) and (`cp`.`dataEmissao` > '2019-12-31') and (`cp`.`status` <> 'cancelado') and (`cp`.`status` <> 'substituido')) group by date_format(`cp`.`dataEmissao`,'%Y/%m'),`cp`.`status`,`cp`.`centroCusto`,`cp`.`grupo`;

-- -----------------------------------------------------
-- View `staccato`.`ViewDespesasServicos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`ViewDespesasServicos`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`ViewDespesasServicos` AS select date_format(`c`.`dataEmissao`,'%Y/%m') AS `MES`,`c`.`grupo` AS `grupo`,`staccato`.`loja`.`descricao` AS `descricao`,`c`.`status` AS `status`,if((`c`.`status` = 'pago'),`c`.`valorReal`,`c`.`valor`) AS `valor`,`c`.`contraParte` AS `contraParte`,`c`.`observacao` AS `observacao` from (`staccato`.`conta_a_pagar_has_pagamento` `c` left join `staccato`.`loja` on((`c`.`idLoja` = `staccato`.`loja`.`idLoja`))) where (((`c`.`centroCusto` = '17') or (`c`.`centroCusto` = '18')) and (`c`.`status` <> 'cancelado') and (`c`.`dataEmissao` > '2021-01-01') and (`c`.`desativado` = 0));

-- -----------------------------------------------------
-- View `staccato`.`ViewReceitaServiços`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`ViewReceitaServiços`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`ViewReceitaServiços` AS select date_format(`v`.`data`,'%Y/%m') AS `mes venda`,date_format(`vhp`.`dataRealEnt`,'%Y/%m') AS `mes entrega`,`vhp`.`idVenda` AS `idVenda`,`vhp`.`total` AS `total`,`vhp`.`status` AS `status`,`vhp`.`fornecedor` AS `fornecedor`,left(`vhp`.`idVenda`,4) AS `loja`,`vhp`.`produto` AS `produto` from (`staccato`.`venda_has_produto2` `vhp` left join `staccato`.`venda` `v` on((`vhp`.`idVenda` = `v`.`idVenda`))) where ((`vhp`.`status` <> 'cancelado') and (`vhp`.`fornecedor` like '%staccato%') and (`v`.`data` > '2021-01-01'));

-- -----------------------------------------------------
-- View `staccato`.`XL_ProdutosMes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`XL_ProdutosMes`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`XL_ProdutosMes` AS select date_format(`v`.`data`,'%Y/%m') AS `mes`,if((`p`.`idProdutoRelacionado` is null),`p`.`idProduto`,`p`.`idProdutoRelacionado`) AS `idProduto`,any_value(`p`.`descricao`) AS `produto`,any_value(`p`.`formComercial`) AS `formato`,any_value(`p`.`fornecedor`) AS `fornecedor`,if((right(any_value(`p`.`ui`),1) = 'l'),'loes','') AS `loes`,left(`v`.`idVenda`,4) AS `Loja`,sum(`vp2`.`quant`) AS `qtdd`,sum(`vp2`.`total`) AS `total`,count(`vp2`.`idVenda`) AS `nrvendas` from ((`staccato`.`produto` `p` left join `staccato`.`venda_has_produto2` `vp2` on((`p`.`idProduto` = `vp2`.`idProduto`))) left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) where (((`v`.`data` > '2019-01-01') or (`v`.`data` is null)) and ((`vp2`.`status` <> 'cancelado') or (`vp2`.`status` is null)) and ((`vp2`.`quant` is not null) or (`p`.`descontinuado` = 0))) group by `mes`,`Loja`,`idProduto`;

-- -----------------------------------------------------
-- View `staccato`.`XL_VendasMes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`XL_VendasMes`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`XL_VendasMes` AS select date_format(`v`.`data`,'%Y/%m') AS `mes`,count(`v`.`idVenda`) AS `qtdd`,left(`v`.`idVenda`,4) AS `Loja`,sum((`v`.`total` - `v`.`frete`)) AS `tot`,`u`.`user` AS `user` from (`staccato`.`venda` `v` left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) where (`v`.`data` > '2019-01-01') group by date_format(`v`.`data`,'%Y/%m'),left(`v`.`idVenda`,4),`u`.`user`;

-- -----------------------------------------------------
-- View `staccato`.`aaa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`aaa`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`aaa` AS select `n`.`idNFe` AS `idNFe`,`n`.`numeroNFe` AS `numeroNFe`,sum(if((`e`.`tipoICMS` = 'ICMS00'),`e`.`valor`,0)) AS `valorSujeitoSt` from (`staccato`.`estoque` `e` left join `staccato`.`nfe` `n` on((`n`.`idNFe` = `e`.`idNFe`))) where (`e`.`idNFe` is not null) group by `n`.`idNFe` having (`valorSujeitoSt` > 0);

-- -----------------------------------------------------
-- View `staccato`.`bbb`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`bbb`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`bbb` AS select `staccato`.`aaa`.`idNFe` AS `idNFe`,(`cp`.`valorReal` / `staccato`.`aaa`.`valorSujeitoSt`) AS `percst` from (`staccato`.`aaa` left join `staccato`.`conta_a_pagar_has_pagamento` `cp` on((`cp`.`nfe` = `staccato`.`aaa`.`numeroNFe`))) having (`percst` > 0);

-- -----------------------------------------------------
-- View `staccato`.`despesas por grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`despesas por grupo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`despesas por grupo` AS select `staccato`.`conta_a_pagar_has_pagamento`.`grupo` AS `grupo`,`staccato`.`conta_a_pagar_has_pagamento`.`contraParte` AS `contraparte`,`staccato`.`conta_a_pagar_has_pagamento`.`observacao` AS `observacao`,`staccato`.`conta_a_pagar_has_pagamento`.`dataEmissao` AS `dataemissao`,date_format(`staccato`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m') AS `mes`,if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'pago'),`staccato`.`conta_a_pagar_has_pagamento`.`dataRealizado`,`staccato`.`conta_a_pagar_has_pagamento`.`dataPagamento`) AS `datapagamento`,if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'pago'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`) AS `valor`,`staccato`.`conta_a_pagar_has_pagamento`.`status` AS `status`,`staccato`.`loja`.`descricao` AS `descricao` from (`staccato`.`conta_a_pagar_has_pagamento` left join `staccato`.`loja` on((`staccato`.`conta_a_pagar_has_pagamento`.`centroCusto` = `staccato`.`loja`.`idLoja`))) where ((`staccato`.`conta_a_pagar_has_pagamento`.`dataEmissao` > '2019-01-01') and (`staccato`.`conta_a_pagar_has_pagamento`.`desativado` = 0) and (`staccato`.`conta_a_pagar_has_pagamento`.`status` <> 'cancelado'));

-- -----------------------------------------------------
-- View `staccato`.`view--rt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view--rt`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view--rt` AS select `cp2`.`dataEmissao` AS `data`,`cp2`.`idvenda` AS `idvenda`,`cp2`.`contraParte` AS `Prof.cpg`,`cp2`.`valor` AS `com.cpg`,`cp2`.`status` AS `status.cpg`,(`v`.`total` - `v`.`frete`) AS `valorvenda`,`p`.`nome_razao` AS `prof.pedido`,`p`.`comissao` AS `perc.com`,(((`v`.`total` - `v`.`frete`) * `p`.`comissao`) / 100) AS `com.pedido` from (((select `cp`.`dataEmissao` AS `dataEmissao`,`cp`.`idVenda` AS `idvenda`,`cp`.`idLoja` AS `idloja`,`cp`.`contraParte` AS `contraParte`,sum(`cp`.`valor`) AS `valor`,`cp`.`status` AS `status` from `staccato`.`conta_a_pagar_has_pagamento` `cp` where ((`cp`.`grupo` like '%rt%') and (`cp`.`status` <> 'cancelado') and (`cp`.`status` <> 'pago') and (`cp`.`desativado` = 0)) group by `cp`.`dataEmissao`,`cp`.`idVenda`,`cp`.`idLoja`,`cp`.`contraParte`,`cp`.`status`) `cp2` left join `staccato`.`venda` `v` on((`cp2`.`idvenda` = `v`.`idVenda`))) left join `staccato`.`profissional` `p` on((`p`.`idProfissional` = `v`.`idProfissional`)));

-- -----------------------------------------------------
-- View `staccato`.`viewDespesasporCentrodeCusto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewDespesasporCentrodeCusto`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewDespesasporCentrodeCusto` AS select `c`.`dataEmissao` AS `dataEmissao`,`c`.`dataPagamento` AS `dataPagamento`,`c`.`dataRealizado` AS `dataRealizado`,`c`.`contraParte` AS `contraParte`,`c`.`observacao` AS `observacao`,`c`.`valor` AS `valor`,`c`.`valorReal` AS `valorReal`,`l`.`descricao` AS `descricao`,`c`.`grupo` AS `grupo`,`c`.`status` AS `status` from (`staccato`.`conta_a_pagar_has_pagamento` `c` left join `staccato`.`loja` `l` on((`c`.`centroCusto` = `l`.`idLoja`))) where ((`c`.`dataEmissao` >= '2021-01-01') and (`c`.`status` <> 'cancelado') and (`c`.`desativado` = 0));

-- -----------------------------------------------------
-- View `staccato`.`viewEstoqueConsumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewEstoqueConsumo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewEstoqueConsumo` AS select `ehc`.`idVendaProduto2` AS `idVendaProduto2`,group_concat(distinct `ehc`.`tipoICMS` separator ',') AS `tipoICMS`,group_concat(distinct `ehc`.`vICMS` separator ',') AS `vICMS`,sum(`ehc`.`vICMSST`) AS `vICMSST`,sum(`ehc`.`quant`) AS `quant`,sum(`ehc`.`valor`) AS `valor` from `staccato`.`estoque_has_consumo` `ehc` where (`ehc`.`idVendaProduto2` is not null) group by `ehc`.`idVendaProduto2`;

-- -----------------------------------------------------
-- View `staccato`.`viewEstoqueConsumo2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewEstoqueConsumo2`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewEstoqueConsumo2` AS select `ehc`.`idVendaProduto2` AS `idVendaProduto2`,`e`.`tipoICMS` AS `tipoICMS`,(`e`.`vICMS` * ((`ehc`.`quant` * -(1)) / `e`.`quant`)) AS `vICMS`,(`e`.`vICMSST` * ((`ehc`.`quant` * -(1)) / `e`.`quant`)) AS `vICMSST`,((`ehc`.`quant` * -(1)) / `e`.`quant`) AS `quant`,(`e`.`valor` * ((`ehc`.`quant` * -(1)) / `e`.`quant`)) AS `valor` from (`staccato`.`estoque_has_consumo` `ehc` left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) where (`ehc`.`idVendaProduto2` is not null) group by `ehc`.`idVendaProduto2`,`ehc`.`idEstoque`,`ehc`.`quant`;

-- -----------------------------------------------------
-- View `staccato`.`viewFreteExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewFreteExcel`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewFreteExcel` AS select date_format(`v`.`data`,'%Y/%m') AS `mes`,`v`.`status` AS `status`,sum(`v`.`frete`) AS `frete`,`staccato`.`loja`.`descricao` AS `Loja` from (`staccato`.`venda` `v` left join `staccato`.`loja` on((`staccato`.`loja`.`idLoja` = `v`.`idLoja`))) where ((`v`.`status` <> 'cancelado') and (`v`.`data` > '2016-12-31')) group by date_format(`v`.`data`,'%Y/%m'),`v`.`status`,`staccato`.`loja`.`descricao`;

-- -----------------------------------------------------
-- View `staccato`.`viewPedidoFornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewPedidoFornecedor`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewPedidoFornecedor` AS select `pf2`.`aliquotaSt` AS `aliquotaSt`,`pf2`.`st` AS `st`,`pf2`.`status` AS `status`,`pf2`.`idVendaProduto2` AS `idVendaProduto2`,`pf2`.`quant` AS `quant`,`pf2`.`preco` AS `preco` from `staccato`.`pedido_fornecedor_has_produto2` `pf2` where (`pf2`.`status` <> 'cancelado');

-- -----------------------------------------------------
-- View `staccato`.`viewRelatoriosGestao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewRelatoriosGestao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewRelatoriosGestao` AS select date_format(`staccato`.`venda`.`data`,'%Y/%m') AS `Mes`,`staccato`.`usuario`.`user` AS `Vendedor`,`staccato`.`profissional`.`nome_razao` AS `Profissional`,`staccato`.`loja`.`descricao` AS `Loja`,`staccato`.`venda_has_produto`.`fornecedor` AS `fornecedor`,(sum(`staccato`.`venda_has_produto`.`total`) + 0) AS `Total`,`staccato`.`venda_has_produto`.`status` AS `status` from ((((`staccato`.`venda_has_produto` left join `staccato`.`venda` on((`staccato`.`venda_has_produto`.`idVenda` = `staccato`.`venda`.`idVenda`))) left join `staccato`.`profissional` on((`staccato`.`venda`.`idProfissional` = `staccato`.`profissional`.`idProfissional`))) left join `staccato`.`usuario` on((`staccato`.`venda`.`idUsuario` = `staccato`.`usuario`.`idUsuario`))) left join `staccato`.`loja` on((`staccato`.`venda_has_produto`.`idLoja` = `staccato`.`loja`.`idLoja`))) group by date_format(`staccato`.`venda`.`data`,'%Y/%m'),`staccato`.`usuario`.`user`,`staccato`.`loja`.`descricao`,`staccato`.`profissional`.`nome_razao`,`staccato`.`venda_has_produto`.`fornecedor`,`staccato`.`venda_has_produto`.`status` having (`staccato`.`venda_has_produto`.`status` <> 'cancelado');

-- -----------------------------------------------------
-- View `staccato`.`viewResultadoCD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewResultadoCD`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`viewResultadoCD` AS select `v`.`mes` AS `mes`,`v`.`frete` AS `frete`,`c`.`VALOR` AS `valor`,`c`.`DespLogistica` AS `DespLogistica`,`c`.`DespRH` AS `DespRH`,`c`.`DespOutras` AS `DespOutras` from ((select date_format(`staccato`.`venda`.`data`,'%Y/%m') AS `mes`,sum(`staccato`.`venda`.`frete`) AS `frete` from `staccato`.`venda` where (`staccato`.`venda`.`status` <> 'cancelado') group by date_format(`staccato`.`venda`.`data`,'%Y/%m')) `v` left join (select date_format(`staccato`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m') AS `mes`,sum(if((`staccato`.`conta_a_pagar_has_pagamento`.`status` = 'PAGO'),`staccato`.`conta_a_pagar_has_pagamento`.`valorReal`,`staccato`.`conta_a_pagar_has_pagamento`.`valor`)) AS `VALOR`,sum(if((left(`staccato`.`conta_a_pagar_has_pagamento`.`grupo`,9) = 'Logística'),`staccato`.`conta_a_pagar_has_pagamento`.`valor`,0)) AS `DespLogistica`,sum(if((left(`staccato`.`conta_a_pagar_has_pagamento`.`grupo`,2) = 'RH'),`staccato`.`conta_a_pagar_has_pagamento`.`valor`,0)) AS `DespRH`,sum(if(((left(`staccato`.`conta_a_pagar_has_pagamento`.`grupo`,9) = 'Logística') or (0 <> if((left(`staccato`.`conta_a_pagar_has_pagamento`.`grupo`,2) = 'RH'),`staccato`.`conta_a_pagar_has_pagamento`.`valor`,0))),0,`staccato`.`conta_a_pagar_has_pagamento`.`valor`)) AS `DespOutras` from `staccato`.`conta_a_pagar_has_pagamento` where ((`staccato`.`conta_a_pagar_has_pagamento`.`centroCusto` = 6) and (`staccato`.`conta_a_pagar_has_pagamento`.`status` <> 'CANCELADO') and (`staccato`.`conta_a_pagar_has_pagamento`.`status` <> 'SUBSTITUIDO') and (`staccato`.`conta_a_pagar_has_pagamento`.`desativado` = false)) group by date_format(`staccato`.`conta_a_pagar_has_pagamento`.`dataEmissao`,'%Y/%m')) `c` on((`v`.`mes` = `c`.`mes`))) where (`v`.`mes` > '2017');

-- -----------------------------------------------------
-- View `staccato`.`viewSimuladorExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewSimuladorExcel`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewSimuladorExcel` AS select `ohp`.`idOrcamentoProduto` AS `idOrcamentoProduto`,`ohp`.`idOrcamento` AS `idOrcamento`,`ohp`.`fornecedor` AS `fornecedor`,`ohp`.`produto` AS `produto`,`ohp`.`codComercial` AS `codComercial`,`ohp`.`prcUnitario` AS `prcUnitario`,`ohp`.`quant` AS `quant`,`ohp`.`desconto` AS `desconto`,`ohp`.`descGlobal` AS `descGlobal`,`ohp`.`total` AS `total`,`o`.`frete` AS `frete`,`o`.`total` AS `totalgeral`,`p`.`custo` AS `custo`,`p`.`st` AS `st`,`pr`.`nome_razao` AS `profissional`,`pr`.`comissao` AS `comissao`,`c`.`nome_razao` AS `cliente` from ((((`staccato`.`orcamento_has_produto` `ohp` left join `staccato`.`orcamento` `o` on((`ohp`.`idOrcamento` = `o`.`idOrcamento`))) left join `staccato`.`produto` `p` on((`p`.`idProduto` = `ohp`.`idProduto`))) left join `staccato`.`profissional` `pr` on((`pr`.`idProfissional` = `o`.`idProfissional`))) left join `staccato`.`cliente` `c` on((`c`.`idCliente` = `o`.`idCliente`))) where (`o`.`status` in ('ATIVO','EXPIRADO')) order by `o`.`created` desc limit 10000;

-- -----------------------------------------------------
-- View `staccato`.`viewTaxaCartaoExcel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewTaxaCartaoExcel`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewTaxaCartaoExcel` AS select date_format(`v`.`dataEmissao`,'%Y/%m') AS `mes`,sum((if((`v`.`status` = 'RECEBIDO'),`v`.`valorReal`,`v`.`valor`) * -(1))) AS `valor`,`staccato`.`loja`.`descricao` AS `Loja` from (`staccato`.`conta_a_receber_has_pagamento` `v` left join `staccato`.`loja` on((`staccato`.`loja`.`idLoja` = `v`.`centroCusto`))) where ((`v`.`status` <> 'cancelado') and (`v`.`status` <> 'cancelado') and (`v`.`desativado` = 0) and (`v`.`taxa` = 1) and (`v`.`dataEmissao` > '2016-12-31')) group by date_format(`v`.`dataEmissao`,'%Y/%m'),`staccato`.`loja`.`descricao`;

-- -----------------------------------------------------
-- View `staccato`.`viewVendaxCMV`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewVendaxCMV`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewVendaxCMV` AS select distinct `viewVendaxCMV`.`status` AS `status`,`viewVendaxCMV`.`idVendaProduto2` AS `idVendaProduto2`,`viewVendaxCMV`.`mes` AS `mes`,`viewVendaxCMV`.`loja` AS `loja`,`viewVendaxCMV`.`SumOfvenda` AS `SumOfvenda`,`viewVendaxCMV`.`CMV` AS `CMV`,`viewVendaxCMV`.`margem` AS `margem`,`viewVendaxCMV`.`FonteCMV` AS `FonteCMV`,`viewVendaxCMV`.`ICMS` AS `ICMS`,`viewVendaxCMV`.`FonteICMS` AS `FonteICMS`,`viewVendaxCMV`.`vendadev` AS `vendadev` from (select `vp2`.`status` AS `status`,`vp2`.`idVendaProduto2` AS `idVendaProduto2`,date_format(`v`.`data`,'%Y/%m') AS `mes`,`l`.`descricao` AS `loja`,(`vp2`.`total` + 0E0) AS `SumOfvenda`,if((-(`ehc`.`quant`) = `vp2`.`quant`),if((`pf2`.`quant` = `vp2`.`quant`),if(((`ehc`.`valor` - `pf2`.`preco`) between -(1) and 1),(`ehc`.`valor` + 0E0),(`pf2`.`preco` + 0E0)),(`ehc`.`valor` + 0E0)),if((`pf2`.`quant` = `vp2`.`quant`),(`pf2`.`preco` + 0E0),((`vp2`.`total` * 0.7) + 0E0))) AS `CMV`,if((`v`.`representacao` = 1),(`vp2`.`total` * (`f`.`comissaoLoja` / 100)),0) AS `margem`,if((`vp2`.`fornecedor` like '%staccato%'),'serviços',if((`v`.`representacao` = 1),'representacao',if((`vp2`.`status` = 'pendente'),'sem custo',if((-(`ehc`.`quant`) = `vp2`.`quant`),if((`pf2`.`quant` = `vp2`.`quant`),if(((`ehc`.`valor` - `pf2`.`preco`) between -(1) and 1),'ambos','pedido?'),'estoque'),if((`pf2`.`quant` = `vp2`.`quant`),'pedido','erro'))))) AS `FonteCMV`,if(((`e`.`tipoICMS` = 'icms60') or (`v`.`representacao` = 1)),0,if((if((`e`.`tipoICMS` = 'icms00'),`e`.`valorGare`,`e`.`vICMSST`) is null),(`pf2`.`preco` * 0.15),if((`e`.`tipoICMS` = 'icms00'),((`e`.`valorGare` / `e`.`quant`) * -(`ehc`.`quant`)),((`e`.`vICMSST` / `e`.`quant`) * -(`ehc`.`quant`))))) AS `ICMS`,if(((`e`.`tipoICMS` = 'icms60') or (`v`.`representacao` = 1)),'isento',if((if((`e`.`tipoICMS` = 'icms00'),`e`.`valorGare`,`e`.`vICMSST`) is null),'estimado',if((`e`.`valorGare` is null),'ST Fornecedor','ST Loja'))) AS `FonteICMS`,if((`v`.`devolucao` = 1),'devolução','venda') AS `vendadev` from ((((((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`loja` `l` on((`vp2`.`idLoja` = `l`.`idLoja`))) left join (select avg(`staccato`.`pedido_fornecedor_has_produto2`.`quant`) AS `quant`,avg(`staccato`.`pedido_fornecedor_has_produto2`.`preco`) AS `preco`,`staccato`.`pedido_fornecedor_has_produto2`.`idVendaProduto2` AS `idvendaproduto2` from `staccato`.`pedido_fornecedor_has_produto2` group by `staccato`.`pedido_fornecedor_has_produto2`.`idVendaProduto2`) `pf2` on((`vp2`.`idVendaProduto2` = `pf2`.`idvendaproduto2`))) left join `staccato`.`estoque_has_consumo` `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) left join `staccato`.`fornecedor` `f` on((`vp2`.`fornecedor` = `f`.`razaoSocial`))) left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) where ((`v`.`data` >= '2019-01-01') and (`vp2`.`status` not in ('CANCELADO','SUBSTITUIDO')))) `viewVendaxCMV`;

-- -----------------------------------------------------
-- View `staccato`.`view_a_pagar_vencer_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_a_pagar_vencer_base`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_a_pagar_vencer_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,sum(if(((`cr`.`status` = 'CONFERIDO') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `CONFERIDO`,sum(if(((`cr`.`status` = 'PENDENTE') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `PENDENTE`,sum(if(((`cr`.`status` in ('PENDENTE GARE','LIBERADO GARE','GERADO GARE')) and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `GARE`,sum(`cr`.`valor`) AS `Total` from `staccato`.`conta_a_pagar_has_pagamento` `cr` where ((`cr`.`desativado` = false) and (`cr`.`dataPagamento` >= curdate()) and (`cr`.`status` in ('PENDENTE','CONFERIDO','PENDENTE GARE','LIBERADO GARE','GERADO GARE'))) group by `cr`.`dataPagamento`;

-- -----------------------------------------------------
-- View `staccato`.`view_a_pagar_vencidos_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_a_pagar_vencidos_base`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_a_pagar_vencidos_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,sum(if(((`cr`.`status` = 'CONFERIDO') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `CONFERIDO`,sum(if(((`cr`.`status` = 'PENDENTE') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `PENDENTE`,sum(if(((`cr`.`status` in ('PENDENTE GARE','LIBERADO GARE','GERADO GARE')) and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `GARE`,sum(`cr`.`valor`) AS `Total` from `staccato`.`conta_a_pagar_has_pagamento` `cr` where ((`cr`.`desativado` = false) and (`cr`.`dataPagamento` < curdate()) and (`cr`.`status` in ('PENDENTE','CONFERIDO','PENDENTE GARE','LIBERADO GARE','GERADO GARE'))) group by `cr`.`dataPagamento`;

-- -----------------------------------------------------
-- View `staccato`.`view_a_receber_vencer_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_a_receber_vencer_base`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_a_receber_vencer_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,`cr`.`status` AS `Status`,sum(if((((`cr`.`tipo` like '%CARTÃO%') or (`cr`.`tipo` like '%REDE%') or (`cr`.`tipo` like '%GETNET%')) and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Cartão`,sum(if(((`cr`.`tipo` like '%CHEQUE%') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Cheque`,sum(if(((`cr`.`tipo` like '%BOLETO%') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Boleto`,sum(if(((not((`cr`.`tipo` like '%CARTÃO%'))) and (not((`cr`.`tipo` like '%REDE%'))) and (not((`cr`.`tipo` like '%GETNET%'))) and (not((`cr`.`tipo` like '%CHEQUE%'))) and (not((`cr`.`tipo` like '%BOLETO%'))) and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Outros`,sum(`cr`.`valor`) AS `Total` from `staccato`.`conta_a_receber_has_pagamento` `cr` where (`cr`.`desativado` = false) group by `cr`.`dataPagamento`,`cr`.`representacao`,`cr`.`status` having ((`cr`.`dataPagamento` >= curdate()) and (`cr`.`representacao` = 0) and ((`cr`.`status` = 'PENDENTE') or (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `staccato`.`view_a_receber_vencidos_base`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_a_receber_vencidos_base`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_a_receber_vencidos_base` AS select `cr`.`dataPagamento` AS `Data Pagamento`,`cr`.`status` AS `Status`,sum(if((((`cr`.`tipo` like '%CARTÃO%') or (`cr`.`tipo` like '%REDE%') or (`cr`.`tipo` like '%GETNET%')) and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Cartão`,sum(if(((`cr`.`tipo` like '%CHEQUE%') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Cheque`,sum(if(((`cr`.`tipo` like '%BOLETO%') and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Boleto`,sum(if(((not((`cr`.`tipo` like '%CARTÃO%'))) and (not((`cr`.`tipo` like '%REDE%'))) and (not((`cr`.`tipo` like '%GETNET%'))) and (not((`cr`.`tipo` like '%CHEQUE%'))) and (not((`cr`.`tipo` like '%BOLETO%'))) and (`cr`.`desativado` = false)),`cr`.`valor`,0)) AS `Outros`,sum(`cr`.`valor`) AS `Total` from `staccato`.`conta_a_receber_has_pagamento` `cr` where (`cr`.`desativado` = false) group by `cr`.`dataPagamento`,`cr`.`representacao`,`cr`.`status` having ((`cr`.`dataPagamento` < curdate()) and (`cr`.`representacao` = 0) and ((`cr`.`status` = 'PENDENTE') or (`cr`.`status` = 'CONFERIDO')));

-- -----------------------------------------------------
-- View `staccato`.`view_agendar_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_agendar_coleta`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_agendar_coleta` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,group_concat(distinct `pf2`.`dataRealFat` separator ', ') AS `dataRealFat`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,group_concat(distinct `pf2`.`fornecedor` separator ',') AS `fornecedor`,`p`.`quantCaixa` AS `quantCaixa`,`p`.`formComercial` AS `formComercial`,`p`.`idProduto` AS `idProduto`,`n`.`idNFe` AS `idNFe`,`n`.`numeroNFe` AS `numeroNFe`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `idVenda`,`pf2`.`idCompra` AS `idCompra`,group_concat(distinct `pf2`.`ordemCompra` separator ', ') AS `ordemCompra`,`e`.`descricao` AS `produto`,`e`.`codComercial` AS `codComercial`,abs(`e`.`quant`) AS `quant`,`e`.`un` AS `un`,`e`.`caixas` AS `caixas`,group_concat(distinct `pf2`.`kgcx` separator ', ') AS `kgcx`,`n`.`transportadora` AS `Transportadora`,(`e`.`caixas` * max(`pf2`.`kgcx`)) AS `Peso` from (((((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`venda` `v` on((`v`.`idVenda` = `pf2`.`idVenda`))) left join `staccato`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) where ((`e`.`status` = 'EM COLETA') and (`pf2`.`dataPrevColeta` is null) and (`pf2`.`idPedido2` is not null)) group by `e`.`idEstoque` order by `prazoEntrega`,`e`.`idEstoque`;

-- -----------------------------------------------------
-- View `staccato`.`view_agendar_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_agendar_entrega`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_agendar_entrega` AS select `vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`idProduto` AS `idProduto`,`vp2`.`dataPrevEnt` AS `dataPrevEnt`,`vp2`.`dataRealEnt` AS `dataRealEnt`,`vp2`.`status` AS `status`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`idVenda` AS `idVenda`,`n`.`numeroNFe` AS `idNFeSaida`,`n2`.`numeroNFe` AS `idNFeFutura`,`vp2`.`produto` AS `produto`,group_concat(distinct `e`.`idEstoque` separator ', ') AS `idEstoque`,group_concat(distinct `e`.`lote` separator ', ') AS `lote`,group_concat(distinct `e`.`local` separator ', ') AS `local`,group_concat(distinct `e`.`bloco` separator ', ') AS `bloco`,`vp2`.`caixas` AS `caixas`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`vp2`.`quantCaixa` AS `quantCaixa`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial`,group_concat(`ehc`.`idConsumo` separator ', ') AS `idConsumo` from ((((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`estoque_has_consumo` `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`nfe` `n` on((`vp2`.`idNFeSaida` = `n`.`idNFe`))) left join `staccato`.`nfe` `n2` on((`vp2`.`idNFeFutura` = `n2`.`idNFe`))) group by `vp2`.`idVendaProduto2`;

-- -----------------------------------------------------
-- View `staccato`.`view_busca_veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_busca_veiculo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_busca_veiculo` AS select `t`.`razaoSocial` AS `razaoSocial`,`thv`.`idVeiculo` AS `idVeiculo`,`thv`.`modelo` AS `modelo`,`thv`.`capacidade` AS `capacidade`,`thv`.`placa` AS `placa`,`thv`.`desativado` AS `desativado` from (`staccato`.`transportadora` `t` left join `staccato`.`transportadora_has_veiculo` `thv` on((`t`.`idTransportadora` = `thv`.`idTransportadora`)));

-- -----------------------------------------------------
-- View `staccato`.`view_calendario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_calendario`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_calendario` AS select concat(`lhe`.`logradouro`,', ',`lhe`.`numero`,', ',`lhe`.`cidade`,', ',`lhe`.`uf`) AS `origem`,concat(`che`.`logradouro`,', ',`che`.`numero`,', ',`che`.`cidade`,', ',`che`.`uf`) AS `destino`,`vp`.`idVenda` AS `idVenda`,`vp`.`idEvento` AS `carga`,sum(`vp`.`caixas`) AS `caixas`,sum(`vp`.`kg`) AS `kg`,`vp`.`data` AS `data`,`t`.`razaoSocial` AS `razaoSocial`,`thv`.`modelo` AS `modelo`,`vp`.`status` AS `status`,`che`.`logradouro` AS `logradouro`,`che`.`numero` AS `numero`,`che`.`bairro` AS `bairro`,`che`.`cidade` AS `cidade`,`che`.`uf` AS `uf`,group_concat(concat(left(`vp`.`produto`,25),' - ',`vp`.`caixas`,' cx.') separator '/') AS `produtos` from (((((`staccato`.`veiculo_has_produto` `vp` left join `staccato`.`transportadora_has_veiculo` `thv` on((`vp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `staccato`.`transportadora` `t` on((`t`.`idTransportadora` = `thv`.`idTransportadora`))) left join `staccato`.`venda` `v` on((`v`.`idVenda` = `vp`.`idVenda`))) left join `staccato`.`cliente_has_endereco` `che` on((`che`.`idEndereco` = `v`.`idEnderecoEntrega`))) left join (select `staccato`.`loja_has_endereco`.`idEndereco` AS `idEndereco`,`staccato`.`loja_has_endereco`.`idLoja` AS `idLoja`,`staccato`.`loja_has_endereco`.`descricao` AS `descricao`,`staccato`.`loja_has_endereco`.`cep` AS `cep`,`staccato`.`loja_has_endereco`.`logradouro` AS `logradouro`,`staccato`.`loja_has_endereco`.`numero` AS `numero`,`staccato`.`loja_has_endereco`.`complemento` AS `complemento`,`staccato`.`loja_has_endereco`.`bairro` AS `bairro`,`staccato`.`loja_has_endereco`.`cidade` AS `cidade`,`staccato`.`loja_has_endereco`.`uf` AS `uf`,`staccato`.`loja_has_endereco`.`codUF` AS `codUF`,`staccato`.`loja_has_endereco`.`desativado` AS `desativado`,`staccato`.`loja_has_endereco`.`created` AS `created`,`staccato`.`loja_has_endereco`.`lastUpdated` AS `lastUpdated` from `staccato`.`loja_has_endereco` where ((`staccato`.`loja_has_endereco`.`idLoja` = 6) and (`staccato`.`loja_has_endereco`.`desativado` = false)) limit 1) `lhe` on((`lhe`.`idLoja` = 6))) where (`vp`.`status` <> 'ESTOQUE') group by `vp`.`idVeiculo`,`vp`.`data`,`vp`.`idVenda`,`vp`.`status`,`vp`.`idEvento` order by `vp`.`data`,`vp`.`idVenda`,`t`.`razaoSocial`,`thv`.`modelo`;

-- -----------------------------------------------------
-- View `staccato`.`view_calendario2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_calendario2`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_calendario2` AS select `x`.`razaoSocial` AS `razaoSocial`,group_concat(distinct `x`.`status` separator ',') AS `status`,sum(`x`.`caixas`) AS `caixas`,sum(`x`.`kg`) AS `kg`,`x`.`idVeiculo` AS `idVeiculo`,`x`.`modelo` AS `modelo`,`x`.`data` AS `data`,group_concat(distinct `x`.`idVenda` separator '|') AS `idVenda`,group_concat(distinct `x`.`endereco` separator '|') AS `endereco` from (select `t`.`razaoSocial` AS `razaoSocial`,group_concat(distinct `vhp`.`status` separator ',') AS `status`,sum(`vhp`.`caixas`) AS `caixas`,sum(`vhp`.`kg`) AS `kg`,group_concat(distinct `vhp`.`idEvento` separator ',') AS `idEvento`,`vhp`.`idVenda` AS `idVenda`,`thv`.`modelo` AS `modelo`,`vhp`.`idVeiculo` AS `idVeiculo`,`vhp`.`data` AS `data`,replace(concat(`che`.`logradouro`,',',`che`.`numero`,',',`che`.`cidade`,',',`che`.`uf`),' ','+') AS `endereco` from ((((`staccato`.`veiculo_has_produto` `vhp` left join `staccato`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `staccato`.`transportadora` `t` on((`thv`.`idTransportadora` = `t`.`idTransportadora`))) left join `staccato`.`venda` `v` on((`vhp`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`cliente_has_endereco` `che` on((`che`.`idEndereco` = `v`.`idEnderecoEntrega`))) where ((`vhp`.`idVeiculo` <> 11) and (`che`.`idEndereco` <> 1)) group by `vhp`.`idVenda`,`vhp`.`data`,`vhp`.`idVeiculo`) `x` group by `x`.`idVeiculo`,`x`.`data` order by `x`.`data`,`x`.`idVeiculo`;

-- -----------------------------------------------------
-- View `staccato`.`view_calendario_carga`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_calendario_carga`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_calendario_carga` AS select `vhp`.`idVeiculo` AS `idVeiculo`,`vhp`.`idEvento` AS `idEvento`,`vhp`.`data` AS `dataPrevEnt`,`thv`.`modelo` AS `modelo`,`vp2`.`idNFeSaida` AS `idNFeSaida`,`vp2`.`idNFeFutura` AS `idNFeFutura`,`n`.`status` AS `NFe Status`,`n`.`numeroNFe` AS `numeroNFe`,any_value((select `staccato`.`nfe`.`numeroNFe` from `staccato`.`nfe` where (`staccato`.`nfe`.`idNFe` = `vp2`.`idNFeFutura`))) AS `NFe Futura`,`vhp`.`idVenda` AS `idVenda`,`vhp`.`status` AS `status`,count(0) AS `produtos`,sum(`vhp`.`kg`) AS `kg`,concat(`chp`.`logradouro`,', ',`chp`.`numero`,' - ',`chp`.`bairro`) AS `endereco`,`vhp`.`observacao` AS `observacao` from (((((`staccato`.`veiculo_has_produto` `vhp` left join `staccato`.`venda_has_produto2` `vp2` on((`vhp`.`idVendaProduto2` = `vp2`.`idVendaProduto2`))) left join `staccato`.`nfe` `n` on((`vp2`.`idNFeSaida` = `n`.`idNFe`))) left join `staccato`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `staccato`.`venda` `v` on((`vhp`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`cliente_has_endereco` `chp` on((`v`.`idEnderecoEntrega` = `chp`.`idEndereco`))) where (`vhp`.`status` in ('ENTREGA AGEND.','EM ENTREGA')) group by `vhp`.`idVeiculo`,`vhp`.`data`,`n`.`idNFe`,`vhp`.`idVenda`,`vhp`.`idEvento`,`vhp`.`status`,`n`.`numeroNFe`;

-- -----------------------------------------------------
-- View `staccato`.`view_calendario_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_calendario_entrega`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_calendario_entrega` AS select `vhp`.`idVeiculo` AS `idVeiculo`,cast(`vhp`.`data` as date) AS `data`,`thv`.`modelo` AS `modelo`,sum(`vhp`.`kg`) AS `kg`,`t`.`razaoSocial` AS `razaoSocial`,group_concat(distinct `vhp`.`idVenda` separator ', ') AS `idVenda` from ((`staccato`.`veiculo_has_produto` `vhp` left join `staccato`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `staccato`.`transportadora` `t` on((`t`.`idTransportadora` = `thv`.`idTransportadora`))) where (`vhp`.`status` in ('ENTREGA AGEND.','EM ENTREGA')) group by cast(`vhp`.`data` as date),`vhp`.`idVeiculo` order by cast(`vhp`.`data` as date);

-- -----------------------------------------------------
-- View `staccato`.`view_calendario_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_calendario_produto`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_calendario_produto` AS select `vhp`.`idEvento` AS `idEvento`,`vhp`.`idVenda` AS `idVenda`,`vhp`.`idVendaProduto2` AS `idVendaProduto2`,`vhp`.`fornecedor` AS `fornecedor`,`vhp`.`produto` AS `produto`,`vhp`.`formComercial` AS `formComercial`,`vhp`.`codComercial` AS `codComercial`,`vhp`.`caixas` AS `caixas`,`vhp`.`quant` AS `quant`,`vhp`.`un` AS `un`,`vhp`.`kg` AS `kg`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,`x`.`isEstoque` AS `isEstoque` from (((`staccato`.`veiculo_has_produto` `vhp` left join `staccato`.`estoque_has_consumo` `ehc` on((`vhp`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join (select `ehc`.`idEstoque` AS `idEstoque`,if(((any_value(`pf1`.`idPedido1`) is not null) and (any_value(`pf1`.`idVenda`) is null)),'✓','') AS `isEstoque` from ((`staccato`.`estoque_has_compra` `ehc` left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) left join `staccato`.`pedido_fornecedor_has_produto` `pf1` on((`pf2`.`idPedidoFK` = `pf1`.`idPedido1`))) where (`ehc`.`idEstoque` >= 24948) group by `ehc`.`idEstoque`) `x` on((`e`.`idEstoque` = `x`.`idEstoque`))) where (`vhp`.`status` not in ('CANCELADO','QUEBRADO')) order by `vhp`.`id`;

-- -----------------------------------------------------
-- View `staccato`.`view_caminhao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_caminhao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_caminhao` AS select group_concat(distinct `vhp`.`idVeiculo` separator ',') AS `idVeiculo`,`t`.`razaoSocial` AS `Transportadora`,`thv`.`modelo` AS `Veículo`,`thv`.`placa` AS `Placa`,`thv`.`desativado` AS `desativado` from ((`staccato`.`veiculo_has_produto` `vhp` left join `staccato`.`transportadora_has_veiculo` `thv` on((`vhp`.`idVeiculo` = `thv`.`idVeiculo`))) left join `staccato`.`transportadora` `t` on((`thv`.`idTransportadora` = `t`.`idTransportadora`))) group by `vhp`.`idVeiculo`;

-- -----------------------------------------------------
-- View `staccato`.`view_caminhao_resumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_caminhao_resumo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_caminhao_resumo` AS select `vhp`.`idVeiculo` AS `idVeiculo`,`vhp`.`data` AS `data`,coalesce(sum(`vhp`.`kg`),0) AS `Kg` from `staccato`.`veiculo_has_produto` `vhp` group by `vhp`.`idVeiculo`,`vhp`.`data`;

-- -----------------------------------------------------
-- View `staccato`.`view_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_coleta`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_coleta` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,group_concat(distinct `pf2`.`dataPrevColeta` separator ',') AS `dataPrevColeta`,`e`.`idEstoque` AS `idEstoque`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,group_concat(distinct `pf2`.`fornecedor` separator ',') AS `fornecedor`,`n`.`idNFe` AS `idNFe`,group_concat(distinct `n`.`numeroNFe` separator ',') AS `numeroNFe`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `idVenda`,`pf2`.`idCompra` AS `idCompra`,group_concat(distinct `pf2`.`ordemCompra` separator ', ') AS `ordemCompra`,`e`.`descricao` AS `produto`,`e`.`codComercial` AS `codComercial`,abs(`e`.`quant`) AS `quant`,`e`.`un` AS `un`,`e`.`caixas` AS `caixas`,group_concat(distinct `pf2`.`kgcx` separator ',') AS `kgcx`,group_concat(distinct `n`.`transportadora` separator ',') AS `Transportadora` from ((((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`venda` `v` on((`v`.`idVenda` = `pf2`.`idVenda`))) where ((`e`.`status` = 'EM COLETA') and (`pf2`.`dataPrevColeta` is not null) and (`pf2`.`idPedido2` is not null)) group by `e`.`idEstoque` order by `prazoEntrega`,`e`.`idEstoque`;

-- -----------------------------------------------------
-- View `staccato`.`view_compras`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_compras`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_compras` AS select any_value(`pf2`.`ordemCompra`) AS `OC`,`pf2`.`idCompra` AS `Compra`,any_value(`pf2`.`fornecedor`) AS `Fornecedor`,min(`v`.`data`) AS `Data Venda`,count(`pf2`.`idProduto`) AS `Produtos`,sum(`pf2`.`preco`) AS `Total`,any_value(`pf2`.`dataPrevConf`) AS `dataPrevConf`,group_concat(distinct substring_index(`u`.`nome`,' ',1) separator ', ') AS `Vendedor`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `Venda`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntrega`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntrega`,`pff`.`dataFollowup` AS `Data Followup`,`pff`.`observacao` AS `Observação` from (((`staccato`.`pedido_fornecedor_has_produto2` `pf2` left join `staccato`.`pedido_fornecedor_has_followup` `pff` on(((`pf2`.`ordemCompra` = `pff`.`ordemCompra`) and (`pff`.`idFollowup` = (select max(`staccato`.`pedido_fornecedor_has_followup`.`idFollowup`) from `staccato`.`pedido_fornecedor_has_followup` where (`staccato`.`pedido_fornecedor_has_followup`.`ordemCompra` = `pf2`.`ordemCompra`)))))) left join `staccato`.`venda` `v` on((`pf2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) where (`pf2`.`status` = 'EM COMPRA') group by `pf2`.`ordemCompra`,`pff`.`idFollowup`;

-- -----------------------------------------------------
-- View `staccato`.`view_compras_financeiro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_compras_financeiro`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_compras_financeiro` AS select group_concat(distinct `pf`.`status` separator ', ') AS `Status`,group_concat(distinct `pf`.`statusFinanceiro` separator ', ') AS `Status Financeiro`,group_concat(distinct `pf`.`ordemCompra` separator ', ') AS `OC`,group_concat(distinct `pf`.`idCompra` separator ', ') AS `Compra`,group_concat(distinct `pf`.`fornecedor` separator ', ') AS `Fornecedor`,count(if((`pf`.`status` <> 'CANCELADO'),1,NULL)) AS `Produtos`,sum(if((`pf`.`status` <> 'CANCELADO'),`pf`.`preco`,0)) AS `Total`,group_concat(distinct `pf`.`idVenda` separator ', ') AS `Código` from `staccato`.`pedido_fornecedor_has_produto` `pf` where (`pf`.`ordemCompra` is not null) group by `pf`.`ordemCompra`;

-- -----------------------------------------------------
-- View `staccato`.`view_compras_gerar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_compras_gerar`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_compras_gerar` AS select `php`.`idPedido1` AS `idPedido1`,`php`.`status` AS `status`,`php`.`idRelacionado` AS `idRelacionado`,`php`.`selecionado` AS `selecionado`,`php`.`aliquotaSt` AS `aliquotaSt`,`php`.`st` AS `st`,`php`.`statusFinanceiro` AS `statusFinanceiro`,`php`.`ordemCompra` AS `ordemCompra`,`php`.`ordemRepresentacao` AS `ordemRepresentacao`,`php`.`codFornecedor` AS `codFornecedor`,`php`.`idVenda` AS `idVenda`,`php`.`idVendaProduto1` AS `idVendaProduto1`,`php`.`idVendaProduto2` AS `idVendaProduto2`,`php`.`idCompra` AS `idCompra`,`php`.`fornecedor` AS `fornecedor`,`php`.`idProduto` AS `idProduto`,`php`.`descricao` AS `descricao`,`php`.`obs` AS `obs`,`php`.`colecao` AS `colecao`,`php`.`codComercial` AS `codComercial`,`php`.`quant` AS `quant`,`php`.`quantUpd` AS `quantUpd`,`php`.`un` AS `un`,`php`.`un2` AS `un2`,`php`.`caixas` AS `caixas`,`php`.`prcUnitario` AS `prcUnitario`,`php`.`preco` AS `preco`,`php`.`kgcx` AS `kgcx`,`php`.`formComercial` AS `formComercial`,`php`.`codBarras` AS `codBarras`,`php`.`dataPrevCompra` AS `dataPrevCompra`,`php`.`dataRealCompra` AS `dataRealCompra`,`php`.`dataPrevConf` AS `dataPrevConf`,`php`.`dataRealConf` AS `dataRealConf`,`php`.`dataPrevFat` AS `dataPrevFat`,`php`.`dataRealFat` AS `dataRealFat`,`php`.`dataPrevColeta` AS `dataPrevColeta`,`php`.`dataRealColeta` AS `dataRealColeta`,`php`.`dataPrevReceb` AS `dataPrevReceb`,`php`.`dataRealReceb` AS `dataRealReceb`,`php`.`dataPrevEnt` AS `dataPrevEnt`,`php`.`dataRealEnt` AS `dataRealEnt`,`php`.`created` AS `created`,`php`.`lastUpdated` AS `lastUpdated`,`vhf`.`dataFollowup` AS `dataFollowup`,`vhf`.`observacao` AS `observacao` from (`staccato`.`pedido_fornecedor_has_produto` `php` left join `staccato`.`venda_has_followup` `vhf` on((`vhf`.`idFollowup` = (select max(`vhf`.`idFollowup`) from `staccato`.`venda_has_followup` `vhf` where (`vhf`.`idVenda` = `php`.`idVenda`))))) where (`php`.`status` = 'PENDENTE');

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_compra`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_compra` AS select `pf`.`idCompra` AS `idCompra`,`pf`.`codComercial` AS `codComercial`,`pf`.`descricao` AS `descricao`,`pf`.`prcUnitario` AS `prcUnitario`,`pf`.`preco` AS `preco`,(`pf`.`prcUnitario` * `pf`.`quant`) AS `prcUnitario * quant`,`pf`.`created` AS `created` from `staccato`.`pedido_fornecedor_has_produto` `pf` where (((`pf`.`prcUnitario` * `pf`.`quant`) / `pf`.`preco`) > 1.01);

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vinculos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vinculos`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vinculos` AS select `vp2`.`idVenda` AS `idVenda`,`vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`status` AS `status`,`vp2`.`quant` AS `quantVenda`,`pf2`.`quant` AS `quantCompra`,`ehc`.`quant` AS `quantConsumo`,`v`.`created` AS `created` from (((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`vp2`.`idVendaProduto2` = `pf2`.`idVendaProduto2`))) left join `staccato`.`estoque_has_consumo` `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) where ((`v`.`representacao` = false) and (`vp2`.`status` not in ('PENDENTE','REPO. ENTREGA','CANCELADO','EM COMPRA','EM FATURAMENTO')) and ((not((`vp2`.`quant` <=> `pf2`.`quant`))) or (not((abs(`vp2`.`quant`) <=> abs(`ehc`.`quant`))))));

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vp1_v_total`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vp1_v_total`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vp1_v_total` AS select `vp`.`idVenda` AS `idVenda`,`v`.`subTotalBru` AS `brutoVenda`,sum(`vp`.`parcial`) AS `brutoProd`,`v`.`subTotalLiq` AS `liqVenda`,sum(`vp`.`parcialDesc`) AS `liqProd`,(`v`.`total` - `v`.`frete`) AS `totalVenda`,sum(`vp`.`total`) AS `totalProdutos`,`v`.`created` AS `created` from (`staccato`.`venda_has_produto` `vp` left join `staccato`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) group by `vp`.`idVenda` having ((abs((`brutoVenda` - `brutoProd`)) > 1) or (abs((`liqVenda` - `liqProd`)) > 1) or (abs((`totalVenda` - `totalProdutos`)) > 1));

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vp1_vp2_quant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vp1_vp2_quant`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vp1_vp2_quant` AS select `vp`.`idVenda` AS `idVenda`,`vp`.`codComercial` AS `codComercial`,`vp`.`quant` AS `vp1_quant`,sum(`vp2`.`quant`) AS `vp2_quant`,`vp`.`created` AS `created` from (`staccato`.`venda_has_produto` `vp` left join `staccato`.`venda_has_produto2` `vp2` on((`vp`.`idVendaProduto1` = `vp2`.`idVendaProdutoFK`))) where ((`vp2`.`reposicaoReceb` = false) and (`vp2`.`reposicaoEntrega` = false)) group by `vp`.`idVendaProduto1` having (`vp`.`quant` <> sum(`vp2`.`quant`));

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vp1_vp2_total`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vp1_vp2_total`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vp1_vp2_total` AS select `vp`.`idVenda` AS `idVenda`,`vp`.`codComercial` AS `codComercial`,`vp`.`total` AS `vp1_total`,sum(`vp2`.`total`) AS `vp2_total`,`vp`.`created` AS `created` from (`staccato`.`venda_has_produto` `vp` left join `staccato`.`venda_has_produto2` `vp2` on((`vp`.`idVendaProduto1` = `vp2`.`idVendaProdutoFK`))) where (`vp2`.`reposicaoEntrega` = false) group by `vp`.`idVendaProduto1` having (abs((`vp`.`total` - sum(`vp2`.`total`))) > 1);

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vp2_ehc_quant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vp2_ehc_quant`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vp2_ehc_quant` AS select `vp2`.`idVenda` AS `idVenda`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`status` AS `status`,`vp2`.`quant` AS `quantVenda`,`ehc`.`quant` AS `quantConsumo`,`v`.`created` AS `created` from ((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`estoque_has_consumo` `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) where (abs(`vp2`.`quant`) <> abs(`ehc`.`quant`));

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vp2_pf2_quant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vp2_pf2_quant`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vp2_pf2_quant` AS select `vp2`.`idVenda` AS `idVenda`,`pf2`.`idCompra` AS `idCompra`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`status` AS `status`,`vp2`.`quant` AS `quantVenda`,`pf2`.`quant` AS `quantCompra`,`v`.`created` AS `created` from ((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`vp2`.`idVendaProduto2` = `pf2`.`idVendaProduto2`))) where (`vp2`.`quant` <> `pf2`.`quant`);

-- -----------------------------------------------------
-- View `staccato`.`view_consistencia_vp_op_quant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_consistencia_vp_op_quant`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_consistencia_vp_op_quant` AS select `vp`.`idVenda` AS `idVenda`,`v`.`idOrcamento` AS `idOrcamento`,`vp`.`codComercial` AS `codComercial`,sum(`vp`.`quant`) AS `quantVenda`,sum(`op`.`quant`) AS `quantOrc`,`v`.`created` AS `created` from ((`staccato`.`venda_has_produto` `vp` left join `staccato`.`venda` `v` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`orcamento_has_produto` `op` on(((`v`.`idOrcamento` = `op`.`idOrcamento`) and (`vp`.`codComercial` = `op`.`codComercial`)))) where ((`v`.`devolucao` = false) and (`v`.`status` <> 'CANCELADO')) group by `vp`.`idVenda`,`vp`.`codComercial` having (`quantVenda` <> `quantOrc`);

-- -----------------------------------------------------
-- View `staccato`.`view_conta_pagar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_conta_pagar`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_conta_pagar` AS select `cp`.`idPagamento` AS `idPagamento`,`cp`.`idLoja` AS `idLoja`,`cp`.`contraParte` AS `contraparte`,`cp`.`dataPagamento` AS `dataPagamento`,`cp`.`dataEmissao` AS `dataEmissao`,`cp`.`valor` AS `valor`,`cp`.`status` AS `status`,group_concat(distinct `pf2`.`ordemCompra` separator ',') AS `ordemCompra`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `idVenda`,group_concat(distinct `n`.`numeroNFe` separator ', ') AS `numeroNFe`,`cp`.`tipo` AS `tipo`,`cp`.`parcela` AS `parcela`,`cp`.`observacao` AS `observacao`,group_concat(distinct `pf2`.`statusFinanceiro` separator ',') AS `statusFinanceiro` from ((((`staccato`.`conta_a_pagar_has_pagamento` `cp` left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`cp`.`idCompra` = `pf2`.`idCompra`))) left join `staccato`.`estoque_has_compra` `ehc` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`nfe` `n` on((`n`.`idNFe` = `e`.`idNFe`))) where (`cp`.`desativado` = false) group by `cp`.`idPagamento` order by `cp`.`dataPagamento`;

-- -----------------------------------------------------
-- View `staccato`.`view_conta_receber`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_conta_receber`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_conta_receber` AS select `cr`.`idPagamento` AS `idPagamento`,`cr`.`idLoja` AS `idLoja`,`cr`.`representacao` AS `representacao`,`cr`.`contraParte` AS `contraparte`,`cr`.`dataPagamento` AS `dataPagamento`,`cr`.`dataEmissao` AS `dataEmissao`,`cr`.`idVenda` AS `idVenda`,`cr`.`valor` AS `valor`,`cr`.`tipo` AS `tipo`,`cr`.`parcela` AS `parcela`,`cr`.`observacao` AS `observacao`,`cr`.`status` AS `status`,`v`.`statusFinanceiro` AS `statusFinanceiro` from (`staccato`.`conta_a_receber_has_pagamento` `cr` left join `staccato`.`venda` `v` on((`cr`.`idVenda` = `v`.`idVenda`))) where ((`cr`.`desativado` = false) and (`cr`.`representacao` = 0)) group by `cr`.`idPagamento` order by `cr`.`dataPagamento`,`cr`.`idVenda`,`cr`.`tipo`,`cr`.`parcela` desc;

-- -----------------------------------------------------
-- View `staccato`.`view_custo_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_custo_estoque`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_custo_estoque` AS select `ehc`.`idVendaProduto2` AS `idVendaProduto2`,`pf2`.`ordemCompra` AS `ordemCompra`,`pf2`.`idVenda` AS `idVenda`,`ehc`.`descricao` AS `descricao`,`ehc`.`valor` AS `R$ Consumo`,`pf2`.`preco` AS `R$ Compra`,`ehc`.`quant` AS `quant est`,`pf2`.`quant` AS `quant compra`,(`ehc`.`valor` / `pf2`.`preco`) AS `diferenca` from (`staccato`.`estoque_has_consumo` `ehc` left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idVendaProduto2` = `pf2`.`idVendaProduto2`))) where ((`pf2`.`idVendaProduto2` is not null) and ((`ehc`.`valor` / `pf2`.`preco`) > 1.01));

-- -----------------------------------------------------
-- View `staccato`.`view_devolucao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_devolucao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_devolucao` AS select `v`.`data` AS `data`,`vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`status` AS `status`,`vp2`.`statusOriginal` AS `statusOriginal`,`vp3`.`idNFeSaida` AS `idNFeSaida`,`vp2`.`idNFeEntrada` AS `idNFeEntrada`,`vp3`.`idNFeFutura` AS `idNFeFutura`,`vp2`.`idVenda` AS `idVenda`,`vp2`.`idProduto` AS `idProduto`,`vp2`.`produto` AS `produto`,`vp2`.`obs` AS `obs`,abs(`vp2`.`caixas`) AS `caixas`,abs(`vp2`.`quant`) AS `quant`,`vp2`.`un` AS `un`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial` from ((`staccato`.`venda` `v` left join `staccato`.`venda_has_produto2` `vp2` on((`v`.`idVenda` = `vp2`.`idVenda`))) left join `staccato`.`venda_has_produto2` `vp3` on((`vp2`.`idRelacionado` = `vp3`.`idVendaProduto2`))) where (`v`.`devolucao` = true);

-- -----------------------------------------------------
-- View `staccato`.`view_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_entrega`;
USE `staccato`;
CREATE 
     OR REPLACE ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `staccato`.`view_entrega` AS
    SELECT 
        CAST(MIN((`v`.`data` + INTERVAL `v`.`prazoEntrega` DAY))
            AS DATE) AS `prazoEntrega`,
        `vp2`.`idVenda` AS `idVenda`,
        GROUP_CONCAT(DISTINCT `vp2`.`recebeu`
            SEPARATOR ',') AS `Recebeu`,
        GROUP_CONCAT(DISTINCT `vp2`.`entregou`
            SEPARATOR ',') AS `Entregou`,
        SUM((`vp2`.`status` = 'ESTOQUE')) AS `Estoque`,
        SUM((`vp2`.`status` = 'ENTREGUE')) AS `Entregue`,
        SUM(((`vp2`.`status` <> 'ESTOQUE')
            AND (`vp2`.`status` <> 'ENTREGUE'))) AS `Outros`,
        `che`.`bairro` AS `Bairro`,
        `che`.`logradouro` AS `Logradouro`,
        `che`.`numero` AS `Número`,
        `che`.`cidade` AS `Cidade`
    FROM
        ((`staccato`.`venda_has_produto2` `vp2`
        LEFT JOIN `staccato`.`venda` `v` ON ((`vp2`.`idVenda` = `v`.`idVenda`)))
        LEFT JOIN `staccato`.`cliente_has_endereco` `che` ON ((`v`.`idEnderecoEntrega` = `che`.`idEndereco`)))
    WHERE
        (NOT ((`vp2`.`idVenda` LIKE '%D')))
    GROUP BY `vp2`.`idVenda`;

-- -----------------------------------------------------
-- View `staccato`.`view_entrega_pendente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_entrega_pendente`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_entrega_pendente` AS select `v`.`data` AS `data`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntrega`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntrega`,cast(min(`vp2`.`dataRealReceb`) as date) AS `dataRealReceb`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`vp2`.`idVenda` AS `idVenda`,sum((`vp2`.`status` = 'ESTOQUE')) AS `Estoque`,sum((`vp2`.`status` in ('ENTREGUE','EM ENTREGA','ENTREGA AGEND.'))) AS `Agend/Entregue`,sum((`vp2`.`status` not in ('ESTOQUE','ENTREGUE','EM ENTREGA','ENTREGA AGEND.','DEVOLVIDO','QUEBRADO'))) AS `Outros`,`che`.`bairro` AS `Bairro`,`che`.`logradouro` AS `Logradouro`,`che`.`numero` AS `Número`,`che`.`cidade` AS `Cidade` from ((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`cliente_has_endereco` `che` on((`v`.`idEnderecoEntrega` = `che`.`idEndereco`))) where ((not((`vp2`.`idVenda` like '%D'))) and (`v`.`status` not in ('ENTREGUE','CANCELADO','DEVOLVIDO')) and (`v`.`representacao` = false) and (`v`.`devolucao` = false)) group by `vp2`.`idVenda`;

-- -----------------------------------------------------
-- View `staccato`.`view_entrega_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_entrega_produtos`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_entrega_produtos` AS select `vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`idProduto` AS `idProduto`,`vp2`.`dataPrevEnt` AS `dataPrevEnt`,`vp2`.`dataRealEnt` AS `dataRealEnt`,`vp2`.`status` AS `status`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`idVenda` AS `idVenda`,`vp2`.`produto` AS `produto`,`vp2`.`caixas` AS `caixas`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`vp2`.`quantCaixa` AS `quantCaixa`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial`,group_concat(distinct `ehc`.`idConsumo` separator ',') AS `idConsumo` from (`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`estoque_has_consumo` `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) group by `vp2`.`idVendaProduto2`;

-- -----------------------------------------------------
-- View `staccato`.`view_estoque_consumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_estoque_consumo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_estoque_consumo` AS select `vp2`.`idVenda` AS `Venda`,`ehc`.`idEstoque` AS `idEstoque`,`vp2`.`status` AS `statusProduto`,`ehc`.`status` AS `status`,`ehc`.`bloco` AS `bloco`,`ehc`.`fornecedor` AS `fornecedor`,`ehc`.`descricao` AS `descricao`,`ehc`.`quant` AS `quant`,`ehc`.`quantUpd` AS `quantUpd`,`ehc`.`un` AS `un`,`ehc`.`caixas` AS `caixas`,`ehc`.`codComercial` AS `codComercial`,`vp2`.`dataRealEnt` AS `dataRealEnt`,`ehc`.`created` AS `created` from (`staccato`.`estoque_has_consumo` `ehc` left join `staccato`.`venda_has_produto2` `vp2` on((`ehc`.`idVendaProduto2` = `vp2`.`idVendaProduto2`)));

-- -----------------------------------------------------
-- View `staccato`.`view_estoque_contabil`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_estoque_contabil`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_estoque_contabil` AS select `n`.`cnpjDest` AS `cnpjDest`,`e`.`status` AS `status`,`e`.`idEstoque` AS `idEstoque`,`p`.`fornecedor` AS `fornecedor`,`e`.`descricao` AS `descricao`,(((`e`.`quant` + `e`.`ajuste`) + coalesce(`e2`.`consumoEst`,0)) / `p`.`quantCaixa`) AS `caixasContabil`,((`e`.`quant` + `e`.`ajuste`) + coalesce(`e2`.`consumoEst`,0)) AS `contabil`,(`e`.`restante` / `p`.`quantCaixa`) AS `caixas`,`e`.`restante` AS `restante`,`e`.`un` AS `unEst`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`idBloco` AS `idBloco`,`e`.`codComercial` AS `codComercial`,`n`.`numeroNFe` AS `nfe`,`n`.`idNFe` AS `idNFe`,any_value(`pf2`.`dataPrevColeta`) AS `dataPrevColeta`,any_value(`pf2`.`dataRealColeta`) AS `dataRealColeta`,any_value(`pf2`.`dataPrevReceb`) AS `dataPrevReceb`,any_value(`pf2`.`dataRealReceb`) AS `dataRealReceb` from (((((`staccato`.`estoque` `e` left join (select `consumo`.`idEstoque` AS `idEstoque`,sum(`consumo`.`quant`) AS `consumoEst` from (`staccato`.`estoque_has_consumo` `consumo` left join `staccato`.`venda_has_produto2` `vp` on((`consumo`.`idVendaProduto2` = `vp`.`idVendaProduto2`))) where ((`vp`.`dataRealEnt` <= curdate()) and (`consumo`.`status` <> 'CANCELADO')) group by `consumo`.`idEstoque`) `e2` on((`e`.`idEstoque` = `e2`.`idEstoque`))) left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) where ((`e`.`status` = 'ESTOQUE') and (`pf2`.`dataRealReceb` <= curdate())) group by `e`.`idEstoque` having (`contabil` > 0) order by `e`.`idEstoque`;

-- -----------------------------------------------------
-- View `staccato`.`view_estoque_disponivel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_estoque_disponivel`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_estoque_disponivel` AS select `n`.`cnpjDest` AS `cnpjDest`,`e`.`status` AS `status`,`e`.`idEstoque` AS `idEstoque`,`p`.`fornecedor` AS `fornecedor`,`e`.`descricao` AS `descricao`,`e`.`restante` AS `restante`,`e`.`un` AS `unEst`,(`e`.`restante` / `p`.`quantCaixa`) AS `Caixas`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,`e`.`codComercial` AS `codComercial`,`n`.`numeroNFe` AS `nfe`,any_value(`pf2`.`dataPrevColeta`) AS `dataPrevColeta`,any_value(`pf2`.`dataRealColeta`) AS `dataRealColeta`,any_value(`pf2`.`dataPrevReceb`) AS `dataPrevReceb`,any_value(`pf2`.`dataRealReceb`) AS `dataRealReceb` from ((((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) where (`e`.`status` = 'ESTOQUE') group by `e`.`idEstoque` having (`e`.`restante` > 0);

-- -----------------------------------------------------
-- View `staccato`.`view_estoque_zerado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_estoque_zerado`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_estoque_zerado` AS select `n`.`cnpjDest` AS `cnpjDest`,`e`.`status` AS `status`,`e`.`idEstoque` AS `idEstoque`,`p`.`fornecedor` AS `fornecedor`,`e`.`descricao` AS `descricao`,`e`.`restante` AS `restante`,`e`.`un` AS `unEst`,(`e`.`restante` / `p`.`quantCaixa`) AS `Caixas`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,`e`.`codComercial` AS `codComercial`,`n`.`numeroNFe` AS `nfe`,any_value(`pf2`.`dataPrevColeta`) AS `dataPrevColeta`,any_value(`pf2`.`dataRealColeta`) AS `dataRealColeta`,any_value(`pf2`.`dataPrevReceb`) AS `dataPrevReceb`,any_value(`pf2`.`dataRealReceb`) AS `dataRealReceb` from ((((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) where (`e`.`status` = 'ESTOQUE') group by `e`.`idEstoque` having (`e`.`restante` = 0);

-- -----------------------------------------------------
-- View `staccato`.`view_faturamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_faturamento`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_faturamento` AS select any_value(`pf2`.`ordemCompra`) AS `ordemCompra`,any_value(`pf2`.`fornecedor`) AS `fornecedor`,min(`v`.`data`) AS `data`,count(`pf2`.`idProduto`) AS `produtos`,sum(`pf2`.`preco`) AS `total`,`pf2`.`idCompra` AS `idCompra`,any_value(`pf2`.`dataPrevFat`) AS `dataPrevFat`,group_concat(distinct substring_index(`u`.`nome`,' ',1) separator ', ') AS `vendedor`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `idVenda`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntrega`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntrega`,any_value(`f`.`representacao`) AS `representacao`,`pff`.`dataFollowup` AS `dataFollowup`,`pff`.`observacao` AS `observacao` from (((((`staccato`.`pedido_fornecedor_has_produto2` `pf2` left join `staccato`.`pedido_fornecedor_has_followup` `pff` on(((`pf2`.`ordemCompra` = `pff`.`ordemCompra`) and (`pff`.`idFollowup` = (select max(`staccato`.`pedido_fornecedor_has_followup`.`idFollowup`) from `staccato`.`pedido_fornecedor_has_followup` where (`staccato`.`pedido_fornecedor_has_followup`.`ordemCompra` = `pf2`.`ordemCompra`)))))) left join `staccato`.`produto` `p` on((`pf2`.`idProduto` = `p`.`idProduto`))) left join `staccato`.`fornecedor` `f` on((`p`.`idFornecedor` = `f`.`idFornecedor`))) left join `staccato`.`venda` `v` on((`v`.`idVenda` = `pf2`.`idVenda`))) left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) where (`pf2`.`status` = 'EM FATURAMENTO') group by `pf2`.`idCompra`,`pff`.`idFollowup`;

-- -----------------------------------------------------
-- View `staccato`.`view_financeiro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_financeiro`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_financeiro` AS select group_concat(distinct date_format(`v`.`data`,'%m/%Y') separator ',') AS `mes`,`l`.`nomeFantasia` AS `nomeFantasia`,(sum(`vp2`.`total`) + 0E0) AS `SomaDetotal`,(sum(if((`ehc`.`valorunid` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),((`vp2`.`quant` * (1 - (0 * (`ehc`.`desconto` / `ehc`.`valor`)))) * `ehc`.`valorunid`))) + 0E0) AS `custo`,if(((`ehc`.`valorunid` is null) and (`pf`.`prcUnitario` is null) and (right(`vp2`.`idVenda`,1) <> 'R') and (right(`vp2`.`idVenda`,2) <> 'RD')),'sem custo','') AS `sem custo`,(sum(if(((right(`vp2`.`idVenda`,1) = 'R') or (right(`vp2`.`idVenda`,2) = 'RD')),0,((0.58 * 0.12) * if((`ehc`.`valorunid` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),(`vp2`.`quant` * `ehc`.`valorunid`))))) + 0E0) AS `ICMS`,sum(if(((right(`vp2`.`idVenda`,1) = 'R') or (right(`vp2`.`idVenda`,2) = 'RD')),(((`f`.`comissaoLoja` / 100) * `vp2`.`total`) * ((0.25 * 0.32) + (0.09 * 0.32))),(`vp2`.`total` * ((0.25 * 0.08) + (0.09 * 0.12))))) AS `IR+CSLL`,sum(if(((right(`vp2`.`idVenda`,1) = 'R') or (right(`vp2`.`idVenda`,2) = 'RD')),(((`f`.`comissaoLoja` / 100) * `vp2`.`total`) * 0.0865),(`vp2`.`total` * 0.0365))) AS `PIS+Cofins+ISS`,if(((right(`vp2`.`idVenda`,1) = 'R') or (right(`vp2`.`idVenda`,2) = 'RD')),'Representacao','Venda') AS `Representacao`,sum(if(((right(`vp2`.`idVenda`,1) = 'R') or (right(`vp2`.`idVenda`,2) = 'RD')),((`vp2`.`total` * `f`.`comissaoLoja`) / 100),0)) AS `Comissao Representacao`,(sum(((`vp2`.`total` * `prof`.`comissao`) / 100)) + 0E0) AS `RT`,sum((((`f`.`comissao1` / 100) * `vp2`.`total`) - ((((right(`p`.`ui`,1) = 'L') * (`f`.`comissao2` - `f`.`comissao1`)) / 100) * `vp2`.`total`))) AS `ValorComissao`,if((group_concat(distinct `cr`.`Cartao` separator ',') is not null),((-(1) * (group_concat(distinct `cr`.`Cartao` separator ',') * group_concat(distinct `vp2`.`total` separator ','))) / (group_concat(distinct `v`.`total` separator ',') - group_concat(distinct `v`.`frete` separator ','))),0E0) AS `Cartao` from (((((((((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`loja` `l` on((`vp2`.`idLoja` = `l`.`idLoja`))) left join (select group_concat(distinct last_insert_id(`ehc`.`valorUnid`) separator ',') AS `valorunid`,group_concat(distinct last_insert_id(`ehc`.`desconto`) separator ',') AS `desconto`,group_concat(distinct last_insert_id(`ehc`.`valor`) separator ',') AS `valor`,last_insert_id(`ehc`.`idVendaProduto2`) AS `idVendaProduto2` from `staccato`.`estoque_has_consumo` `ehc` group by `ehc`.`idVendaProduto2`) `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) left join (select `pf`.`idCompra` AS `idCompra`,`pf`.`idProduto` AS `idProduto`,group_concat(distinct last_insert_id(`pf`.`prcUnitario`) separator ',') AS `prcUnitario` from `staccato`.`pedido_fornecedor_has_produto` `pf` group by `pf`.`idCompra`,`pf`.`idProduto`) `pf` on(((`vp2`.`idProduto` = `pf`.`idProduto`) and (`vp2`.`idCompra` = `pf`.`idCompra`)))) left join `staccato`.`fornecedor` `f` on((`vp2`.`fornecedor` = `f`.`razaoSocial`))) left join `staccato`.`profissional` `prof` on((`v`.`idProfissional` = `prof`.`idProfissional`))) left join `staccato`.`produto` `p` on((`vp2`.`idProduto` = `p`.`idProduto`))) left join (select sum(`cr`.`valor`) AS `Cartao`,`cr`.`idVenda` AS `idVenda` from `staccato`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` <> 'CANCELADO') and (`cr`.`tipo` like '%Taxa Cartão') and (`cr`.`desativado` = false)) group by `cr`.`idVenda`) `cr` on((`cr`.`idVenda` = `vp2`.`idVenda`))) where (`vp2`.`status` <> 'CANCELADO') group by date_format(`v`.`data`,'%Y-%m'),`l`.`nomeFantasia`,if(((`ehc`.`valorunid` is null) and (`pf`.`prcUnitario` is null) and (right(`vp2`.`idVenda`,1) <> 'R') and (right(`vp2`.`idVenda`,2) <> 'RD')),'sem custo',''),if(((right(`vp2`.`idVenda`,1) = 'R') or (right(`vp2`.`idVenda`,2) = 'RD')),'Representacao','Venda'),if((`cr`.`Cartao` is not null),((`cr`.`Cartao` * `vp2`.`total`) / (`v`.`total` - `v`.`frete`)),0);

-- -----------------------------------------------------
-- View `staccato`.`view_fluxo_caixa_pendente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fluxo_caixa_pendente`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fluxo_caixa_pendente` AS select `cp`.`idPagamento` AS `idPagamento`,`cp`.`idCompra` AS `Compra/Venda`,`cp`.`dataPagamento` AS `dataPagamento`,`cp`.`dataRealizado` AS `dataRealizado`,(`cp`.`valor` * -(1)) AS `R$`,`cp`.`tipo` AS `Tipo`,(select concat(`staccato`.`loja_has_conta`.`banco`,' - ',`staccato`.`loja_has_conta`.`agencia`,' - ',`staccato`.`loja_has_conta`.`conta`) from `staccato`.`loja_has_conta` where (`staccato`.`loja_has_conta`.`idConta` = `cp`.`idConta`)) AS `contaDestino`,`cp`.`idConta` AS `idConta`,`cp`.`status` AS `Status`,'SAIDA' AS `ENT/SAI` from `staccato`.`conta_a_pagar_has_pagamento` `cp` where ((`cp`.`status` in ('PENDENTE','CONFERIDO','AGENDADO','PENDENTE GARE','LIBERADO GARE','GERADO GARE')) and (`cp`.`desativado` = false)) union all select `cr`.`idPagamento` AS `idPagamento`,`cr`.`idVenda` AS `idVenda`,`cr`.`dataPagamento` AS `dataPagamento`,`cr`.`dataRealizado` AS `dataRealizado`,`cr`.`valor` AS `valor`,`cr`.`tipo` AS `tipo`,(select concat(`staccato`.`loja_has_conta`.`banco`,' - ',`staccato`.`loja_has_conta`.`agencia`,' - ',`staccato`.`loja_has_conta`.`conta`) from `staccato`.`loja_has_conta` where (`staccato`.`loja_has_conta`.`idConta` = `cr`.`idConta`)) AS `contaDestino`,`cr`.`idConta` AS `idConta`,`cr`.`status` AS `status`,'ENTRADA' AS `ENTRADA` from `staccato`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` in ('PENDENTE','CONFERIDO')) and (`cr`.`desativado` = false) and (`cr`.`representacao` = false)) order by `dataPagamento`,`idPagamento`;

-- -----------------------------------------------------
-- View `staccato`.`view_fluxo_caixa_realizado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fluxo_caixa_realizado`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fluxo_caixa_realizado` AS select `cp`.`contraParte` AS `ContraParte`,`cp`.`idCompra` AS `Compra/Venda`,`cp`.`dataRealizado` AS `dataRealizado`,(`cp`.`valorReal` * -(1)) AS `R$`,`cp`.`tipo` AS `Tipo`,(select concat(`staccato`.`loja_has_conta`.`banco`,' - ',`staccato`.`loja_has_conta`.`agencia`,' - ',`staccato`.`loja_has_conta`.`conta`) from `staccato`.`loja_has_conta` where (`staccato`.`loja_has_conta`.`idConta` = `cp`.`idConta`)) AS `contaDestino`,`cp`.`idConta` AS `idConta`,`cp`.`status` AS `Status`,'SAIDA' AS `ENT/SAI` from `staccato`.`conta_a_pagar_has_pagamento` `cp` where ((`cp`.`status` in ('PAGO','PAGO GARE')) and (`cp`.`dataRealizado` is not null) and (`cp`.`valorReal` is not null) and (`cp`.`desativado` = false)) union all select `cr`.`contraParte` AS `ContraParte`,`cr`.`idVenda` AS `idVenda`,`cr`.`dataRealizado` AS `dataRealizado`,`cr`.`valorReal` AS `valorReal`,`cr`.`tipo` AS `tipo`,(select concat(`staccato`.`loja_has_conta`.`banco`,' - ',`staccato`.`loja_has_conta`.`agencia`,' - ',`staccato`.`loja_has_conta`.`conta`) from `staccato`.`loja_has_conta` where (`staccato`.`loja_has_conta`.`idConta` = `cr`.`idConta`)) AS `contaDestino`,`cr`.`idConta` AS `idConta`,`cr`.`status` AS `status`,'ENTRADA' AS `ENTRADA` from `staccato`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` = 'RECEBIDO') and (`cr`.`dataRealizado` is not null) and (`cr`.`valorReal` is not null) and (`cr`.`desativado` = false)) order by `dataRealizado`;

-- -----------------------------------------------------
-- View `staccato`.`view_fluxo_caixa_realizado_grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fluxo_caixa_realizado_grupo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fluxo_caixa_realizado_grupo` AS select `cp`.`idCompra` AS `Compra/Venda`,`cp`.`dataRealizado` AS `dataRealizado`,(`cp`.`valorReal` * -(1)) AS `R$`,`cp`.`tipo` AS `Tipo`,`cp`.`grupo` AS `grupo`,`cp`.`observacao` AS `obs`,`cp`.`centroCusto` AS `ccusto`,(select concat(`staccato`.`loja_has_conta`.`banco`,' - ',`staccato`.`loja_has_conta`.`agencia`,' - ',`staccato`.`loja_has_conta`.`conta`) from `staccato`.`loja_has_conta` where (`staccato`.`loja_has_conta`.`idConta` = `cp`.`idConta`)) AS `contaDestino`,`cp`.`idConta` AS `idConta`,`cp`.`status` AS `Status`,'SAIDA' AS `ENT/SAI` from `staccato`.`conta_a_pagar_has_pagamento` `cp` where ((`cp`.`status` in ('PAGO','PAGO GARE')) and (`cp`.`dataRealizado` is not null) and (`cp`.`valorReal` is not null) and (`cp`.`desativado` = false)) union all select `cr`.`idVenda` AS `idVenda`,`cr`.`dataRealizado` AS `dataRealizado`,`cr`.`valorReal` AS `valorReal`,`cr`.`tipo` AS `tipo`,`cr`.`grupo` AS `grupo`,`cr`.`observacao` AS `obs`,`cr`.`centroCusto` AS `ccusto`,(select concat(`staccato`.`loja_has_conta`.`banco`,' - ',`staccato`.`loja_has_conta`.`agencia`,' - ',`staccato`.`loja_has_conta`.`conta`) from `staccato`.`loja_has_conta` where (`staccato`.`loja_has_conta`.`idConta` = `cr`.`idConta`)) AS `contaDestino`,`cr`.`idConta` AS `idConta`,`cr`.`status` AS `status`,'ENTRADA' AS `ENTRADA` from `staccato`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` = 'RECEBIDO') and (`cr`.`dataRealizado` is not null) and (`cr`.`valorReal` is not null) and (`cr`.`desativado` = false)) order by `dataRealizado`;

-- -----------------------------------------------------
-- View `staccato`.`view_fluxo_resumo_pendente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fluxo_resumo_pendente`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fluxo_resumo_pendente` AS select `staccato`.`v`.`dataPagamento` AS `dataPagamento`,sum(if((`staccato`.`v`.`ENT/SAI` = 'SAIDA'),`staccato`.`v`.`R$`,0)) AS `SAIDA`,sum(if((`staccato`.`v`.`ENT/SAI` = 'ENTRADA'),`staccato`.`v`.`R$`,0)) AS `ENTRADA`,sum(`staccato`.`v`.`R$`) AS `R$` from `staccato`.`view_fluxo_caixa_pendente` `v` group by `staccato`.`v`.`dataPagamento` order by `staccato`.`v`.`dataPagamento`;

-- -----------------------------------------------------
-- View `staccato`.`view_fluxo_resumo_realizado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fluxo_resumo_realizado`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fluxo_resumo_realizado` AS select `staccato`.`v`.`dataRealizado` AS `dataRealizado`,`staccato`.`v`.`contaDestino` AS `contaDestino`,`staccato`.`v`.`idConta` AS `idConta`,sum(if((`staccato`.`v`.`ENT/SAI` = 'SAIDA'),`staccato`.`v`.`R$`,0)) AS `SAIDA`,sum(if((`staccato`.`v`.`ENT/SAI` = 'ENTRADA'),`staccato`.`v`.`R$`,0)) AS `ENTRADA`,sum(`staccato`.`v`.`R$`) AS `R$` from `staccato`.`view_fluxo_caixa_realizado` `v` group by `staccato`.`v`.`dataRealizado`,`staccato`.`v`.`idConta`,`staccato`.`v`.`contaDestino` order by `staccato`.`v`.`dataRealizado`;

-- -----------------------------------------------------
-- View `staccato`.`view_followup_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_followup_estoque`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_followup_estoque` AS select `ehf`.`idEstoque` AS `idEstoque`,`u`.`nome` AS `nome`,`ehf`.`observacao` AS `observacao`,`ehf`.`dataFollowup` AS `dataFollowup` from (`staccato`.`estoque_has_followup` `ehf` left join `staccato`.`usuario` `u` on((`ehf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `staccato`.`view_followup_nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_followup_nfe`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_followup_nfe` AS select `nhf`.`idNFe` AS `idNFe`,`u`.`nome` AS `nome`,`nhf`.`observacao` AS `observacao`,`nhf`.`dataFollowup` AS `dataFollowup` from (`staccato`.`nfe_has_followup` `nhf` left join `staccato`.`usuario` `u` on((`nhf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `staccato`.`view_followup_orcamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_followup_orcamento`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_followup_orcamento` AS select `ohf`.`idOrcamento` AS `idOrcamento`,`u`.`nome` AS `nome`,`ohf`.`observacao` AS `observacao`,`ohf`.`dataFollowup` AS `dataFollowup`,`ohf`.`dataProxFollowup` AS `dataProxFollowup`,`ohf`.`semaforo` AS `semaforo` from (`staccato`.`orcamento_has_followup` `ohf` left join `staccato`.`usuario` `u` on((`ohf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `staccato`.`view_followup_pedido_fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_followup_pedido_fornecedor`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_followup_pedido_fornecedor` AS select `pff`.`ordemCompra` AS `ordemCompra`,`u`.`nome` AS `nome`,`pff`.`observacao` AS `observacao`,`pff`.`dataFollowup` AS `dataFollowup` from (`staccato`.`pedido_fornecedor_has_followup` `pff` left join `staccato`.`usuario` `u` on((`pff`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `staccato`.`view_followup_venda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_followup_venda`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_followup_venda` AS select `vhf`.`idVenda` AS `idVenda`,`u`.`nome` AS `nome`,`vhf`.`tipoOperacao` AS `Tipo`,`vhf`.`observacao` AS `observacao`,`vhf`.`dataFollowup` AS `dataFollowup` from (`staccato`.`venda_has_followup` `vhf` left join `staccato`.`usuario` `u` on((`vhf`.`idUsuario` = `u`.`idUsuario`)));

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_compra`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_compra` AS select `pf`.`fornecedor` AS `fornecedor`,sum((case when (`pf`.`status` = 'PENDENTE') then 1 else 0 end)) AS `PEND`,sum((case when (`pf`.`status` = 'EM COMPRA') then 1 else 0 end)) AS `CONF`,sum((case when (`pf`.`status` = 'EM FATURAMENTO') then 1 else 0 end)) AS `FAT` from `staccato`.`pedido_fornecedor_has_produto` `pf` where ((`pf`.`status` = 'PENDENTE') or (`pf`.`status` = 'INICIADO') or (`pf`.`status` = 'EM COMPRA') or (`pf`.`status` = 'EM FATURAMENTO')) group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_compra_confirmar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_compra_confirmar`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_compra_confirmar` AS select sum((case when (`pf2`.`status` = 'EM COMPRA') then 1 else 0 end)) AS `CONF`,`pf2`.`fornecedor` AS `Fornecedor` from `staccato`.`pedido_fornecedor_has_produto2` `pf2` where (`pf2`.`status` = 'EM COMPRA') group by `pf2`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_compra_faturar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_compra_faturar`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_compra_faturar` AS select sum((case when (`pf2`.`status` = 'EM FATURAMENTO') then 1 else 0 end)) AS `FAT`,`pf2`.`fornecedor` AS `Fornecedor`,`f`.`representacao` AS `representacao` from ((`staccato`.`pedido_fornecedor_has_produto2` `pf2` left join `staccato`.`produto` `p` on((`pf2`.`idProduto` = `p`.`idProduto`))) left join `staccato`.`fornecedor` `f` on((`p`.`idFornecedor` = `f`.`idFornecedor`))) where (`pf2`.`status` = 'EM FATURAMENTO') group by `pf2`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_compra_gerar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_compra_gerar`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_compra_gerar` AS select sum((case when (`pf`.`status` = 'PENDENTE') then 1 else 0 end)) AS `PEND`,`pf`.`fornecedor` AS `Fornecedor` from `staccato`.`pedido_fornecedor_has_produto` `pf` where (`pf`.`status` = 'PENDENTE') group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_logistica_agendar_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_logistica_agendar_coleta`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_logistica_agendar_coleta` AS select `subquery`.`fornecedor` AS `Fornecedor`,sum((`subquery`.`idVenda` is null)) AS `Estoque`,sum((`subquery`.`idVenda` is not null)) AS `Venda` from (select group_concat(distinct `pf2`.`fornecedor` separator ',') AS `fornecedor`,`e`.`status` AS `status`,group_concat(distinct `pf2`.`idVenda` separator ',') AS `idVenda` from ((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) where ((`e`.`status` = 'EM COLETA') and (`pf2`.`dataPrevColeta` is null) and (`pf2`.`idPedido2` is not null)) group by `e`.`idEstoque`) `subquery` group by `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_logistica_coleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_logistica_coleta`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_logistica_coleta` AS select `subquery`.`fornecedor` AS `Fornecedor`,sum((`subquery`.`status` = 'EM COLETA')) AS `COLET` from (select group_concat(distinct `pf2`.`fornecedor` separator ',') AS `fornecedor`,`e`.`status` AS `status` from ((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) where ((`e`.`status` = 'EM COLETA') and (`pf2`.`dataPrevColeta` is not null) and (`pf2`.`idPedido2` is not null)) group by `e`.`idEstoque`) `subquery` group by `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_logistica_recebimento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_logistica_recebimento`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_logistica_recebimento` AS select `subquery`.`fornecedor` AS `Fornecedor`,sum((`subquery`.`status` = 'EM RECEBIMENTO')) AS `RECEB` from (select group_concat(distinct `pf2`.`fornecedor` separator ',') AS `fornecedor`,`e`.`status` AS `status` from ((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) where ((`e`.`status` = 'EM RECEBIMENTO') and (`pf2`.`dataPrevReceb` is not null) and (`pf2`.`idPedido2` is not null)) group by `e`.`idEstoque`) `subquery` group by `subquery`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_fornecedor_logistica_representacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_fornecedor_logistica_representacao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_fornecedor_logistica_representacao` AS select `pf`.`fornecedor` AS `Fornecedor`,count(0) AS `Produtos` from (`staccato`.`pedido_fornecedor_has_produto` `pf` left join `staccato`.`venda` `v` on((`pf`.`idVenda` = `v`.`idVenda`))) where ((`v`.`representacao` = 1) and (`pf`.`status` = 'EM ENTREGA')) group by `pf`.`fornecedor`;

-- -----------------------------------------------------
-- View `staccato`.`view_galpao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_galpao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_galpao` AS select `ehc`.`idConsumo` AS `idEstoque_idConsumo`,`ehc`.`idEstoque` AS `idEstoque`,`ehc`.`descricao` AS `descricao`,`p`.`formComercial` AS `formComercial`,`e`.`status` AS `status`,`vp2`.`idVenda` AS `idVenda`,`ehc`.`codComercial` AS `codComercial`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`idNFe` AS `idNFe`,`ehc`.`caixas` AS `caixas`,`ehc`.`quant` AS `quant`,`ehc`.`idBloco` AS `idBloco`,`ehc`.`idVendaProduto2` AS `idVendaProduto2`,`e`.`lote` AS `lote`,'CLIENTE' AS `tipo` from ((((`staccato`.`estoque_has_consumo` `ehc` left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`venda_has_produto2` `vp2` on((`ehc`.`idVendaProduto2` = `vp2`.`idVendaProduto2`))) left join `staccato`.`produto` `p` on((`ehc`.`idProduto` = `p`.`idProduto`))) where (`vp2`.`status` in ('ESTOQUE','EM COLETA','EM RECEBIMENTO','ENTREGA AGEND.','EM ENTREGA')) union select `e`.`idEstoque` AS `idEstoque_idConsumo`,`e`.`idEstoque` AS `idEstoque`,`e`.`descricao` AS `descricao`,`p`.`formComercial` AS `formComercial`,`e`.`status` AS `status`,NULL AS `idVenda`,`e`.`codComercial` AS `codComercial`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`idNFe` AS `idNFe`,(`e`.`restante` / `p`.`quantCaixa`) AS `caixas`,`e`.`restante` AS `quant`,`e`.`idBloco` AS `idBloco`,NULL AS `idVendaProduto2`,`e`.`lote` AS `lote`,'EST. LOJA' AS `tipo` from ((`staccato`.`estoque` `e` left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`produto` `p` on((`e`.`idProduto` = `p`.`idProduto`))) where (`e`.`restante` > 0);

-- -----------------------------------------------------
-- View `staccato`.`view_gares`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_gares`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_gares` AS select `cp`.`idPagamento` AS `idPagamento`,`n`.`idNFe` AS `idNFe`,group_concat(distinct `pf2`.`fornecedor` separator ',') AS `Fornecedor`,`n`.`dataHoraEmissao` AS `referencia`,`cp`.`status` AS `status`,`cp`.`valor` AS `valor`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`cnpjOrig` AS `cnpjOrig`,`cp`.`dataPagamento` AS `dataPagamento`,`cp`.`dataRealizado` AS `dataRealizado`,`c`.`banco` AS `banco` from (((((`staccato`.`conta_a_pagar_has_pagamento` `cp` left join `staccato`.`nfe` `n` on((`cp`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`cnab` `c` on((`cp`.`idCnab` = `c`.`idCnab`))) left join `staccato`.`estoque` `e` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`estoque_has_compra` `ehc` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`))) where (`cp`.`status` in ('PENDENTE GARE','LIBERADO GARE','GERADO GARE','PAGO GARE','CANCELADO GARE')) group by `cp`.`idPagamento`;

-- -----------------------------------------------------
-- View `staccato`.`view_grafico_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_grafico_loja`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_grafico_loja` AS select `v`.`idLoja` AS `idLoja`,dayofmonth(`v`.`data`) AS `dia`,sum((case when ((month(`v`.`data`) = month((now() - interval 12 month))) and (year(`v`.`data`) = year((now() - interval 12 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes12`,sum((case when ((month(`v`.`data`) = month((now() - interval 11 month))) and (year(`v`.`data`) = year((now() - interval 11 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes11`,sum((case when ((month(`v`.`data`) = month((now() - interval 10 month))) and (year(`v`.`data`) = year((now() - interval 10 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes10`,sum((case when ((month(`v`.`data`) = month((now() - interval 9 month))) and (year(`v`.`data`) = year((now() - interval 9 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes9`,sum((case when ((month(`v`.`data`) = month((now() - interval 8 month))) and (year(`v`.`data`) = year((now() - interval 8 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes8`,sum((case when ((month(`v`.`data`) = month((now() - interval 7 month))) and (year(`v`.`data`) = year((now() - interval 7 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes7`,sum((case when ((month(`v`.`data`) = month((now() - interval 6 month))) and (year(`v`.`data`) = year((now() - interval 6 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes6`,sum((case when ((month(`v`.`data`) = month((now() - interval 5 month))) and (year(`v`.`data`) = year((now() - interval 5 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes5`,sum((case when ((month(`v`.`data`) = month((now() - interval 4 month))) and (year(`v`.`data`) = year((now() - interval 4 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes4`,sum((case when ((month(`v`.`data`) = month((now() - interval 3 month))) and (year(`v`.`data`) = year((now() - interval 3 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes3`,sum((case when ((month(`v`.`data`) = month((now() - interval 2 month))) and (year(`v`.`data`) = year((now() - interval 2 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes2`,sum((case when ((month(`v`.`data`) = month((now() - interval 1 month))) and (year(`v`.`data`) = year((now() - interval 1 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes1`,sum((case when ((month(`v`.`data`) = month(now())) and (year(`v`.`data`) = year(now()))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes0` from `staccato`.`venda` `v` where (`v`.`status` <> 'CANCELADO') group by dayofmonth(`v`.`data`),`v`.`idLoja` order by dayofmonth(`v`.`data`),`v`.`idLoja`;

-- -----------------------------------------------------
-- View `staccato`.`view_grafico_lojas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_grafico_lojas`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_grafico_lojas` AS select dayofmonth(`v`.`data`) AS `dia`,sum((case when ((month(`v`.`data`) = month((now() - interval 12 month))) and (year(`v`.`data`) = year((now() - interval 12 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes12`,sum((case when ((month(`v`.`data`) = month((now() - interval 11 month))) and (year(`v`.`data`) = year((now() - interval 11 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes11`,sum((case when ((month(`v`.`data`) = month((now() - interval 10 month))) and (year(`v`.`data`) = year((now() - interval 10 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes10`,sum((case when ((month(`v`.`data`) = month((now() - interval 9 month))) and (year(`v`.`data`) = year((now() - interval 9 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes9`,sum((case when ((month(`v`.`data`) = month((now() - interval 8 month))) and (year(`v`.`data`) = year((now() - interval 8 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes8`,sum((case when ((month(`v`.`data`) = month((now() - interval 7 month))) and (year(`v`.`data`) = year((now() - interval 7 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes7`,sum((case when ((month(`v`.`data`) = month((now() - interval 6 month))) and (year(`v`.`data`) = year((now() - interval 6 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes6`,sum((case when ((month(`v`.`data`) = month((now() - interval 5 month))) and (year(`v`.`data`) = year((now() - interval 5 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes5`,sum((case when ((month(`v`.`data`) = month((now() - interval 4 month))) and (year(`v`.`data`) = year((now() - interval 4 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes4`,sum((case when ((month(`v`.`data`) = month((now() - interval 3 month))) and (year(`v`.`data`) = year((now() - interval 3 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes3`,sum((case when ((month(`v`.`data`) = month((now() - interval 2 month))) and (year(`v`.`data`) = year((now() - interval 2 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes2`,sum((case when ((month(`v`.`data`) = month((now() - interval 1 month))) and (year(`v`.`data`) = year((now() - interval 1 month)))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes1`,sum((case when ((month(`v`.`data`) = month(now())) and (year(`v`.`data`) = year(now()))) then (`v`.`total` - `v`.`frete`) else 0 end)) AS `mes0` from `staccato`.`venda` `v` where (`v`.`status` <> 'CANCELADO') group by dayofmonth(`v`.`data`) order by dayofmonth(`v`.`data`);

-- -----------------------------------------------------
-- View `staccato`.`view_logistica_representacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_logistica_representacao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_logistica_representacao` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,`pf2`.`idPedido2` AS `idPedido2`,`pf2`.`fornecedor` AS `fornecedor`,`pf2`.`idVenda` AS `idVenda`,`pf2`.`idVendaProduto2` AS `idVendaProduto2`,`c`.`nome_razao` AS `cliente`,`pf2`.`idCompra` AS `idCompra`,`pf2`.`ordemCompra` AS `ordemCompra`,`pf2`.`descricao` AS `descricao`,`pf2`.`codComercial` AS `codComercial`,`pf2`.`quant` AS `quant`,`pf2`.`un` AS `un`,`pf2`.`caixas` AS `caixas`,`pf2`.`kgcx` AS `kgcx` from ((`staccato`.`pedido_fornecedor_has_produto2` `pf2` left join `staccato`.`venda` `v` on((`pf2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`cliente` `c` on((`v`.`idCliente` = `c`.`idCliente`))) where ((`v`.`representacao` = 1) and (`pf2`.`status` = 'EM ENTREGA')) group by `pf2`.`idPedido2` order by `prazoEntrega`,`pf2`.`idPedido2`;

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_distribuicao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_distribuicao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_distribuicao` AS select `staccato`.`nfe`.`idNFe` AS `idNFe`,`staccato`.`nfe`.`idVenda` AS `idVenda`,`staccato`.`nfe`.`numeroNFe` AS `numeroNFe`,`staccato`.`nfe`.`tipo` AS `tipo`,`staccato`.`nfe`.`status` AS `status`,`staccato`.`nfe`.`dataHoraEmissao` AS `dataHoraEmissao`,`staccato`.`nfe`.`emitente` AS `emitente`,`staccato`.`nfe`.`cnpjOrig` AS `cnpjOrig`,`staccato`.`nfe`.`cnpjDest` AS `cnpjDest`,`staccato`.`nfe`.`chaveAcesso` AS `chaveAcesso`,`staccato`.`nfe`.`obs` AS `obs`,`staccato`.`nfe`.`transportadora` AS `transportadora`,`staccato`.`nfe`.`gare` AS `gare`,`staccato`.`nfe`.`gareData` AS `gareData`,`staccato`.`nfe`.`valor` AS `valor`,`staccato`.`nfe`.`infCpl` AS `infCpl`,`staccato`.`nfe`.`nsu` AS `nsu`,`staccato`.`nfe`.`statusDistribuicao` AS `statusDistribuicao`,`staccato`.`nfe`.`dataDistribuicao` AS `dataDistribuicao`,`staccato`.`nfe`.`utilizada` AS `utilizada`,`staccato`.`nfe`.`ciencia` AS `ciencia`,`staccato`.`nfe`.`confirmar` AS `confirmar`,`staccato`.`nfe`.`desconhecer` AS `desconhecer`,`staccato`.`nfe`.`naoRealizar` AS `naoRealizar`,`staccato`.`nfe`.`created` AS `created`,`staccato`.`nfe`.`lastUpdated` AS `lastUpdated` from `staccato`.`nfe` where (`staccato`.`nfe`.`nsu` is not null) order by `staccato`.`nfe`.`nsu` desc;

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_entrada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_entrada`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_entrada` AS select `n`.`idNFe` AS `idNFe`,`n`.`chaveAcesso` AS `chaveAcesso`,`n`.`cnpjDest` AS `CNPJ Dest`,`n`.`emitente` AS `Emitente`,any_value(`pf2`.`fornecedor`) AS `Fornecedor`,`n`.`numeroNFe` AS `NFe`,`n`.`status` AS `Status`,any_value(`e`.`recebidoPor`) AS `Recebido Por`,any_value(`pf2`.`dataRealReceb`) AS `Data Receb`,any_value(`chp`.`valor`) AS `GARE`,any_value(`chp`.`dataRealizado`) AS `GARE Pago Em`,group_concat(distinct `pf2`.`ordemCompra` order by `pf2`.`ordemCompra` ASC separator ', ') AS `OC`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `Venda`,`n`.`nsu` AS `nsu`,`n`.`utilizada` AS `utilizada`,`n`.`dataHoraEmissao` AS `dataHoraEmissao`,`nhf`.`dataFollowup` AS `dataFollowup`,`nhf`.`observacao` AS `observacao` from (((((`staccato`.`nfe` `n` left join `staccato`.`conta_a_pagar_has_pagamento` `chp` on(((`n`.`idNFe` = `chp`.`idNFe`) and (`chp`.`contraParte` = 'GARE')))) left join `staccato`.`estoque` `e` on(((`n`.`idNFe` = `e`.`idNFe`) and (`e`.`status` <> 'CANCELADO')))) left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) left join `staccato`.`nfe_has_followup` `nhf` on((`nhf`.`idFollowup` = (select max(`nhf`.`idFollowup`) from `staccato`.`nfe_has_followup` `nhf` where (`nhf`.`idNFe` = `n`.`idNFe`))))) where (`n`.`tipo` = 'ENTRADA') group by `n`.`idNFe`;

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_inutilizada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_inutilizada`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_inutilizada` AS select `staccato`.`nfe`.`idNFe` AS `idNFe`,`staccato`.`nfe`.`numeroNFe` AS `numeroNFe`,`staccato`.`nfe`.`status` AS `status`,`staccato`.`nfe`.`emitente` AS `emitente`,`staccato`.`nfe`.`created` AS `created`,`staccato`.`nfe`.`chaveAcesso` AS `chaveAcesso`,`staccato`.`nfe`.`infCpl` AS `infCpl`,`staccato`.`nfe`.`xml` AS `xml` from `staccato`.`nfe` where ((`staccato`.`nfe`.`status` = 'AUTORIZADA') and (`staccato`.`nfe`.`utilizada` = false) and (`staccato`.`nfe`.`cnpjDest` = '09375013000543'));

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_inutilizada2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_inutilizada2`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_inutilizada2` AS select `staccato`.`nfe`.`idNFe` AS `idNFe`,`staccato`.`nfe`.`numeroNFe` AS `numeroNFe`,`staccato`.`nfe`.`status` AS `status`,`staccato`.`nfe`.`emitente` AS `emitente`,`staccato`.`nfe`.`created` AS `created`,`staccato`.`nfe`.`chaveAcesso` AS `chaveAcesso`,`staccato`.`nfe`.`infCpl` AS `infCpl`,`staccato`.`nfe`.`xml` AS `xml` from `staccato`.`nfe` where ((`staccato`.`nfe`.`status` = 'AUTORIZADA') and (`staccato`.`nfe`.`utilizada` = false) and (`staccato`.`nfe`.`cnpjDest` like '09375013%'));

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_ordemCompra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_ordemCompra`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_ordemCompra` AS select `n`.`emitente` AS `emitente`,`n`.`numeroNFe` AS `numeroNFe`,`pf2`.`ordemCompra` AS `OC`,`pf2`.`idPedido2` AS `idPedido2`,`pf2`.`idPedidoFK` AS `idPedidoFK`,`pf2`.`status` AS `status`,`pf2`.`idRelacionado` AS `idRelacionado`,`pf2`.`selecionado` AS `selecionado`,`pf2`.`aliquotaSt` AS `aliquotaSt`,`pf2`.`st` AS `st`,`pf2`.`statusFinanceiro` AS `statusFinanceiro`,`pf2`.`ordemCompra` AS `ordemCompra`,`pf2`.`ordemRepresentacao` AS `ordemRepresentacao`,`pf2`.`codFornecedor` AS `codFornecedor`,`pf2`.`idVenda` AS `idVenda`,`pf2`.`idVendaProduto1` AS `idVendaProduto1`,`pf2`.`idVendaProduto2` AS `idVendaProduto2`,`pf2`.`idCompra` AS `idCompra`,`pf2`.`fornecedor` AS `fornecedor`,`pf2`.`idProduto` AS `idProduto`,`pf2`.`descricao` AS `descricao`,`pf2`.`obs` AS `obs`,`pf2`.`colecao` AS `colecao`,`pf2`.`codComercial` AS `codComercial`,`pf2`.`quant` AS `quant`,`pf2`.`quantUpd` AS `quantUpd`,`pf2`.`un` AS `un`,`pf2`.`un2` AS `un2`,`pf2`.`caixas` AS `caixas`,`pf2`.`prcUnitario` AS `prcUnitario`,`pf2`.`preco` AS `preco`,`pf2`.`kgcx` AS `kgcx`,`pf2`.`formComercial` AS `formComercial`,`pf2`.`codBarras` AS `codBarras`,`pf2`.`dataPrevCompra` AS `dataPrevCompra`,`pf2`.`dataRealCompra` AS `dataRealCompra`,`pf2`.`dataPrevConf` AS `dataPrevConf`,`pf2`.`dataRealConf` AS `dataRealConf`,`pf2`.`dataPrevFat` AS `dataPrevFat`,`pf2`.`dataRealFat` AS `dataRealFat`,`pf2`.`dataPrevColeta` AS `dataPrevColeta`,`pf2`.`dataRealColeta` AS `dataRealColeta`,`pf2`.`dataPrevReceb` AS `dataPrevReceb`,`pf2`.`dataRealReceb` AS `dataRealReceb`,`pf2`.`dataPrevEnt` AS `dataPrevEnt`,`pf2`.`dataRealEnt` AS `dataRealEnt`,`pf2`.`created` AS `created`,`pf2`.`lastUpdated` AS `lastUpdated` from (((`staccato`.`nfe` `n` left join `staccato`.`estoque` `e` on((`n`.`idNFe` = `e`.`idNFe`))) left join `staccato`.`estoque_has_compra` `ehc` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`)));

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_saida`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_saida`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_saida` AS select `n`.`idNFe` AS `idNFe`,`n`.`chaveAcesso` AS `chaveAcesso`,`n`.`cnpjOrig` AS `Emitente`,`n`.`numeroNFe` AS `NFe`,`n`.`status` AS `Status`,`n`.`idVenda` AS `Venda`,if((`c`.`pfpj` = 'PF'),`c`.`cpf`,`c`.`cnpj`) AS `CPF/CNPJ`,`c`.`nome_razao` AS `Cliente`,`n`.`valor` AS `valor`,`n`.`dataHoraEmissao` AS `dataHoraEmissao`,`nhf`.`dataFollowup` AS `dataFollowup`,`nhf`.`observacao` AS `observacao` from (((`staccato`.`nfe` `n` left join `staccato`.`venda` `v` on((`n`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`cliente` `c` on((`c`.`idCliente` = `v`.`idCliente`))) left join `staccato`.`nfe_has_followup` `nhf` on((`nhf`.`idFollowup` = (select max(`nhf`.`idFollowup`) from `staccato`.`nfe_has_followup` `nhf` where (`nhf`.`idNFe` = `n`.`idNFe`))))) where (`n`.`tipo` = 'SAíDA') group by `n`.`idNFe` order by `n`.`numeroNFe`,`n`.`emitente`;

-- -----------------------------------------------------
-- View `staccato`.`view_nfe_todas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_nfe_todas`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_nfe_todas` AS select `staccato`.`nfe`.`idNFe` AS `idNFe`,`staccato`.`nfe`.`numeroNFe` AS `numeroNFe`,`staccato`.`nfe`.`status` AS `status`,`staccato`.`nfe`.`emitente` AS `emitente`,`staccato`.`nfe`.`created` AS `created`,`staccato`.`nfe`.`chaveAcesso` AS `chaveAcesso`,`staccato`.`nfe`.`infCpl` AS `infCpl`,`staccato`.`nfe`.`xml` AS `xml` from `staccato`.`nfe`;

-- -----------------------------------------------------
-- View `staccato`.`view_orcamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_orcamento`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_orcamento` AS select `o`.`idLoja` AS `idLoja`,`o`.`idUsuario` AS `idUsuario`,`o`.`idUsuarioConsultor` AS `idUsuarioConsultor`,`o`.`status` AS `status`,if((`o`.`status` not in ('FECHADO','PERDIDO','CANCELADO','REPLICADO')),(`o`.`validade` - (to_days(now()) - to_days(`o`.`data`))),'') AS `diasRestantes`,`o`.`idOrcamento` AS `idOrcamento`,`u`.`nome` AS `vendedor`,`u2`.`nome` AS `consultor`,`c`.`nome_razao` AS `cliente`,`p`.`nome_razao` AS `profissional`,`c`.`tel` AS `tel`,`c`.`telCel` AS `telCel`,if((`p`.`telCel` is null),if((`p`.`tel` is null),`p`.`telCom`,`p`.`tel`),`p`.`telCel`) AS `telProf`,`o`.`data` AS `data`,`o`.`total` AS `total`,`ohf`.`dataFollowup` AS `dataFollowup`,`ohf`.`dataProxFollowup` AS `dataProxFollowup`,`ohf`.`observacao` AS `observacao`,`ohf`.`semaforo` AS `semaforo`,`op`.`fornecedores` AS `fornecedores` from (((((((`staccato`.`orcamento` `o` left join `staccato`.`cliente` `c` on((`o`.`idCliente` = `c`.`idCliente`))) left join `staccato`.`usuario` `u` on((`o`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`profissional` `p` on((`o`.`idProfissional` = `p`.`idProfissional`))) left join `staccato`.`usuario` `u2` on((`o`.`idUsuarioConsultor` = `u2`.`idUsuario`))) left join (select max(`tmp`.`idFollowup`) AS `idFollowup`,`tmp`.`idOrcamentoBase` AS `idOrcamentoBase` from `staccato`.`orcamento_has_followup` `tmp` group by `tmp`.`idOrcamentoBase`) `ohf2` on((`o`.`idOrcamentoBase` = `ohf2`.`idOrcamentoBase`))) left join `staccato`.`orcamento_has_followup` `ohf` on((`ohf2`.`idFollowup` = `ohf`.`idFollowup`))) left join (select group_concat(distinct `staccato`.`orcamento_has_produto`.`fornecedor` separator ',') AS `fornecedores`,`staccato`.`orcamento_has_produto`.`idOrcamento` AS `idOrcamento` from `staccato`.`orcamento_has_produto` group by `staccato`.`orcamento_has_produto`.`idOrcamento`) `op` on((`op`.`idOrcamento` = `o`.`idOrcamento`)));

-- -----------------------------------------------------
-- View `staccato`.`view_orcamento2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_orcamento2`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_orcamento2` AS with `ohf2` as (select max(`tmp`.`idFollowup`) AS `idFollowup`,`tmp`.`idOrcamentoBase` AS `idOrcamentoBase` from `staccato`.`orcamento_has_followup` `tmp` group by `tmp`.`idOrcamentoBase`) select `o`.`idLoja` AS `idLoja`,`o`.`idUsuario` AS `idUsuario`,`o`.`idUsuarioConsultor` AS `idUsuarioConsultor`,`o`.`status` AS `Status`,(`o`.`validade` - (to_days(now()) - to_days(`o`.`data`))) AS `Dias restantes`,`o`.`idOrcamento` AS `Código`,`u`.`nome` AS `Vendedor`,`u2`.`nome` AS `Consultor`,`c`.`nome_razao` AS `Cliente`,`p`.`nome_razao` AS `Profissional`,`c`.`tel` AS `Telefone`,`c`.`telCel` AS `Celular`,if((`p`.`telCel` is null),if((`p`.`tel` is null),`p`.`telCom`,`p`.`tel`),`p`.`telCel`) AS `Tel Prof`,`o`.`data` AS `Data`,`o`.`total` AS `Total`,`ohf`.`dataFollowup` AS `Data Followup`,`ohf`.`dataProxFollowup` AS `Data Próx Followup`,`ohf`.`observacao` AS `Observação`,`ohf`.`semaforo` AS `semaforo`,`op`.`fornecedores` AS `fornecedores` from (((((((`staccato`.`orcamento` `o` left join `staccato`.`cliente` `c` on((`o`.`idCliente` = `c`.`idCliente`))) left join `staccato`.`usuario` `u` on((`o`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`profissional` `p` on((`o`.`idProfissional` = `p`.`idProfissional`))) left join `staccato`.`usuario` `u2` on((`o`.`idUsuarioConsultor` = `u2`.`idUsuario`))) left join `ohf2` on((`o`.`idOrcamentoBase` = `ohf2`.`idOrcamentoBase`))) left join `staccato`.`orcamento_has_fornecedor` `op` on((`op`.`idOrcamento` = `o`.`idOrcamento`))) left join `staccato`.`orcamento_has_followup` `ohf` on((`ohf2`.`idFollowup` = `ohf`.`idFollowup`)));

-- -----------------------------------------------------
-- View `staccato`.`view_orcamento_peso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_orcamento_peso`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_orcamento_peso` AS select (`p`.`kgcx` * `ohp`.`caixas`) AS `peso`,`ohp`.`idOrcamentoProduto` AS `idOrcamentoProduto`,`ohp`.`idOrcamento` AS `idOrcamento`,`ohp`.`idLoja` AS `idLoja`,`ohp`.`idProduto` AS `idProduto`,`ohp`.`fornecedor` AS `fornecedor`,`ohp`.`produto` AS `produto`,`ohp`.`obs` AS `obs`,`ohp`.`prcUnitario` AS `prcUnitario`,`ohp`.`descUnitario` AS `descUnitario`,`ohp`.`kg` AS `kg`,`ohp`.`caixas` AS `caixas`,`ohp`.`quant` AS `quant`,`ohp`.`un` AS `un`,`ohp`.`quantCaixa` AS `quantCaixa`,`ohp`.`codComercial` AS `codComercial`,`ohp`.`formComercial` AS `formComercial`,`ohp`.`parcial` AS `parcial`,`ohp`.`desconto` AS `desconto`,`ohp`.`parcialDesc` AS `parcialDesc`,`ohp`.`descGlobal` AS `descGlobal`,`ohp`.`total` AS `total`,`ohp`.`mostrarDesconto` AS `mostrarDesconto`,`ohp`.`estoque` AS `estoque`,`ohp`.`promocao` AS `promocao`,`ohp`.`created` AS `created`,`ohp`.`lastUpdated` AS `lastUpdated` from (`staccato`.`orcamento_has_produto` `ohp` left join `staccato`.`produto` `p` on((`ohp`.`idProduto` = `p`.`idProduto`)));

-- -----------------------------------------------------
-- View `staccato`.`view_ordemcompra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_ordemcompra`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_ordemcompra` AS select `vp2`.`idVenda` AS `idVenda`,`vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`status` AS `status`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`produto` AS `produto`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`vp2`.`caixas` AS `caixas`,`vp2`.`formComercial` AS `formComercial`,`vp2`.`obs` AS `obs` from `staccato`.`venda_has_produto2` `vp2`;

-- -----------------------------------------------------
-- View `staccato`.`view_ordemcompra_nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_ordemcompra_nfe`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_ordemcompra_nfe` AS select `pf2`.`ordemCompra` AS `ordemCompra`,`n`.`numeroNFe` AS `numeroNFe`,`n`.`idNFe` AS `idNFe` from (((`staccato`.`pedido_fornecedor_has_produto2` `pf2` left join `staccato`.`estoque_has_compra` `ehc` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`))) left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) where (`n`.`idNFe` is not null) group by `pf2`.`ordemCompra`,`n`.`idNFe`;

-- -----------------------------------------------------
-- View `staccato`.`view_ordemcompra_resumo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_ordemcompra_resumo`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_ordemcompra_resumo` AS select `v`.`idVenda` AS `Venda`,`v`.`status` AS `Status`,group_concat(distinct `pf`.`ordemCompra` separator ', ') AS `OC` from (`staccato`.`venda` `v` left join `staccato`.`pedido_fornecedor_has_produto` `pf` on((`v`.`idVenda` = `pf`.`idVenda`))) where (`v`.`devolucao` = false) group by `v`.`idVenda`;

-- -----------------------------------------------------
-- View `staccato`.`view_pagamento_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_pagamento_loja`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_pagamento_loja` AS select `lfp`.`idLoja` AS `idLoja`,`lfp`.`idPagamento` AS `idPagamento`,`fp`.`pagamento` AS `pagamento`,`fp`.`apenasRepresentacao` AS `apenasRepresentacao` from (`staccato`.`forma_pagamento` `fp` left join `staccato`.`loja_has_forma_pagamento` `lfp` on((`fp`.`idPagamento` = `lfp`.`idPagamento`)));

-- -----------------------------------------------------
-- View `staccato`.`view_pedido_fornecedor_livre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_pedido_fornecedor_livre`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_pedido_fornecedor_livre` AS select `pf2`.`idPedido2` AS `idPedido2`,`pf2`.`idVenda` AS `idVenda`,`pf2`.`idVendaProduto2` AS `idVendaProduto2`,`pf2`.`ordemCompra` AS `ordemCompra`,`pf2`.`idCompra` AS `idCompra`,`pf2`.`descricao` AS `descricao`,`pf2`.`quant` AS `quant`,`pf2`.`un` AS `un`,`pf2`.`caixas` AS `caixas`,`pf2`.`prcUnitario` AS `prcUnitario`,`pf2`.`codComercial` AS `codComercial`,`pf2`.`dataPrevCompra` AS `dataPrevCompra`,`pf2`.`dataRealCompra` AS `dataRealCompra`,`pf2`.`dataPrevConf` AS `dataPrevConf`,`pf2`.`status` AS `status` from `staccato`.`pedido_fornecedor_has_produto2` `pf2` where (`pf2`.`idVendaProduto2` is null);

-- -----------------------------------------------------
-- View `staccato`.`view_preparar_entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_preparar_entrega`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_preparar_entrega` AS select `vhp`.`idEvento` AS `idEvento`,`vp2`.`idVenda` AS `idVenda`,count(`vp2`.`idVenda`) AS `produtos`,group_concat(distinct `vp2`.`idNFeSaida` separator ',') AS `idNFeSaida` from (`staccato`.`veiculo_has_produto` `vhp` left join `staccato`.`venda_has_produto2` `vp2` on((`vhp`.`idVendaProduto2` = `vp2`.`idVendaProduto2`))) group by `vp2`.`idVenda`,`vhp`.`idEvento`;

-- -----------------------------------------------------
-- View `staccato`.`view_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_produto`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_produto` AS select `p`.`idProduto` AS `idProduto`,`p`.`estoque` AS `estoque`,`p`.`promocao` AS `promocao`,`p`.`descontinuado` AS `descontinuado`,`p`.`desativado` AS `desativado`,`p`.`representacao` AS `representacao`,`p`.`fornecedor` AS `fornecedor`,`e`.`status` AS `statusEstoque`,`p`.`descricao` AS `descricao`,`e`.`lote` AS `lote`,`p`.`estoqueRestante` AS `estoqueRestante`,cast((`p`.`estoqueRestante` / `p`.`quantCaixa`) as decimal(15,4)) AS `estoqueCaixa`,`p`.`un` AS `un`,`p`.`un2` AS `un2`,`p`.`colecao` AS `colecao`,`p`.`tipo` AS `tipo`,`p`.`minimo` AS `minimo`,`p`.`multiplo` AS `multiplo`,`p`.`m2cx` AS `m2cx`,`p`.`pccx` AS `pccx`,`p`.`kgcx` AS `kgcx`,`p`.`formComercial` AS `formComercial`,`p`.`codComercial` AS `codComercial`,`p`.`precoVenda` AS `precoVenda`,`p`.`validade` AS `validade`,`p`.`ui` AS `ui` from (`staccato`.`produto` `p` left join `staccato`.`estoque` `e` on((`p`.`idEstoque` = `e`.`idEstoque`)));

-- -----------------------------------------------------
-- View `staccato`.`view_produto_endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_produto_endereco`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_produto_endereco` AS select `vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`idProduto` AS `idProduto`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntregaPedido`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntregaPedido`,`vp2`.`dataPrevEnt` AS `dataPrevEntProduto`,`vp2`.`dataRealEnt` AS `dataRealEnt`,if(((`staccato`.`vep`.`Outros` = 0) and (`staccato`.`vep`.`Estoque` > 0)),'100% Estoque',if(((`staccato`.`vep`.`Outros` > 0) and (`staccato`.`vep`.`Estoque` > 0)),'Parte Estoque','Sem Estoque')) AS `statusEstoque`,`vp2`.`status` AS `status`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`idVenda` AS `idVenda`,`n`.`numeroNFe` AS `idNFeSaida`,`n2`.`numeroNFe` AS `idNFeFutura`,`vp2`.`produto` AS `produto`,group_concat(distinct `e`.`idEstoque` separator ', ') AS `idEstoque`,group_concat(distinct `e`.`lote` separator ', ') AS `lote`,group_concat(distinct `e`.`local` separator ', ') AS `local`,group_concat(distinct `e`.`bloco` separator ', ') AS `bloco`,`vp2`.`caixas` AS `caixas`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`vp2`.`quantCaixa` AS `quantCaixa`,`vp2`.`kg` AS `kg`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial`,group_concat(`ehc`.`idConsumo` separator ',') AS `idConsumo`,`che`.`bairro` AS `Bairro`,`che`.`logradouro` AS `Logradouro`,`che`.`numero` AS `Número`,`che`.`cidade` AS `Cidade` from (((((((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`estoque_has_consumo` `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`nfe` `n` on((`vp2`.`idNFeSaida` = `n`.`idNFe`))) left join `staccato`.`nfe` `n2` on((`vp2`.`idNFeFutura` = `n2`.`idNFe`))) left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`cliente_has_endereco` `che` on((`v`.`idEnderecoEntrega` = `che`.`idEndereco`))) left join `staccato`.`view_entrega_pendente` `vep` on((`vp2`.`idVenda` = `staccato`.`vep`.`idVenda`))) where (`v`.`representacao` = false) group by `vp2`.`idVendaProduto2` having (`vp2`.`status` not in ('entregue','cancelado','quebrado','pendente dev.','substituido','devolvido','devolvido estoque','devolvido forn.','finalizado'));

-- -----------------------------------------------------
-- View `staccato`.`view_produto_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_produto_estoque`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_produto_estoque` AS select `vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`idRelacionado` AS `idRelacionado`,`vp2`.`idProduto` AS `idProduto`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`produto` AS `produto`,if((`vp2`.`total` < 0.0),0,(`vp2`.`total` / `vp2`.`quant`)) AS `descUnitario`,abs(`vp2`.`caixas`) AS `caixas`,abs(`vp2`.`quant`) AS `quant`,`vp2`.`un` AS `un`,if((`vp2`.`total` < 0.0),0,`vp2`.`total`) AS `total`,`vp2`.`reposicaoEntrega` AS `reposicaoEntrega`,`vp2`.`quantCaixa` AS `quantCaixa`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial`,coalesce(`p`.`codBarras`,'') AS `codBarras`,abs((`p`.`kgcx` * `vp2`.`caixas`)) AS `peso`,coalesce(`p`.`ncm`,'') AS `ncm`,coalesce(`n`.`cest`,'') AS `cest`,NULL AS `cfop`,NULL AS `unTrib`,NULL AS `numeroPedido`,NULL AS `itemPedido`,NULL AS `tipoICMS`,NULL AS `orig`,NULL AS `cstICMS`,NULL AS `modBC`,NULL AS `vBC`,NULL AS `pICMS`,NULL AS `vICMS`,NULL AS `modBCST`,NULL AS `pMVAST`,NULL AS `vBCST`,NULL AS `pICMSST`,NULL AS `vICMSST`,NULL AS `cEnq`,NULL AS `cstIPI`,NULL AS `cstPIS`,NULL AS `vBCPIS`,NULL AS `pPIS`,NULL AS `vPIS`,NULL AS `cstCOFINS`,NULL AS `vBCCOFINS`,NULL AS `pCOFINS`,NULL AS `vCOFINS` from ((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`produto` `p` on((`vp2`.`idProduto` = `p`.`idProduto`))) left join `staccato`.`ncm` `n` on((`p`.`ncm` = `n`.`ncm`)));

-- -----------------------------------------------------
-- View `staccato`.`view_produto_pendente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_produto_pendente`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_produto_pendente` AS select `vp2`.`status` AS `status`,`vp2`.`idVendaProduto2` AS `idVendaProduto2`,`vp2`.`idVendaProdutoFK` AS `idVendaProdutoFK`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`idVenda` AS `idVenda`,`vp2`.`idProduto` AS `idProduto`,`vp2`.`produto` AS `produto`,`vp2`.`obs` AS `obs`,`p`.`colecao` AS `colecao`,`vp2`.`formComercial` AS `formComercial`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`p`.`un2` AS `Un2`,`vp2`.`caixas` AS `Caixas`,`p`.`kgcx` AS `kgcx`,`vp2`.`codComercial` AS `codComercial`,`p`.`codBarras` AS `codBarras`,`p`.`custo` AS `custo`,(`vp2`.`total` / `vp2`.`quant`) AS `custoVenda`,`vp2`.`idCompra` AS `idCompra`,`p`.`st` AS `st` from (`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`produto` `p` on((`vp2`.`idProduto` = `p`.`idProduto`)));

-- -----------------------------------------------------
-- View `staccato`.`view_produtos_pendentes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_produtos_pendentes`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_produtos_pendentes` AS select group_concat(distinct `vp`.`fornecedor` separator ',') AS `Fornecedor`,group_concat(distinct `vp`.`produto` separator ',') AS `Descrição`,group_concat(distinct `vp`.`formComercial` separator ',') AS `Form`,sum(`vp`.`quant`) AS `Quant`,group_concat(distinct `vp`.`un` separator ',') AS `Un`,group_concat(distinct `p`.`un2` separator ',') AS `Un2`,group_concat(distinct `vp`.`caixas` separator ',') AS `Caixas`,`vp`.`codComercial` AS `Cód Com`,group_concat(distinct `vp`.`idCompra` separator ',') AS `idCompra`,`vp`.`status` AS `Status`,group_concat(distinct `v`.`statusFinanceiro` separator ',') AS `Financeiro`,monthname(`v`.`data`) AS `Mês` from ((`staccato`.`venda_has_produto` `vp` left join `staccato`.`venda` `v` on((`v`.`idVenda` = `vp`.`idVenda`))) left join `staccato`.`produto` `p` on((`p`.`idProduto` = `vp`.`idProduto`))) group by `vp`.`status`,`vp`.`codComercial`,`Mês`;

-- -----------------------------------------------------
-- View `staccato`.`view_recebimento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_recebimento`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_recebimento` AS select cast(min((`v`.`data` + interval `v`.`prazoEntrega` day)) as date) AS `prazoEntrega`,group_concat(distinct `pf2`.`dataPrevReceb` separator ',') AS `dataPrevReceb`,`e`.`idEstoque` AS `idEstoque`,`e`.`idNFe` AS `idNFe`,`e`.`lote` AS `lote`,`e`.`local` AS `local`,`e`.`bloco` AS `bloco`,group_concat(distinct `pf2`.`fornecedor` separator ',') AS `fornecedor`,group_concat(distinct `n`.`numeroNFe` separator ',') AS `numeroNFe`,group_concat(distinct `pf2`.`idVenda` separator ', ') AS `idVenda`,`pf2`.`idCompra` AS `idCompra`,group_concat(distinct `pf2`.`ordemCompra` separator ', ') AS `ordemCompra`,`e`.`descricao` AS `produto`,`e`.`codComercial` AS `codComercial`,abs(`e`.`quant`) AS `quant`,`e`.`un` AS `un`,`e`.`caixas` AS `caixas` from ((((`staccato`.`estoque` `e` left join `staccato`.`estoque_has_compra` `ehc` on((`e`.`idEstoque` = `ehc`.`idEstoque`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`ehc`.`idPedido2` = `pf2`.`idPedido2`))) left join `staccato`.`nfe` `n` on((`e`.`idNFe` = `n`.`idNFe`))) left join `staccato`.`venda` `v` on((`v`.`idVenda` = `pf2`.`idVenda`))) where ((`e`.`status` = 'EM RECEBIMENTO') and (`pf2`.`dataPrevReceb` is not null) and (`pf2`.`idPedido2` is not null)) group by `e`.`idEstoque` order by `prazoEntrega`,`e`.`idEstoque`;

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio` AS select group_concat(distinct `c`.`Loja` separator ',') AS `Loja`,group_concat(distinct `c`.`Vendedor` separator ',') AS `Vendedor`,group_concat(distinct `c`.`idUsuario` separator ',') AS `idUsuario`,group_concat(distinct `c`.`idUsuarioConsultor` separator ',') AS `idUsuarioConsultor`,`c`.`idVenda` AS `idVenda`,group_concat(distinct `c`.`Mês` separator ',') AS `Mês`,`v`.`data` AS `Data`,sum(`c`.`Faturamento`) AS `Faturamento`,sum(`c`.`Comissão`) AS `Comissão`,`c`.`porcentagem` AS `porcentagem` from (`staccato`.`comissao` `c` left join `staccato`.`venda` `v` on((`c`.`idVenda` = `v`.`idVenda`))) group by `c`.`Loja`,`c`.`Vendedor`,`c`.`idVenda`,`c`.`porcentagem` order by `c`.`Loja`,`c`.`Vendedor`,`c`.`idVenda`,`c`.`porcentagem`;

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio_loja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio_loja`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio_loja` AS select `staccato`.`v`.`Loja` AS `Loja`,sum(`staccato`.`v`.`Faturamento`) AS `Faturamento`,sum(`staccato`.`v`.`Comissão`) AS `Comissão`,((sum(`staccato`.`v`.`Comissão`) / sum(`staccato`.`v`.`Faturamento`)) * 100) AS `Porcentagem`,`staccato`.`v`.`Mês` AS `Mês`,(group_concat(distinct `staccato`.`r`.`custoReposicao` separator ',') + 0.0) AS `Reposição` from (`staccato`.`view_relatorio` `v` left join `staccato`.`view_relatorio_reposicao` `r` on(((`staccato`.`r`.`loja` = `staccato`.`v`.`Loja`) and (`staccato`.`r`.`data` = `staccato`.`v`.`Mês`)))) group by `staccato`.`v`.`Loja`,`staccato`.`v`.`Mês`;

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio_nfe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio_nfe`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio_nfe` AS select extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/nNF') AS `NFe`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/serie') AS `Serie`,date_format(extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/dhEmi'),'%d/%m/%Y') AS `DataEmi`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vProd') AS `produtos`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vST') AS `icmsst`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vFrete') AS `frete`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vSeg') AS `seguro`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vIPI') AS `ipi`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vOutro') AS `outrasdesp`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vDesc') AS `desconto`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vNF') AS `totalnfe`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vBC') AS `bcicms`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vICMS') AS `icms`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vCOFINS') AS `cofins`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vII') AS `impimp`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/total/ICMSTot/vPIS') AS `pis`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/NFe/infNFe/ide/cNF') AS `tipo`,`staccato`.`nfe`.`tipo` AS `e/s`,extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/protNFe/infProt/nProt') AS `nprotocolo`,date_format(extractvalue(`staccato`.`nfe`.`xml`,'/nfeProc/protNFe/infProt/dhRecbto'),'%d/%m/%Y') AS `dataautor`,`staccato`.`nfe`.`created` AS `Criado em`,`staccato`.`nfe`.`status` AS `status` from `staccato`.`nfe` where ((`staccato`.`nfe`.`tipo` = 'SAIDA') and (`staccato`.`nfe`.`status` = 'AUTORIZADA'));

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio_pagar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio_pagar`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio_pagar` AS select `cp`.`dataEmissao` AS `dataEmissao`,`cp`.`dataRealizado` AS `dataRealizado`,`cp`.`valorReal` AS `valorReal`,concat(`lhc`.`banco`,' - ',`lhc`.`agencia`,' - ',`lhc`.`conta`) AS `Conta`,`cp`.`observacao` AS `observacao`,`cp`.`contraParte` AS `contraParte`,`cp`.`grupo` AS `grupo`,`cp`.`subGrupo` AS `subGrupo` from ((`staccato`.`conta_a_pagar_has_pagamento` `cp` left join `staccato`.`nfe` `n` on((`cp`.`nfe` = `n`.`idNFe`))) left join `staccato`.`loja_has_conta` `lhc` on((`cp`.`idConta` = `lhc`.`idConta`))) where ((`cp`.`dataRealizado` is not null) and (`cp`.`valorReal` is not null) and (`cp`.`status` = 'PAGO') and (`cp`.`desativado` = false)) order by `cp`.`dataRealizado`;

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio_receber`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio_receber`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio_receber` AS select `cr`.`dataEmissao` AS `dataEmissao`,`cr`.`dataRealizado` AS `dataRealizado`,`cr`.`valorReal` AS `valorReal`,concat(`lhc`.`banco`,' - ',`lhc`.`agencia`,' - ',`lhc`.`conta`) AS `Conta`,`cr`.`observacao` AS `observacao`,`cr`.`contraParte` AS `contraParte`,`cr`.`grupo` AS `grupo`,`cr`.`subGrupo` AS `subGrupo` from (`staccato`.`conta_a_receber_has_pagamento` `cr` left join `staccato`.`loja_has_conta` `lhc` on((`cr`.`idConta` = `lhc`.`idConta`))) where ((`cr`.`valorReal` is not null) and (`cr`.`status` = 'RECEBIDO') and (`cr`.`desativado` = false)) order by `cr`.`dataRealizado`;

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio_reposicao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio_reposicao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio_reposicao` AS select `l`.`descricao` AS `loja`,date_format(`v`.`data`,'%Y-%m') AS `data`,sum((`vp2`.`quant` * `p`.`custo`)) AS `custoReposicao` from (((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`produto` `p` on((`vp2`.`idProduto` = `p`.`idProduto`))) left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`loja` `l` on((`v`.`idLoja` = `l`.`idLoja`))) where (`vp2`.`reposicaoEntrega` = true) group by `l`.`descricao`,date_format(`v`.`data`,'%Y-%m') order by `l`.`descricao`,date_format(`v`.`data`,'%Y-%m');

-- -----------------------------------------------------
-- View `staccato`.`view_relatorio_vendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_relatorio_vendedor`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_relatorio_vendedor` AS select `c`.`Loja` AS `Loja`,group_concat(distinct `c`.`Vendedor` separator ',') AS `Vendedor`,`c`.`idUsuario` AS `idUsuario`,group_concat(distinct `c`.`idUsuarioConsultor` separator ',') AS `idUsuarioConsultor`,sum(`c`.`Faturamento`) AS `Faturamento`,sum(`c`.`Comissão`) AS `Comissão`,((sum(`c`.`Comissão`) / sum(`c`.`Faturamento`)) * 100) AS `Porcentagem`,`c`.`Mês` AS `Mês` from `staccato`.`comissao` `c` group by `c`.`idUsuario`,`c`.`Loja`,`c`.`Mês` order by `c`.`Loja`;

-- -----------------------------------------------------
-- View `staccato`.`view_resumo_relatorio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_resumo_relatorio`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_resumo_relatorio` AS select `l`.`descricao` AS `Loja`,`u`.`user` AS `Vendedor`,sum(if(((date_format(`o`.`data`,'%Y-%m') < `MYDATE`()) and ((`o`.`status` in ('ATIVO','EXPIRADO')) or ((`o`.`status` = 'FECHADO') and (date_format(`v`.`data`,'%Y-%m') >= `MYDATE`())) or ((`o`.`status` = 'PERDIDO') and (date_format(`o`.`lastUpdated`,'%Y-%m') >= `MYDATE`())))),`o`.`total`,0)) AS `Validos Anteriores`,sum(if(((date_format(`o`.`data`,'%Y-%m') = `MYDATE`()) and (`o_1`.`data` is null)),`o`.`total`,0)) AS `Gerados Mes`,sum(if(((date_format(`o`.`data`,'%Y-%m') = `MYDATE`()) and (`o_1`.`data` is not null)),`o`.`total`,0)) AS `Revalidados Mes`,sum(if(((date_format(`v`.`data`,'%Y-%m') = `MYDATE`()) and (`o`.`status` = 'FECHADO')),`o`.`total`,0)) AS `Fechados Mes`,sum(if(((date_format(`o`.`lastUpdated`,'%Y-%m') = `MYDATE`()) and (`o`.`status` = 'PERDIDO')),`o`.`total`,0)) AS `Perdidos Mes`,sum(if(((date_format(`o`.`data`,'%Y-%m') <= `MYDATE`()) and ((`o`.`status` = 'ATIVO') or (`o`.`status` = 'EXPIRADO') or ((`o`.`status` = 'FECHADO') and (date_format(`v`.`data`,'%Y-%m') > `MYDATE`())) or ((`o`.`status` = 'PERDIDO') and (date_format(`o`.`lastUpdated`,'%Y-%m') > `MYDATE`())))),`o`.`total`,0)) AS `Validos Mes`,((sum(if(((date_format(`v`.`data`,'%Y-%m') = `MYDATE`()) and (`o`.`status` = 'FECHADO')),`o`.`total`,0)) / (sum(if(((date_format(`o`.`data`,'%Y-%m') = `MYDATE`()) and (`o_1`.`data` is null)),`o`.`total`,0)) + sum(if(((date_format(`o`.`data`,'%Y-%m') = `MYDATE`()) and (`o_1`.`data` is not null)),`o`.`total`,0)))) * 100) AS `% Fechados / Gerados`,((sum(if(((date_format(`v`.`data`,'%Y-%m') = `MYDATE`()) and (`o`.`status` = 'FECHADO')),`o`.`total`,0)) / ((sum(if(((date_format(`o`.`data`,'%Y-%m') < `MYDATE`()) and ((`o`.`status` = 'ATIVO') or (`o`.`status` = 'EXPIRADO') or ((`o`.`status` = 'FECHADO') and (date_format(`v`.`data`,'%Y-%m') >= `MYDATE`())) or ((`o`.`status` = 'PERDIDO') and (date_format(`o`.`lastUpdated`,'%Y-%m') >= `MYDATE`())))),`o`.`total`,0)) + sum(if(((date_format(`o`.`data`,'%Y-%m') = `MYDATE`()) and (`o_1`.`data` is null)),`o`.`total`,0))) + sum(if(((date_format(`o`.`data`,'%Y-%m') = `MYDATE`()) and (`o_1`.`data` is not null)),`o`.`total`,0)))) * 100) AS `% Fechados / Carteira` from ((((`staccato`.`orcamento` `o` left join `staccato`.`loja` `l` on((`o`.`idLoja` = `l`.`idLoja`))) left join `staccato`.`usuario` `u` on((`o`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`orcamento` `o_1` on((`o`.`replicadoDe` = `o_1`.`idOrcamento`))) left join `staccato`.`venda` `v` on((`o`.`idOrcamento` = `v`.`idOrcamento`))) where (`o`.`status` not in ('REPLICADO','CANCELADO')) group by `l`.`descricao`,`u`.`user` order by `l`.`descricao`,`u`.`user`;

-- -----------------------------------------------------
-- View `staccato`.`view_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_usuario`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_usuario` AS select `l`.`descricao` AS `descricao`,`u`.`idUsuario` AS `idUsuario`,`u`.`idLoja` AS `idLoja`,`u`.`user` AS `user`,`u`.`passwd` AS `passwd`,`u`.`tipo` AS `tipo`,`u`.`nome` AS `nome`,`u`.`email` AS `email`,`u`.`especialidade` AS `especialidade`,`u`.`desativado` AS `desativado`,`u`.`created` AS `created`,`u`.`lastUpdated` AS `lastUpdated` from (`staccato`.`usuario` `u` left join `staccato`.`loja` `l` on((`u`.`idLoja` = `l`.`idLoja`)));

-- -----------------------------------------------------
-- View `staccato`.`view_validacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_validacao`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_validacao` AS select `v`.`idVenda` AS `idVenda`,((`v`.`subTotalLiq` + `v`.`frete`) - `v`.`descontoReais`) AS `soma`,`v`.`total` AS `total`,sum(`c`.`valor`) AS `Pag.`,(sum(`c`.`valor`) - `v`.`total`) AS `Dif` from (`staccato`.`venda` `v` left join `staccato`.`conta_a_receber_has_pagamento` `c` on((`v`.`idVenda` = `c`.`idVenda`))) where ((`c`.`tipo` <> 'Crédito') and (not((`v`.`idVenda` like '%D'))) and (`c`.`desativado` = false)) group by `c`.`idVenda`;

-- -----------------------------------------------------
-- View `staccato`.`view_venda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_venda`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_venda` AS select `v`.`idLoja` AS `idLoja`,`v`.`idUsuario` AS `idUsuario`,`v`.`idUsuarioConsultor` AS `idUsuarioConsultor`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`v`.`dataFinanceiro` AS `dataFinanceiro`,`v`.`status` AS `status`,if((`v`.`status` not in ('ENTREGUE','CANCELADO','DEVOLVIDO')),((to_days(`v`.`data`) + `v`.`prazoEntrega`) - to_days(now())),'') AS `diasRestantes`,`v`.`idVenda` AS `idVenda`,group_concat(distinct `pf2`.`ordemRepresentacao` separator ',') AS `ordemRepresentacao`,`u`.`nome` AS `vendedor`,`u2`.`nome` AS `consultor`,`c`.`nome_razao` AS `cliente`,`p`.`nome_razao` AS `profissional`,`v`.`data` AS `data`,`v`.`total` AS `total`,group_concat(distinct `vhf`.`dataFollowup` separator ',') AS `dataFollowup`,group_concat(distinct `vhf`.`observacao` separator ',') AS `observacao`,`vp`.`fornecedores` AS `fornecedores` from (((((((((`staccato`.`venda` `v` left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`cliente_has_endereco` `e` on((`v`.`idEnderecoEntrega` = `e`.`idEndereco`))) left join `staccato`.`profissional` `p` on((`v`.`idProfissional` = `p`.`idProfissional`))) left join `staccato`.`cliente` `c` on((`v`.`idCliente` = `c`.`idCliente`))) left join `staccato`.`usuario` `u2` on((`v`.`idUsuarioConsultor` = `u2`.`idUsuario`))) left join (select max(`tmp`.`idFollowup`) AS `idFollowup`,`tmp`.`idVendaBase` AS `idVendaBase` from `staccato`.`venda_has_followup` `tmp` group by `tmp`.`idVendaBase`) `vhf2` on((`v`.`idVendaBase` = `vhf2`.`idVendaBase`))) left join `staccato`.`venda_has_followup` `vhf` on((`vhf2`.`idFollowup` = `vhf`.`idFollowup`))) left join (select group_concat(distinct `staccato`.`venda_has_produto`.`fornecedor` separator ',') AS `fornecedores`,`staccato`.`venda_has_produto`.`idVenda` AS `idVenda` from `staccato`.`venda_has_produto` group by `staccato`.`venda_has_produto`.`idVenda`) `vp` on((`vp`.`idVenda` = `v`.`idVenda`))) left join (select group_concat(distinct `staccato`.`pedido_fornecedor_has_produto2`.`ordemRepresentacao` separator ',') AS `ordemRepresentacao`,`staccato`.`pedido_fornecedor_has_produto2`.`idVenda` AS `idVenda` from `staccato`.`pedido_fornecedor_has_produto2` where ((`staccato`.`pedido_fornecedor_has_produto2`.`idVenda` is not null) and (`staccato`.`pedido_fornecedor_has_produto2`.`ordemRepresentacao` is not null)) group by `staccato`.`pedido_fornecedor_has_produto2`.`idVenda`) `pf2` on((`pf2`.`idVenda` = `v`.`idVenda`))) group by `v`.`idVenda`;

-- -----------------------------------------------------
-- View `staccato`.`view_venda2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_venda2`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_venda2` AS with `vhf2` as (select max(`tmp`.`idFollowup`) AS `idFollowup`,`tmp`.`idVendaBase` AS `idVendaBase` from `staccato`.`venda_has_followup` `tmp` group by `tmp`.`idVendaBase`) select `v`.`idLoja` AS `idLoja`,`v`.`idUsuario` AS `idUsuario`,`v`.`idUsuarioConsultor` AS `idUsuarioConsultor`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`v`.`dataFinanceiro` AS `dataFinanceiro`,`v`.`status` AS `Status`,((to_days(`v`.`data`) + `v`.`prazoEntrega`) - to_days(now())) AS `Dias restantes`,`v`.`idVenda` AS `Código`,group_concat(distinct `pf2`.`ordemRepresentacao` separator ',') AS `OC Rep`,`u`.`nome` AS `Vendedor`,`u2`.`nome` AS `Consultor`,`c`.`nome_razao` AS `Cliente`,`p`.`nome_razao` AS `Profissional`,`v`.`data` AS `Data`,`v`.`total` AS `Total R$`,group_concat(distinct `vhf`.`dataFollowup` separator ',') AS `Data Followup`,group_concat(distinct `vhf`.`observacao` separator ',') AS `Observação`,`vp`.`fornecedores` AS `fornecedores` from (((((((((`staccato`.`venda` `v` left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`cliente_has_endereco` `e` on((`v`.`idEnderecoEntrega` = `e`.`idEndereco`))) left join `staccato`.`profissional` `p` on((`v`.`idProfissional` = `p`.`idProfissional`))) left join `staccato`.`cliente` `c` on((`v`.`idCliente` = `c`.`idCliente`))) left join `staccato`.`usuario` `u2` on((`v`.`idUsuarioConsultor` = `u2`.`idUsuario`))) left join `vhf2` on((`v`.`idVendaBase` = `vhf2`.`idVendaBase`))) left join `staccato`.`venda_has_followup` `vhf` on((`vhf2`.`idFollowup` = `vhf`.`idFollowup`))) left join `staccato`.`venda_has_fornecedor` `vp` on((`vp`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`pedido_fornecedor_has_produto2` `pf2` on((`pf2`.`idVenda` = `v`.`idVenda`))) group by `v`.`idVenda`;

-- -----------------------------------------------------
-- View `staccato`.`view_venda_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_venda_produto`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`view_venda_produto` AS select `vp2`.`status` AS `status`,`v`.`statusFinanceiro` AS `statusFinanceiro`,`v`.`dataFinanceiro` AS `dataFinanceiro`,`vp2`.`idVenda` AS `idVenda`,substring_index(`u`.`nome`,' ',1) AS `Vendedor`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`produto` AS `produto`,`vp2`.`obs` AS `obs`,`vp2`.`caixas` AS `caixas`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial`,cast((`v`.`data` + interval `v`.`prazoEntrega` day) as date) AS `prazoEntrega`,cast((`v`.`data` + interval `v`.`novoPrazoEntrega` day) as date) AS `novoPrazoEntrega`,`vhf`.`dataFollowup` AS `dataFollowup`,`vhf`.`observacao` AS `observacao` from (((`staccato`.`venda` `v` left join `staccato`.`venda_has_produto2` `vp2` on((`v`.`idVenda` = `vp2`.`idVenda`))) left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`venda_has_followup` `vhf` on((`vhf`.`idFollowup` = (select max(`vhf`.`idFollowup`) from `staccato`.`venda_has_followup` `vhf` where (`vhf`.`idVenda` = `v`.`idVenda`)))));

-- -----------------------------------------------------
-- View `staccato`.`view_vinculo_estoque_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`view_vinculo_estoque_compra`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`view_vinculo_estoque_compra` AS select `staccato`.`pedido_fornecedor_has_produto2`.`idPedido2` AS `idPedido2` from `staccato`.`pedido_fornecedor_has_produto2` where `staccato`.`pedido_fornecedor_has_produto2`.`idPedidoFK` in (select `pf2`.`idPedidoFK` from (`staccato`.`pedido_fornecedor_has_produto2` `pf2` join `staccato`.`estoque_has_compra` `ehc` on((`pf2`.`idPedido2` = `ehc`.`idPedido2`))));

-- -----------------------------------------------------
-- View `staccato`.`viewentregasafazer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewentregasafazer`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`viewentregasafazer` AS select `vp2`.`status` AS `status`,`vp2`.`fornecedor` AS `fornecedor`,`vp2`.`idVenda` AS `idVenda`,`vp2`.`produto` AS `produto`,`vp2`.`caixas` AS `caixas`,`vp2`.`quant` AS `quant`,`vp2`.`un` AS `un`,`vp2`.`quantCaixa` AS `quantCaixa`,`vp2`.`codComercial` AS `codComercial`,`vp2`.`formComercial` AS `formComercial`,`p`.`kgcx` AS `kgcx`,((`p`.`kgcx` * `vp2`.`quant`) / `vp2`.`quantCaixa`) AS `peso` from (`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`produto` `p` on((`vp2`.`idProduto` = `p`.`idProduto`))) where (`vp2`.`status` not in ('cancelado','entregue','devolvido','devolvido estoque','devolvido forn.','quebrado','substituido')) group by `vp2`.`idVendaProduto2`;

-- -----------------------------------------------------
-- View `staccato`.`viewlucroreal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`viewlucroreal`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `staccato`.`viewlucroreal` AS select group_concat(distinct date_format(`v`.`data`,'%Y/%m') separator ',') AS `mes`,`l`.`nomeFantasia` AS `nomeFantasia`,(sum(`vp2`.`total`) + 0E0) AS `SomaDetotal`,(sum(((`v`.`frete` / (`v`.`total` - `v`.`frete`)) * `vp2`.`total`)) + 0E0) AS `somadefrete`,sum(if((`ehc`.`valor` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),(`ehc`.`valor` + 0E0))) AS `custo`,if(((group_concat(distinct `ehc`.`valor` separator ',') is null) and (group_concat(distinct `pf`.`prcUnitario` separator ',') is null) and (group_concat(distinct `v`.`representacao` separator ',') = false)),'sem custo','') AS `sem custo`,(sum(if((`v`.`representacao` = true),0,((0.58 * 0.18) * if((`ehc`.`valor` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),`ehc`.`valor`)))) + 0E0) AS `ICMS`,sum(if((`v`.`representacao` = true),((((`f`.`comissaoLoja` / 100) * `vp2`.`total`) * (1 - 0.0925)) * ((0.25 * 1) + (0.09 * 1))),((((`vp2`.`total` - if((`ehc`.`valor` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),(`ehc`.`valor` + 0E0))) - ((0.58 * 0.18) * if((`ehc`.`valor` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),`ehc`.`valor`))) - ((`vp2`.`total` - if((`ehc`.`valor` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),`ehc`.`valor`)) * 0.0925)) * ((0.25 * 1) + (0.09 * 1))))) AS `IR+CSLL`,sum(if((`v`.`representacao` = true),(((`f`.`comissaoLoja` / 100) * `vp2`.`total`) * 0.0925),((`vp2`.`total` - if((`ehc`.`valor` is null),(`pf`.`prcUnitario` * `vp2`.`quant`),`ehc`.`valor`)) * 0.0925))) AS `PIS+Cofins+ISS`,if((`v`.`representacao` = true),'Representacao','Venda') AS `representacao`,sum(if((`v`.`representacao` = true),((`vp2`.`total` * `f`.`comissaoLoja`) / 100),0E0)) AS `Comissao Representacao`,(sum(((`vp2`.`total` * `prof`.`comissao`) / 100)) + 0E0) AS `RT`,sum((if((right(`p`.`ui`,1) = 'L'),(`f`.`comissao2` / 100),(`f`.`comissao1` / 100)) * `vp2`.`total`)) AS `ValorComissao`,sum(if((`cr`.`Cartao` is not null),((-(1) * (`cr`.`Cartao` * `vp2`.`total`)) / (`v`.`total` - `v`.`frete`)),0E0)) AS `Cartao` from (((((((((`staccato`.`venda_has_produto2` `vp2` left join `staccato`.`venda` `v` on((`vp2`.`idVenda` = `v`.`idVenda`))) left join `staccato`.`usuario` `u` on((`v`.`idUsuario` = `u`.`idUsuario`))) left join `staccato`.`loja` `l` on((`vp2`.`idLoja` = `l`.`idLoja`))) left join (select group_concat(distinct `ehc`.`valorUnid` separator ',') AS `valorunid`,group_concat(distinct `ehc`.`desconto` separator ',') AS `desconto`,group_concat(distinct `ehc`.`valor` separator ',') AS `valor`,`ehc`.`idVendaProduto2` AS `idVendaProduto2` from `staccato`.`estoque_has_consumo` `ehc` group by `ehc`.`idVendaProduto2`) `ehc` on((`vp2`.`idVendaProduto2` = `ehc`.`idVendaProduto2`))) left join (select `pf`.`idCompra` AS `idCompra`,`pf`.`idProduto` AS `idProduto`,group_concat(distinct `pf`.`prcUnitario` separator ',') AS `prcUnitario` from `staccato`.`pedido_fornecedor_has_produto` `pf` group by `pf`.`idCompra`,`pf`.`idProduto`) `pf` on(((`vp2`.`idProduto` = `pf`.`idProduto`) and (`vp2`.`idCompra` = `pf`.`idCompra`)))) left join `staccato`.`fornecedor` `f` on((`vp2`.`fornecedor` = `f`.`razaoSocial`))) left join `staccato`.`profissional` `prof` on((`v`.`idProfissional` = `prof`.`idProfissional`))) left join `staccato`.`produto` `p` on((`vp2`.`idProduto` = `p`.`idProduto`))) left join (select sum(`cr`.`valor`) AS `Cartao`,`cr`.`idVenda` AS `idVenda` from `staccato`.`conta_a_receber_has_pagamento` `cr` where ((`cr`.`status` <> 'CANCELADO') and (`cr`.`tipo` like '%Taxa Cartão') and (`cr`.`desativado` = false)) group by `cr`.`idVenda`) `cr` on((`cr`.`idVenda` = `vp2`.`idVenda`))) where ((`vp2`.`status` <> 'CANCELADO') and (`v`.`data` >= '2016-12-01')) group by date_format(`v`.`data`,'%Y-%m'),`l`.`nomeFantasia`,if(((`ehc`.`valorunid` is null) and (`pf`.`prcUnitario` is null) and (`v`.`representacao` = false)),'sem custo',''),if((`v`.`representacao` = true),'Representacao','Venda');

-- -----------------------------------------------------
-- View `staccato`.`xxxx`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staccato`.`xxxx`;
USE `staccato`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `staccato`.`xxxx` AS select `ehc`.`idVendaProduto2` AS `idVendaProduto2`,max(`staccato`.`bbb`.`percst`) AS `percST` from ((`staccato`.`estoque_has_consumo` `ehc` left join `staccato`.`estoque` `e` on((`ehc`.`idEstoque` = `e`.`idEstoque`))) left join `staccato`.`bbb` on((`staccato`.`bbb`.`idNFe` = `e`.`idNFe`))) where ((`staccato`.`bbb`.`percst` is not null) and (`ehc`.`idVendaProduto2` is not null)) group by `ehc`.`idVendaProduto2`;
USE `staccato`;

DELIMITER $$
USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`estoque_has_consumo_AFTER_DELETE`
AFTER DELETE ON `staccato`.`estoque_has_consumo`
FOR EACH ROW
BEGIN
	CALL update_quant_estoque(OLD.idEstoque);
	CALL update_produto_estoque_quant(OLD.idEstoque);
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`estoque_has_consumo_AFTER_INSERT`
AFTER INSERT ON `staccato`.`estoque_has_consumo`
FOR EACH ROW
BEGIN
    CALL update_quant_estoque(NEW.idEstoque);
	CALL update_produto_estoque_quant(NEW.idEstoque);
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`estoque_has_consumo_AFTER_UPDATE`
AFTER UPDATE ON `staccato`.`estoque_has_consumo`
FOR EACH ROW
BEGIN
	IF(NEW.quant <> OLD.quant) THEN 
		CALL update_quant_estoque(NEW.idEstoque);
		CALL update_produto_estoque_quant(NEW.idEstoque);
	END IF;
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`pedido_fornecedor_has_produto_AFTER_INSERT`
AFTER INSERT ON `staccato`.`pedido_fornecedor_has_produto`
FOR EACH ROW
BEGIN
	CALL copy_into_pedido_fornecedor_has_produto2(NEW.idPedido1);
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`venda_has_produto_AFTER_DELETE`
AFTER DELETE ON `staccato`.`venda_has_produto`
FOR EACH ROW
BEGIN
	DELETE FROM comissao WHERE idVendaProduto1 = OLD.idVendaProduto1;
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`venda_has_produto_AFTER_INSERT`
AFTER INSERT ON `staccato`.`venda_has_produto`
FOR EACH ROW
BEGIN
	CALL inserir_comissao(NEW.idVendaProduto1);
    CALL copy_into_venda_has_produto2(NEW.idVendaProduto1);
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`venda_has_produto_AFTER_UPDATE`
AFTER UPDATE ON `staccato`.`venda_has_produto`
FOR EACH ROW
BEGIN
IF(NEW.status <> OLD.status AND NEW.status = 'CANCELADO') THEN DELETE FROM comissao WHERE idVendaProduto1 = NEW.idVendaProduto1; END IF;
END$$

USE `staccato`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `staccato`.`pedido_fornecedor_has_produto2_AFTER_UPDATE`
AFTER UPDATE ON `staccato`.`pedido_fornecedor_has_produto2`
FOR EACH ROW
BEGIN
	IF(NEW.status <> OLD.status) THEN CALL update_pedido_fornecedor_status(NEW.idPedidoFK); END IF;
	IF(NEW.statusFinanceiro <> OLD.statusFinanceiro) THEN CALL update_pedido_fornecedor_statusFinanceiro(NEW.idPedidoFK); END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
